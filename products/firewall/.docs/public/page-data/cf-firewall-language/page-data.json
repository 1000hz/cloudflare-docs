{"componentChunkName":"component---src-components-mdx-custom-renderer-js","path":"/cf-firewall-language","result":{"data":{"mdx":{"id":"8ca7d333-8770-52f2-8674-8a0b2cbb0415","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"pcx-content-type\": \"reference\",\n  \"order\": 600\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"firewall-rules-language\"\n  }, \"Firewall Rules language\"), mdx(\"p\", null, \"The Cloudflare Firewall Rules language is a flexible and intuitive specification for building Firewall Rules expressions. Based on the widely known \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.wireshark.org/docs/wsug_html_chunked/ChWorkBuildDisplayFilterSection.html\"\n  }, \"Wireshark display filters\"), \", the Firewall Rules language allows you to precisely target HTTP requests with a syntax and semantics familiar to security engineers.\"), mdx(\"p\", null, \"When evaluating a firewall rule, Cloudflare compares values associated with an HTTP request to those defined in the firewall rule's \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/firewall/cf-firewall-rules/fields-and-expressions/\"\n  }, \"expression\"), \". If the expression evaluates \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \", Cloudflare triggers the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/firewall/cf-firewall-rules/actions/\"\n  }, \"action\"), \" for that rule.\"), mdx(\"p\", null, \"The Firewall Rules language supports two kinds of expression\\u2014simple and compound.\"), mdx(\"h2\", {\n    \"id\": \"simple-expressions\"\n  }, \"Simple expressions\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Simple expressions\"), \" compare a value from an HTTP request to a value defined in the expression. For example, this simple expression matches Microsoft Exchange Autodiscover requests:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, \"http.request.uri.path matches \\\"/autodiscover\\\\.(xml|src)$\\\"\\n\")), mdx(\"p\", null, \"Simple expressions have the syntax\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, \"<field> <comparison-operator> <value>\\n\")), mdx(\"p\", null, \"where\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/firewall/cf-firewall-language/fields/#fields\"\n  }, \"Fields\"), \" specify properties associated with an HTTP request.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/firewall/cf-firewall-language/operators/#comparison-operators\"\n  }, \"Comparison operators\"), \" define how values must relate to actual request data for an expression to return \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/firewall/cf-firewall-language/values/#values\"\n  }, \"Values\"), \" represent the data associated with fields. When evaluating a firewall rule, Cloudflare compares these values with the actual data obtained from the request.\"))), mdx(\"h2\", {\n    \"id\": \"compound-expressions\"\n  }, \"Compound expressions\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Compound expressions\"), \" use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/firewall/cf-firewall-language/operators/#logical-operators\"\n  }, \"logical operators\"), \" such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"and\"), \" to combine two or more expressions into a single expression.\"), mdx(\"p\", null, \"For example, this expression uses the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"and\"), \" operator to target requests to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"www.example.com\"), \" that are not on ports 80 or 443:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, \"host eq www.example.com and not cf.edge.server_port in {80 443}\\n\")), mdx(\"p\", null, \"Compound expressions have the following general syntax:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, \"<expression> <logical-operator> <expression>\\n\")), mdx(\"p\", null, \"Compound expressions allow you to generate sophisticated, highly targeted firewall rules.\"), mdx(\"h2\", {\n    \"id\": \"grouping-symbols-and-functions\"\n  }, \"Grouping symbols and functions\"), mdx(\"p\", null, \"The Firewall Rules language includes support for grouping symbols and functions. Each of these expand the power and flexibility of the language:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/firewall/cf-firewall-language/operators/#grouping-symbols\"\n  }, \"Grouping symbols\"), \" allow you to explicitly group expressions that should be evaluated together.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/firewall/cf-firewall-language/functions/#functions\"\n  }, \"Functions\"), \" allow you to manipulate and validate values in expressions.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"","type":null,"updated":null}}},"pageContext":{"id":"8ca7d333-8770-52f2-8674-8a0b2cbb0415","fields":{"slug":"/cf-firewall-language"},"frontmatter":{"title":"","type":null,"order":600,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"Firewall Rules language","depth":1}],"tableOfContents":{"items":[{"url":"#firewall-rules-language","title":"Firewall Rules language","items":[{"url":"#simple-expressions","title":"Simple expressions"},{"url":"#compound-expressions","title":"Compound expressions"},{"url":"#grouping-symbols-and-functions","title":"Grouping symbols and functions"}]}]},"parent":{"modifiedTime":"2021-12-17","relativePath":"cf-firewall-language/index.md"}}},"staticQueryHashes":["2814688963","32046230","338033027","598566803","811020565"]}