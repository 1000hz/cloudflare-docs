{"data":{"mdx":{"id":"bbbd02c7-4aab-597c-854c-e0820106027d","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"pcx-content-type\": \"reference\",\n  \"order\": 480,\n  \"type\": \"table\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar TableWrap = makeShortcode(\"TableWrap\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"expression-validation\"\n  }, \"Expression validation\"), mdx(\"p\", null, \"The Cloudflare Filters API supports an endpoint for validating expressions.\"), mdx(TableWrap, {\n    mdxType: \"TableWrap\"\n  }, mdx(\"table\", {\n    style: {\n      \"width\": \"100%\"\n    }\n  }, mdx(\"thead\", null, mdx(\"tr\", null, mdx(\"th\", null, \"Operation\"), mdx(\"th\", null, \"Method + Endpoint\"), mdx(\"th\", null, \"Notes\"))), mdx(\"tbody\", null, mdx(\"tr\", null, mdx(\"td\", {\n    style: {\n      \"width\": \"25%\",\n      \"wordWrap\": \"break-word\",\n      \"whiteSpace\": \"normal\"\n    }\n  }, \"Validate expression via query string (\", mdx(\"em\", null, \"?expression=\"), \") \"), mdx(\"td\", null, mdx(\"code\", {\n    className: \"InlineCode\"\n  }, \"GET /filters/validate-expr\")), mdx(\"td\", null, \"Allows testing and validating expressions without changing anything\")), mdx(\"tr\", null, mdx(\"td\", {\n    style: {\n      \"width\": \"25%\",\n      \"wordWrap\": \"break-word\",\n      \"whiteSpace\": \"normal\"\n    }\n  }, \"Validate expression via JSON object\"), mdx(\"td\", null, mdx(\"code\", {\n    className: \"InlineCode\"\n  }, \"POST /filters/validate-expr\")), mdx(\"td\", null, \"Allows testing and validating expressions without changing anything\"))))), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, \"Examples\"), mdx(\"h3\", {\n    \"id\": \"validate-expression-via-query-string\"\n  }, \"Validate expression via query string\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"---\\nheader: Request\\n---\\ncurl -X GET \\\\\\n'https://api.cloudflare.com/client/v4/filters/validate-expr?expression=ip.src==34' \\\\\\n-H \\\"X-Auth-Email: <EMAIL>\\\" \\\\\\n-H \\\"X-Auth-Key: <API_KEY>\\\"\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Response\\n---\\n{\\n  \\\"result\\\": null,\\n  \\\"success\\\": false,\\n  \\\"errors\\\": [\\n    {\\n      \\\"message\\\": \\\"Filter parsing error:\\\\n`ip.src==34`\\\\n          ^^ couldn't parse address in network: invalid IP address syntax\\\\n\\\"\\n    }\\n  ],\\n  \\\"messages\\\": null\\n}\\n\")), mdx(\"p\", null, \"Note the validation error in the response. In this example, the error is due to an invalid IP address format:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, \"Filter parsing error:\\n`ip.src==34`\\n          ^^ couldn't parse address in network: invalid IP address syntax\\n\")), mdx(\"h3\", {\n    \"id\": \"validate-expression-via-json-object\"\n  }, \"Validate expression via JSON object\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Request\\n---\\ncurl -X POST \\\\\\n\\\"https://api.cloudflare.com/client/v4/filters/validate-expr\\\" \\\\\\n-H \\\"X-Auth-Email: <EMAIL>\\\" \\\\\\n-H \\\"X-Auth-Key: <API_KEY>\\\" \\\\\\n-H \\\"Content-Type: application/json\\\" \\\\\\n-d '{\\n  \\\"expression\\\": \\\"ip.src in {2400:cb00::/32 2405:8100::/2000 2c0f:f248::/32 2a06:98c0::/29}\\\"\\n}' \\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Response\\n---\\n{\\n  \\\"result\\\": null,\\n  \\\"success\\\": false,\\n  \\\"errors\\\": [\\n    {\\n      \\\"message\\\": \\\"Filter parsing error:\\\\n`ip.src in {2400:cb00::/32 2405:8100::/2000 2c0f:f248::/32 2a06:98c0::/29}`\\\\n                                        ^^^^ number too large to fit in target type while parsing with radix 10\\\\n\\\"\\n    }\\n  ],\\n  \\\"messages\\\": null\\n}\\n\")), mdx(\"p\", null, \"Note the validation error in the response. In this example, the value for the subnet mask, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/2000\"), \", is not a valid IPv6 CIDR mask:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, \"Filter parsing error:\\n`ip.src in {2400:cb00::/32 2405:8100::/2000 2c0f:f248::/32 2a06:98c0::/29}`\\n                                        ^^^^ number too large to fit in target type while parsing with radix 10\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"","type":"table","updated":null}}},"pageContext":{"id":"bbbd02c7-4aab-597c-854c-e0820106027d","fields":{"slug":"/api/cf-filters/validation"},"frontmatter":{"title":"","type":"table","order":480,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"Expression validation","depth":1}],"tableOfContents":{"items":[{"url":"#expression-validation","title":"Expression validation","items":[{"url":"#examples","title":"Examples","items":[{"url":"#validate-expression-via-query-string","title":"Validate expression via query string"},{"url":"#validate-expression-via-json-object","title":"Validate expression via JSON object"}]}]}]},"parent":{"modifiedTime":"2022-02-09","relativePath":"api/cf-filters/validation.md"}}}