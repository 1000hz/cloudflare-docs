{"data":{"mdx":{"id":"6cccacf9-a212-5e9a-a5f5-d0eb9b5dcec1","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"pcx-content-type\": \"reference\",\n  \"order\": 430\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Aside = makeShortcode(\"Aside\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"put-examples\"\n  }, \"PUT examples\"), mdx(\"h2\", {\n    \"id\": \"update-multiple-rules\"\n  }, \"Update multiple rules\"), mdx(\"p\", null, \"This example updates several Firewall Rules using a single API call.\"), mdx(\"p\", null, \"You can include up to 25 rules in the JSON object array (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-d\"), \" flag) to update as a batch. The batch is handled as a transaction.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Request\\n---\\ncurl -X PUT \\\\\\n\\\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/firewall/rules\\\" \\\\\\n-H \\\"X-Auth-Email: <EMAIL>\\\" \\\\\\n-H \\\"X-Auth-Key: <API_KEY>\\\" \\\\\\n-H \\\"Content-Type: application/json\\\" \\\\\\n-d '[\\n  {\\n    \\\"id\\\": \\\"<RULE_ID>\\\",\\n    \\\"paused\\\": false,\\n    \\\"description\\\": \\\"Challenge site\\\",\\n    \\\"action\\\": \\\"challenge\\\",\\n    \\\"priority\\\": null,\\n    \\\"filter\\\": {\\n      \\\"id\\\": \\\"<FILTER_ID>\\\",\\n      \\\"expression\\\": \\\"not http.request.uri.path matches \\\\\\\"^/api/.*$\\\\\\\"\\\",\\n      \\\"paused\\\": false,\\n      \\\"description\\\": \\\"not /api\\\"\\n    }\\n  }\\n]'\\n\")), mdx(Aside, {\n    type: \"note\",\n    header: \"Note\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PUT\"), \" does not update the filter specified. It only looks at the filter ID (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<FILTER_ID>\"), \") to update the rule with a new filter.\"), mdx(\"p\", null, \"To update the filter, use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/api/cf-filters\"\n  }, \"Filters API\"), \".\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Response\\n---\\n{\\n  \\\"result\\\": [\\n    {\\n      \\\"id\\\": \\\"<RULE_ID>\\\",\\n      \\\"paused\\\": false,\\n      \\\"description\\\": \\\"Challenge site\\\",\\n      \\\"action\\\": \\\"challenge\\\",\\n      \\\"priority\\\": null,\\n      \\\"filter\\\": {\\n        \\\"id\\\": \\\"<FILTER_ID>\\\",\\n        \\\"expression\\\": \\\"not http.request.uri.path matches \\\\\\\"^/api/.*$\\\\\\\"\\\",\\n        \\\"paused\\\": false,\\n        \\\"description\\\": \\\"not /api\\\"\\n      }\\n    }\\n  ],\\n  \\\"success\\\": true,\\n  \\\"errors\\\": [],\\n  \\\"messages\\\": []\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"update-a-single-rule\"\n  }, \"Update a single rule\"), mdx(\"p\", null, \"This example updates the Firewall Rule with ID \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<RULE_ID>\"), \".\"), mdx(\"p\", null, \"You must include the following fields in the request body:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"id\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"action\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"filter.id\"))), mdx(\"p\", null, \"All other fields are optional.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Request\\n---\\ncurl -X PUT \\\\\\n\\\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/firewall/rules/<RULE_ID>\\\" \\\\\\n-H \\\"X-Auth-Email: <EMAIL>\\\" \\\\\\n-H \\\"X-Auth-Key: <API_KEY>\\\" \\\\\\n-H \\\"Content-Type: application/json\\\" \\\\\\n-d '{\\n  \\\"id\\\": \\\"<RULE_ID>\\\",\\n  \\\"paused\\\": false,\\n  \\\"description\\\": \\\"Do not challenge login from office IPv6\\\",\\n  \\\"action\\\": \\\"allow\\\",\\n  \\\"priority\\\": null,\\n  \\\"filter\\\": {\\n    \\\"id\\\": \\\"<FILTER_ID>\\\",\\n    \\\"expression\\\": \\\"ip.src in {2400:cb00::/32 2803:f800::/32 2c0f:f248::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\\\\\"^.*/wp-login.php$\\\\\\\" or http.request.uri.path ~ \\\\\\\"^.*/xmlrpc.php$\\\\\\\")\\\",\\n    \\\"paused\\\": false,\\n    \\\"description\\\": \\\"Login from office\\\"\\n  }\\n}' \\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Response\\n---\\n{\\n  \\\"result\\\": {\\n    \\\"id\\\": \\\"<RULE_ID>\\\",\\n    \\\"paused\\\": false,\\n    \\\"description\\\": \\\"Do not challenge login from office IPv6\\\",\\n    \\\"action\\\": \\\"allow\\\",\\n    \\\"priority\\\": null,\\n    \\\"filter\\\": {\\n      \\\"id\\\": \\\"<FILTER_ID>\\\",\\n      \\\"expression\\\": \\\"ip.src in {2400:cb00::/32 2803:f800::/32 2c0f:f248::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\\\\\"^.*/wp-login.php$\\\\\\\" or http.request.uri.path ~ \\\\\\\"^.*/xmlrpc.php$\\\\\\\")\\\",\\n      \\\"paused\\\": false,\\n      \\\"description\\\": \\\"Login from office\\\"\\n    }\\n  },\\n  \\\"success\\\": true,\\n  \\\"errors\\\": [],\\n  \\\"messages\\\": []\\n}\\n\")), mdx(Aside, {\n    type: \"note\",\n    header: \"Note\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PUT\"), \" overwrites fields that are not explicitly passed in the request.\"), mdx(\"p\", null, \"For example, if the request omits \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"description\"), \", any previously existing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"description\"), \" value will be erased.\"), mdx(\"p\", null, \"To preserve existing values, issue a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GET\"), \" request and based on the response, determine which fields (and respective values) to include in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PUT\"), \" request.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"","type":null,"updated":null}}},"pageContext":{"id":"6cccacf9-a212-5e9a-a5f5-d0eb9b5dcec1","fields":{"slug":"/api/cf-firewall-rules/put"},"frontmatter":{"title":"","type":null,"order":430,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"PUT examples","depth":1}],"tableOfContents":{"items":[{"url":"#put-examples","title":"PUT examples","items":[{"url":"#update-multiple-rules","title":"Update multiple rules"},{"url":"#update-a-single-rule","title":"Update a single rule"}]}]},"parent":{"modifiedTime":"2022-02-09","relativePath":"api/cf-firewall-rules/put.md"}}}