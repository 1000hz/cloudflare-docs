{"expireTime":9007200899183228000,"key":"gatsby-plugin-mdx-entire-payload-f20cd16c88f1d299e335e96563ec58b3-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"PUT examples","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":15,"offset":15},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":15,"offset":15},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Update multiple rules","position":{"start":{"line":4,"column":4,"offset":20},"end":{"line":4,"column":25,"offset":41},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":17},"end":{"line":4,"column":25,"offset":41},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example updates several Firewall Rules using a single API call.","position":{"start":{"line":6,"column":1,"offset":43},"end":{"line":6,"column":69,"offset":111},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":43},"end":{"line":6,"column":69,"offset":111},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can include up to 25 rules in the JSON object array (","position":{"start":{"line":8,"column":1,"offset":113},"end":{"line":8,"column":58,"offset":170},"indent":[]}},{"type":"inlineCode","value":"-d","position":{"start":{"line":8,"column":58,"offset":170},"end":{"line":8,"column":62,"offset":174},"indent":[]}},{"type":"text","value":" flag) to update as a batch. The batch is handled as a transaction.","position":{"start":{"line":8,"column":62,"offset":174},"end":{"line":8,"column":129,"offset":241},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":113},"end":{"line":8,"column":129,"offset":241},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"---\nheader: Request\n---\ncurl -X PUT \\\n\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/firewall/rules\" \\\n-H \"X-Auth-Email: <EMAIL>\" \\\n-H \"X-Auth-Key: <API_KEY>\" \\\n-H \"Content-Type: application/json\" \\\n-d '[\n  {\n    \"id\": \"<RULE_ID>\",\n    \"paused\": false,\n    \"description\": \"Challenge site\",\n    \"action\": \"challenge\",\n    \"priority\": null,\n    \"filter\": {\n      \"id\": \"<FILTER_ID>\",\n      \"expression\": \"not http.request.uri.path matches \\\"^/api/.*$\\\"\",\n      \"paused\": false,\n      \"description\": \"not /api\"\n    }\n  }\n]'","position":{"start":{"line":10,"column":1,"offset":243},"end":{"line":34,"column":4,"offset":782},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Aside type='note' header='Note'>","position":{"start":{"line":36,"column":1,"offset":784},"end":{"line":36,"column":34,"offset":817},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"PUT","position":{"start":{"line":38,"column":1,"offset":819},"end":{"line":38,"column":6,"offset":824},"indent":[]}},{"type":"text","value":" does not update the filter specified. It only looks at the filter ID (","position":{"start":{"line":38,"column":6,"offset":824},"end":{"line":38,"column":77,"offset":895},"indent":[]}},{"type":"inlineCode","value":"<FILTER_ID>","position":{"start":{"line":38,"column":77,"offset":895},"end":{"line":38,"column":90,"offset":908},"indent":[]}},{"type":"text","value":") to update the rule with a new filter.","position":{"start":{"line":38,"column":90,"offset":908},"end":{"line":38,"column":129,"offset":947},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":819},"end":{"line":38,"column":129,"offset":947},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To update the filter, use the ","position":{"start":{"line":40,"column":1,"offset":949},"end":{"line":40,"column":31,"offset":979},"indent":[]}},{"type":"link","title":null,"url":"/api/cf-filters","children":[{"type":"text","value":"Filters API","position":{"start":{"line":40,"column":32,"offset":980},"end":{"line":40,"column":43,"offset":991},"indent":[]}}],"position":{"start":{"line":40,"column":31,"offset":979},"end":{"line":40,"column":61,"offset":1009},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":40,"column":61,"offset":1009},"end":{"line":40,"column":62,"offset":1010},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":949},"end":{"line":40,"column":62,"offset":1010},"indent":[]}},{"type":"jsx","value":"</Aside>","position":{"start":{"line":42,"column":1,"offset":1012},"end":{"line":42,"column":9,"offset":1020},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"---\nheader: Response\n---\n{\n  \"result\": [\n    {\n      \"id\": \"<RULE_ID>\",\n      \"paused\": false,\n      \"description\": \"Challenge site\",\n      \"action\": \"challenge\",\n      \"priority\": null,\n      \"filter\": {\n        \"id\": \"<FILTER_ID>\",\n        \"expression\": \"not http.request.uri.path matches \\\"^/api/.*$\\\"\",\n        \"paused\": false,\n        \"description\": \"not /api\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": []\n}","position":{"start":{"line":44,"column":1,"offset":1022},"end":{"line":68,"column":4,"offset":1472},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Update a single rule","position":{"start":{"line":70,"column":4,"offset":1477},"end":{"line":70,"column":24,"offset":1497},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1474},"end":{"line":70,"column":24,"offset":1497},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example updates the Firewall Rule with ID ","position":{"start":{"line":72,"column":1,"offset":1499},"end":{"line":72,"column":48,"offset":1546},"indent":[]}},{"type":"inlineCode","value":"<RULE_ID>","position":{"start":{"line":72,"column":48,"offset":1546},"end":{"line":72,"column":59,"offset":1557},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":72,"column":59,"offset":1557},"end":{"line":72,"column":60,"offset":1558},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1499},"end":{"line":72,"column":60,"offset":1558},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You must include the following fields in the request body:","position":{"start":{"line":74,"column":1,"offset":1560},"end":{"line":74,"column":59,"offset":1618},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1560},"end":{"line":74,"column":59,"offset":1618},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"id","position":{"start":{"line":76,"column":3,"offset":1622},"end":{"line":76,"column":7,"offset":1626},"indent":[]}}],"position":{"start":{"line":76,"column":3,"offset":1622},"end":{"line":76,"column":7,"offset":1626},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":1620},"end":{"line":76,"column":7,"offset":1626},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"action","position":{"start":{"line":77,"column":3,"offset":1629},"end":{"line":77,"column":11,"offset":1637},"indent":[]}}],"position":{"start":{"line":77,"column":3,"offset":1629},"end":{"line":77,"column":11,"offset":1637},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":1627},"end":{"line":77,"column":11,"offset":1637},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"filter.id","position":{"start":{"line":78,"column":3,"offset":1640},"end":{"line":78,"column":14,"offset":1651},"indent":[]}}],"position":{"start":{"line":78,"column":3,"offset":1640},"end":{"line":78,"column":14,"offset":1651},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":1638},"end":{"line":78,"column":14,"offset":1651},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":1620},"end":{"line":78,"column":14,"offset":1651},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All other fields are optional.","position":{"start":{"line":80,"column":1,"offset":1653},"end":{"line":80,"column":31,"offset":1683},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":1653},"end":{"line":80,"column":31,"offset":1683},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"---\nheader: Request\n---\ncurl -X PUT \\\n\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/firewall/rules/<RULE_ID>\" \\\n-H \"X-Auth-Email: <EMAIL>\" \\\n-H \"X-Auth-Key: <API_KEY>\" \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"id\": \"<RULE_ID>\",\n  \"paused\": false,\n  \"description\": \"Do not challenge login from office IPv6\",\n  \"action\": \"allow\",\n  \"priority\": null,\n  \"filter\": {\n    \"id\": \"<FILTER_ID>\",\n    \"expression\": \"ip.src in {2400:cb00::/32 2803:f800::/32 2c0f:f248::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\"^.*/wp-login.php$\\\" or http.request.uri.path ~ \\\"^.*/xmlrpc.php$\\\")\",\n    \"paused\": false,\n    \"description\": \"Login from office\"\n  }\n}' ","position":{"start":{"line":82,"column":1,"offset":1685},"end":{"line":104,"column":4,"offset":2358},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"json","meta":null,"value":"---\nheader: Response\n---\n{\n  \"result\": {\n    \"id\": \"<RULE_ID>\",\n    \"paused\": false,\n    \"description\": \"Do not challenge login from office IPv6\",\n    \"action\": \"allow\",\n    \"priority\": null,\n    \"filter\": {\n      \"id\": \"<FILTER_ID>\",\n      \"expression\": \"ip.src in {2400:cb00::/32 2803:f800::/32 2c0f:f248::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\"^.*/wp-login.php$\\\" or http.request.uri.path ~ \\\"^.*/xmlrpc.php$\\\")\",\n      \"paused\": false,\n      \"description\": \"Login from office\"\n    }\n  },\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": []\n}","position":{"start":{"line":106,"column":1,"offset":2360},"end":{"line":128,"column":4,"offset":2929},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Aside type='note' header='Note'>","position":{"start":{"line":130,"column":1,"offset":2931},"end":{"line":130,"column":34,"offset":2964},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"PUT","position":{"start":{"line":132,"column":1,"offset":2966},"end":{"line":132,"column":6,"offset":2971},"indent":[]}},{"type":"text","value":" overwrites fields that are not explicitly passed in the request.","position":{"start":{"line":132,"column":6,"offset":2971},"end":{"line":132,"column":71,"offset":3036},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":2966},"end":{"line":132,"column":71,"offset":3036},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, if the request omits ","position":{"start":{"line":134,"column":1,"offset":3038},"end":{"line":134,"column":35,"offset":3072},"indent":[]}},{"type":"inlineCode","value":"description","position":{"start":{"line":134,"column":35,"offset":3072},"end":{"line":134,"column":48,"offset":3085},"indent":[]}},{"type":"text","value":", any previously existing ","position":{"start":{"line":134,"column":48,"offset":3085},"end":{"line":134,"column":74,"offset":3111},"indent":[]}},{"type":"inlineCode","value":"description","position":{"start":{"line":134,"column":74,"offset":3111},"end":{"line":134,"column":87,"offset":3124},"indent":[]}},{"type":"text","value":" value will be erased.","position":{"start":{"line":134,"column":87,"offset":3124},"end":{"line":134,"column":109,"offset":3146},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":3038},"end":{"line":134,"column":109,"offset":3146},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To preserve existing values, issue a ","position":{"start":{"line":136,"column":1,"offset":3148},"end":{"line":136,"column":38,"offset":3185},"indent":[]}},{"type":"inlineCode","value":"GET","position":{"start":{"line":136,"column":38,"offset":3185},"end":{"line":136,"column":43,"offset":3190},"indent":[]}},{"type":"text","value":" request and based on the response, determine which fields (and respective values) to include in your ","position":{"start":{"line":136,"column":43,"offset":3190},"end":{"line":136,"column":145,"offset":3292},"indent":[]}},{"type":"inlineCode","value":"PUT","position":{"start":{"line":136,"column":145,"offset":3292},"end":{"line":136,"column":150,"offset":3297},"indent":[]}},{"type":"text","value":" request.","position":{"start":{"line":136,"column":150,"offset":3297},"end":{"line":136,"column":159,"offset":3306},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":3148},"end":{"line":136,"column":159,"offset":3306},"indent":[]}},{"type":"jsx","value":"</Aside>","position":{"start":{"line":138,"column":1,"offset":3308},"end":{"line":138,"column":9,"offset":3316},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"pcx-content-type\":\"reference\",\"order\":430}","position":{"start":{"line":141,"column":1,"offset":3319},"end":{"line":141,"column":73,"offset":3391},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":141,"column":73,"offset":3391}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"pcx-content-type\": \"reference\",\n  \"order\": 430\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Aside = makeShortcode(\"Aside\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"put-examples\"\n  }, \"PUT examples\"), mdx(\"h2\", {\n    \"id\": \"update-multiple-rules\"\n  }, \"Update multiple rules\"), mdx(\"p\", null, \"This example updates several Firewall Rules using a single API call.\"), mdx(\"p\", null, \"You can include up to 25 rules in the JSON object array (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-d\"), \" flag) to update as a batch. The batch is handled as a transaction.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Request\\n---\\ncurl -X PUT \\\\\\n\\\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/firewall/rules\\\" \\\\\\n-H \\\"X-Auth-Email: <EMAIL>\\\" \\\\\\n-H \\\"X-Auth-Key: <API_KEY>\\\" \\\\\\n-H \\\"Content-Type: application/json\\\" \\\\\\n-d '[\\n  {\\n    \\\"id\\\": \\\"<RULE_ID>\\\",\\n    \\\"paused\\\": false,\\n    \\\"description\\\": \\\"Challenge site\\\",\\n    \\\"action\\\": \\\"challenge\\\",\\n    \\\"priority\\\": null,\\n    \\\"filter\\\": {\\n      \\\"id\\\": \\\"<FILTER_ID>\\\",\\n      \\\"expression\\\": \\\"not http.request.uri.path matches \\\\\\\"^/api/.*$\\\\\\\"\\\",\\n      \\\"paused\\\": false,\\n      \\\"description\\\": \\\"not /api\\\"\\n    }\\n  }\\n]'\\n\")), mdx(Aside, {\n    type: \"note\",\n    header: \"Note\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PUT\"), \" does not update the filter specified. It only looks at the filter ID (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<FILTER_ID>\"), \") to update the rule with a new filter.\"), mdx(\"p\", null, \"To update the filter, use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/api/cf-filters\"\n  }, \"Filters API\"), \".\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Response\\n---\\n{\\n  \\\"result\\\": [\\n    {\\n      \\\"id\\\": \\\"<RULE_ID>\\\",\\n      \\\"paused\\\": false,\\n      \\\"description\\\": \\\"Challenge site\\\",\\n      \\\"action\\\": \\\"challenge\\\",\\n      \\\"priority\\\": null,\\n      \\\"filter\\\": {\\n        \\\"id\\\": \\\"<FILTER_ID>\\\",\\n        \\\"expression\\\": \\\"not http.request.uri.path matches \\\\\\\"^/api/.*$\\\\\\\"\\\",\\n        \\\"paused\\\": false,\\n        \\\"description\\\": \\\"not /api\\\"\\n      }\\n    }\\n  ],\\n  \\\"success\\\": true,\\n  \\\"errors\\\": [],\\n  \\\"messages\\\": []\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"update-a-single-rule\"\n  }, \"Update a single rule\"), mdx(\"p\", null, \"This example updates the Firewall Rule with ID \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<RULE_ID>\"), \".\"), mdx(\"p\", null, \"You must include the following fields in the request body:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"id\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"action\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"filter.id\"))), mdx(\"p\", null, \"All other fields are optional.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Request\\n---\\ncurl -X PUT \\\\\\n\\\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/firewall/rules/<RULE_ID>\\\" \\\\\\n-H \\\"X-Auth-Email: <EMAIL>\\\" \\\\\\n-H \\\"X-Auth-Key: <API_KEY>\\\" \\\\\\n-H \\\"Content-Type: application/json\\\" \\\\\\n-d '{\\n  \\\"id\\\": \\\"<RULE_ID>\\\",\\n  \\\"paused\\\": false,\\n  \\\"description\\\": \\\"Do not challenge login from office IPv6\\\",\\n  \\\"action\\\": \\\"allow\\\",\\n  \\\"priority\\\": null,\\n  \\\"filter\\\": {\\n    \\\"id\\\": \\\"<FILTER_ID>\\\",\\n    \\\"expression\\\": \\\"ip.src in {2400:cb00::/32 2803:f800::/32 2c0f:f248::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\\\\\"^.*/wp-login.php$\\\\\\\" or http.request.uri.path ~ \\\\\\\"^.*/xmlrpc.php$\\\\\\\")\\\",\\n    \\\"paused\\\": false,\\n    \\\"description\\\": \\\"Login from office\\\"\\n  }\\n}' \\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Response\\n---\\n{\\n  \\\"result\\\": {\\n    \\\"id\\\": \\\"<RULE_ID>\\\",\\n    \\\"paused\\\": false,\\n    \\\"description\\\": \\\"Do not challenge login from office IPv6\\\",\\n    \\\"action\\\": \\\"allow\\\",\\n    \\\"priority\\\": null,\\n    \\\"filter\\\": {\\n      \\\"id\\\": \\\"<FILTER_ID>\\\",\\n      \\\"expression\\\": \\\"ip.src in {2400:cb00::/32 2803:f800::/32 2c0f:f248::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\\\\\"^.*/wp-login.php$\\\\\\\" or http.request.uri.path ~ \\\\\\\"^.*/xmlrpc.php$\\\\\\\")\\\",\\n      \\\"paused\\\": false,\\n      \\\"description\\\": \\\"Login from office\\\"\\n    }\\n  },\\n  \\\"success\\\": true,\\n  \\\"errors\\\": [],\\n  \\\"messages\\\": []\\n}\\n\")), mdx(Aside, {\n    type: \"note\",\n    header: \"Note\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PUT\"), \" overwrites fields that are not explicitly passed in the request.\"), mdx(\"p\", null, \"For example, if the request omits \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"description\"), \", any previously existing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"description\"), \" value will be erased.\"), mdx(\"p\", null, \"To preserve existing values, issue a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GET\"), \" request and based on the response, determine which fields (and respective values) to include in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PUT\"), \" request.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"pcx-content-type\": \"reference\",\n  \"order\": 430\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Aside = makeShortcode(\"Aside\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"put-examples\"\n    }}>{`PUT examples`}</h1>\n    <h2 {...{\n      \"id\": \"update-multiple-rules\"\n    }}>{`Update multiple rules`}</h2>\n    <p>{`This example updates several Firewall Rules using a single API call.`}</p>\n    <p>{`You can include up to 25 rules in the JSON object array (`}<inlineCode parentName=\"p\">{`-d`}</inlineCode>{` flag) to update as a batch. The batch is handled as a transaction.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`---\nheader: Request\n---\ncurl -X PUT \\\\\n\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/firewall/rules\" \\\\\n-H \"X-Auth-Email: <EMAIL>\" \\\\\n-H \"X-Auth-Key: <API_KEY>\" \\\\\n-H \"Content-Type: application/json\" \\\\\n-d '[\n  {\n    \"id\": \"<RULE_ID>\",\n    \"paused\": false,\n    \"description\": \"Challenge site\",\n    \"action\": \"challenge\",\n    \"priority\": null,\n    \"filter\": {\n      \"id\": \"<FILTER_ID>\",\n      \"expression\": \"not http.request.uri.path matches \\\\\"^/api/.*$\\\\\"\",\n      \"paused\": false,\n      \"description\": \"not /api\"\n    }\n  }\n]'\n`}</code></pre>\n    <Aside type='note' header='Note' mdxType=\"Aside\">\n      <p><inlineCode parentName=\"p\">{`PUT`}</inlineCode>{` does not update the filter specified. It only looks at the filter ID (`}<inlineCode parentName=\"p\">{`<FILTER_ID>`}</inlineCode>{`) to update the rule with a new filter.`}</p>\n      <p>{`To update the filter, use the `}<a parentName=\"p\" {...{\n          \"href\": \"/api/cf-filters\"\n        }}>{`Filters API`}</a>{`.`}</p>\n    </Aside>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`---\nheader: Response\n---\n{\n  \"result\": [\n    {\n      \"id\": \"<RULE_ID>\",\n      \"paused\": false,\n      \"description\": \"Challenge site\",\n      \"action\": \"challenge\",\n      \"priority\": null,\n      \"filter\": {\n        \"id\": \"<FILTER_ID>\",\n        \"expression\": \"not http.request.uri.path matches \\\\\"^/api/.*$\\\\\"\",\n        \"paused\": false,\n        \"description\": \"not /api\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": []\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"update-a-single-rule\"\n    }}>{`Update a single rule`}</h2>\n    <p>{`This example updates the Firewall Rule with ID `}<inlineCode parentName=\"p\">{`<RULE_ID>`}</inlineCode>{`.`}</p>\n    <p>{`You must include the following fields in the request body:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`id`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`action`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`filter.id`}</inlineCode></li>\n    </ul>\n    <p>{`All other fields are optional.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`---\nheader: Request\n---\ncurl -X PUT \\\\\n\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/firewall/rules/<RULE_ID>\" \\\\\n-H \"X-Auth-Email: <EMAIL>\" \\\\\n-H \"X-Auth-Key: <API_KEY>\" \\\\\n-H \"Content-Type: application/json\" \\\\\n-d '{\n  \"id\": \"<RULE_ID>\",\n  \"paused\": false,\n  \"description\": \"Do not challenge login from office IPv6\",\n  \"action\": \"allow\",\n  \"priority\": null,\n  \"filter\": {\n    \"id\": \"<FILTER_ID>\",\n    \"expression\": \"ip.src in {2400:cb00::/32 2803:f800::/32 2c0f:f248::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\\\"^.*/wp-login.php$\\\\\" or http.request.uri.path ~ \\\\\"^.*/xmlrpc.php$\\\\\")\",\n    \"paused\": false,\n    \"description\": \"Login from office\"\n  }\n}' \n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`---\nheader: Response\n---\n{\n  \"result\": {\n    \"id\": \"<RULE_ID>\",\n    \"paused\": false,\n    \"description\": \"Do not challenge login from office IPv6\",\n    \"action\": \"allow\",\n    \"priority\": null,\n    \"filter\": {\n      \"id\": \"<FILTER_ID>\",\n      \"expression\": \"ip.src in {2400:cb00::/32 2803:f800::/32 2c0f:f248::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\\\"^.*/wp-login.php$\\\\\" or http.request.uri.path ~ \\\\\"^.*/xmlrpc.php$\\\\\")\",\n      \"paused\": false,\n      \"description\": \"Login from office\"\n    }\n  },\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": []\n}\n`}</code></pre>\n    <Aside type='note' header='Note' mdxType=\"Aside\">\n      <p><inlineCode parentName=\"p\">{`PUT`}</inlineCode>{` overwrites fields that are not explicitly passed in the request.`}</p>\n      <p>{`For example, if the request omits `}<inlineCode parentName=\"p\">{`description`}</inlineCode>{`, any previously existing `}<inlineCode parentName=\"p\">{`description`}</inlineCode>{` value will be erased.`}</p>\n      <p>{`To preserve existing values, issue a `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` request and based on the response, determine which fields (and respective values) to include in your `}<inlineCode parentName=\"p\">{`PUT`}</inlineCode>{` request.`}</p>\n    </Aside>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}