{"expireTime":9007200899183226000,"key":"gatsby-plugin-mdx-entire-payload-d33f2422e3013f94dc23059e7f28b236-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Site administration—Require known IP addresses","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":49,"offset":49},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":49,"offset":49},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If an attack compromises the administrative area of your website, the consequences can be severe. With Firewall Rules, you can protect your site’s administrative area by blocking requests for access to administrative paths that do not come from a known IP address.","position":{"start":{"line":4,"column":1,"offset":51},"end":{"line":4,"column":265,"offset":315},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":51},"end":{"line":4,"column":265,"offset":315},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The example below limits access to the WordPress administrative area, ","position":{"start":{"line":6,"column":1,"offset":317},"end":{"line":6,"column":71,"offset":387},"indent":[]}},{"type":"inlineCode","value":"/wp-admin/","position":{"start":{"line":6,"column":71,"offset":387},"end":{"line":6,"column":83,"offset":399},"indent":[]}},{"type":"text","value":", by ","position":{"start":{"line":6,"column":83,"offset":399},"end":{"line":6,"column":88,"offset":404},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"blocking","position":{"start":{"line":6,"column":89,"offset":405},"end":{"line":6,"column":97,"offset":413},"indent":[]}}],"position":{"start":{"line":6,"column":88,"offset":404},"end":{"line":6,"column":98,"offset":414},"indent":[]}},{"type":"text","value":" requests that do not originate from a specified set of IP addresses.","position":{"start":{"line":6,"column":98,"offset":414},"end":{"line":6,"column":167,"offset":483},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":317},"end":{"line":6,"column":167,"offset":483},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To prevent attackers from successfully using a permutation of ","position":{"start":{"line":8,"column":1,"offset":485},"end":{"line":8,"column":63,"offset":547},"indent":[]}},{"type":"inlineCode","value":"/wp-admin/","position":{"start":{"line":8,"column":63,"offset":547},"end":{"line":8,"column":75,"offset":559},"indent":[]}},{"type":"text","value":" such as ","position":{"start":{"line":8,"column":75,"offset":559},"end":{"line":8,"column":84,"offset":568},"indent":[]}},{"type":"inlineCode","value":"/wP-AdMiN/","position":{"start":{"line":8,"column":84,"offset":568},"end":{"line":8,"column":96,"offset":580},"indent":[]}},{"type":"text","value":", use the ","position":{"start":{"line":8,"column":96,"offset":580},"end":{"line":8,"column":106,"offset":590},"indent":[]}},{"type":"inlineCode","value":"lower()","position":{"start":{"line":8,"column":106,"offset":590},"end":{"line":8,"column":115,"offset":599},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":8,"column":115,"offset":599},"end":{"line":8,"column":116,"offset":600},"indent":[]}},{"type":"link","title":null,"url":"https://developers.cloudflare.com/ruleset-engine/rules-language/functions#transformation-functions","children":[{"type":"text","value":"transformation function","position":{"start":{"line":8,"column":117,"offset":601},"end":{"line":8,"column":140,"offset":624},"indent":[]}}],"position":{"start":{"line":8,"column":116,"offset":600},"end":{"line":8,"column":241,"offset":725},"indent":[]}},{"type":"text","value":" to convert the URI path segment to lowercase:","position":{"start":{"line":8,"column":241,"offset":725},"end":{"line":8,"column":287,"offset":771},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":485},"end":{"line":8,"column":287,"offset":771},"indent":[]}},{"type":"jsx","value":"<table>\n  <thead>\n  <tr>\n    <th>Expression</th>\n    <th>Action</th>\n  </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>not (ip.src in {'{10.20.30.40 192.168.1.0/24}'} and lower(http.request.uri.path) contains \"/wp-admin\")</code></td>\n      <td><em>Block</em></td>\n    </tr>\n  </tbody>\n</table>","position":{"start":{"line":10,"column":1,"offset":773},"end":{"line":23,"column":9,"offset":1070},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"pcx-content-type\":\"configuration\"}","position":{"start":{"line":26,"column":1,"offset":1073},"end":{"line":26,"column":65,"offset":1137},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":26,"column":65,"offset":1137}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"pcx-content-type\": \"configuration\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"site-administrationrequire-known-ip-addresses\"\n  }, \"Site administration\\u2014Require known IP addresses\"), mdx(\"p\", null, \"If an attack compromises the administrative area of your website, the consequences can be severe. With Firewall Rules, you can protect your site\\u2019s administrative area by blocking requests for access to administrative paths that do not come from a known IP address.\"), mdx(\"p\", null, \"The example below limits access to the WordPress administrative area, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/wp-admin/\"), \", by \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"blocking\"), \" requests that do not originate from a specified set of IP addresses.\"), mdx(\"p\", null, \"To prevent attackers from successfully using a permutation of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/wp-admin/\"), \" such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/wP-AdMiN/\"), \", use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lower()\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/ruleset-engine/rules-language/functions#transformation-functions\"\n  }, \"transformation function\"), \" to convert the URI path segment to lowercase:\"), mdx(\"table\", null, mdx(\"thead\", null, mdx(\"tr\", null, mdx(\"th\", null, \"Expression\"), mdx(\"th\", null, \"Action\"))), mdx(\"tbody\", null, mdx(\"tr\", null, mdx(\"td\", null, mdx(\"code\", null, \"not (ip.src in \", '{10.20.30.40 192.168.1.0/24}', \" and lower(http.request.uri.path) contains \\\"/wp-admin\\\")\")), mdx(\"td\", null, mdx(\"em\", null, \"Block\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"pcx-content-type\": \"configuration\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"site-administrationrequire-known-ip-addresses\"\n    }}>{`Site administration—Require known IP addresses`}</h1>\n    <p>{`If an attack compromises the administrative area of your website, the consequences can be severe. With Firewall Rules, you can protect your site’s administrative area by blocking requests for access to administrative paths that do not come from a known IP address.`}</p>\n    <p>{`The example below limits access to the WordPress administrative area, `}<inlineCode parentName=\"p\">{`/wp-admin/`}</inlineCode>{`, by `}<em parentName=\"p\">{`blocking`}</em>{` requests that do not originate from a specified set of IP addresses.`}</p>\n    <p>{`To prevent attackers from successfully using a permutation of `}<inlineCode parentName=\"p\">{`/wp-admin/`}</inlineCode>{` such as `}<inlineCode parentName=\"p\">{`/wP-AdMiN/`}</inlineCode>{`, use the `}<inlineCode parentName=\"p\">{`lower()`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.cloudflare.com/ruleset-engine/rules-language/functions#transformation-functions\"\n      }}>{`transformation function`}</a>{` to convert the URI path segment to lowercase:`}</p>\n    <table>\n  <thead>\n  <tr>\n    <th>Expression</th>\n    <th>Action</th>\n  </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>not (ip.src in {'{10.20.30.40 192.168.1.0/24}'} and lower(http.request.uri.path) contains \"/wp-admin\")</code></td>\n      <td><em>Block</em></td>\n    </tr>\n  </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}