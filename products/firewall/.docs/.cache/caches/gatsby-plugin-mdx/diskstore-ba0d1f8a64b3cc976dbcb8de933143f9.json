{"expireTime":9007200899183228000,"key":"gatsby-plugin-mdx-entire-payload-af62ccdd468860c40231e4a54a7845a4-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"POST example","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":15,"offset":15},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":15,"offset":15},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example creates several Firewall Rules using a single API call.","position":{"start":{"line":4,"column":1,"offset":17},"end":{"line":4,"column":69,"offset":85},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":17},"end":{"line":4,"column":69,"offset":85},"indent":[]}},{"type":"jsx","value":"<Aside type=\"note\">","position":{"start":{"line":6,"column":1,"offset":87},"end":{"line":6,"column":20,"offset":106},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To create a Firewall Rule you need a ","position":{"start":{"line":8,"column":1,"offset":108},"end":{"line":8,"column":38,"offset":145},"indent":[]}},{"type":"link","title":null,"url":"/api/cf-filters/what-is-a-filter","children":[{"type":"text","value":"filter","position":{"start":{"line":8,"column":39,"offset":146},"end":{"line":8,"column":45,"offset":152},"indent":[]}}],"position":{"start":{"line":8,"column":38,"offset":145},"end":{"line":8,"column":80,"offset":187},"indent":[]}},{"type":"text","value":" identifier (","position":{"start":{"line":8,"column":80,"offset":187},"end":{"line":8,"column":93,"offset":200},"indent":[]}},{"type":"inlineCode","value":"id","position":{"start":{"line":8,"column":93,"offset":200},"end":{"line":8,"column":97,"offset":204},"indent":[]}},{"type":"text","value":"). If you have not created a filter yet, refer to the ","position":{"start":{"line":8,"column":97,"offset":204},"end":{"line":8,"column":151,"offset":258},"indent":[]}},{"type":"link","title":null,"url":"/api/cf-filters","children":[{"type":"text","value":"Cloudflare Filters API documentation","position":{"start":{"line":8,"column":152,"offset":259},"end":{"line":8,"column":188,"offset":295},"indent":[]}}],"position":{"start":{"line":8,"column":151,"offset":258},"end":{"line":8,"column":206,"offset":313},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":8,"column":206,"offset":313},"end":{"line":8,"column":207,"offset":314},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":108},"end":{"line":8,"column":207,"offset":314},"indent":[]}},{"type":"jsx","value":"</Aside>","position":{"start":{"line":10,"column":1,"offset":316},"end":{"line":10,"column":9,"offset":324},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"---\nheader: Request\n---\ncurl -X POST \\\n\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/firewall/rules\" \\\n-H \"X-Auth-Email: <EMAIL>\" \\\n-H \"X-Auth-Key: <API_KEY>\" \\\n-H \"Content-Type: application/json\" \\\n-d '[\n  {\n    \"filter\": {\n      \"id\": \"<FILTER_ID_1>\"\n    },\n    \"action\": \"allow\",\n    \"description\": \"Do not challenge login from office\"\n  },\n  {\n    \"filter\": {\n      \"id\": \"<FILTER_ID_2>\"\n    },\n    \"action\": \"challenge\",\n    \"description\": \"Challenge login\"\n  },\n  {\n    \"filter\": {\n      \"id\": \"<FILTER_ID_3>\"\n    },\n    \"action\": \"js_challenge\",\n    \"description\": \"JS challenge site\"\n  },\n  {\n    \"filter\": {\n      \"id\": \"<FILTER_ID_4>\"\n    },\n    \"action\": \"allow\",\n    \"description\": \"Allow API traffic without challenge\"\n  }\n]'","position":{"start":{"line":12,"column":1,"offset":326},"end":{"line":51,"column":4,"offset":1084},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"json","meta":null,"value":"---\nheader: Response\n---\n{\n  \"result\": [\n    {\n      \"id\": \"<RULE_ID_1>\",\n      \"paused\": false,\n      \"description\": \"Do not challenge login from office\",\n      \"action\": \"allow\",\n      \"priority\": null,\n      \"filter\": {\n        \"id\": \"<FILTER_ID_1>\",\n        \"expression\": \"ip.src in {2400:cb00::/32 2803:f800::/32 2c0f:f248::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\"^.*/wp-login.php$\\\" or http.request.uri.path ~ \\\"^.*/xmlrpc.php$\\\")\",\n        \"paused\": false,\n        \"description\": \"Login from office\"\n      }\n    },\n    {\n      \"id\": \"<RULE_ID_2>\",\n      \"paused\": false,\n      \"description\": \"Challenge login\",\n      \"action\": \"challenge\",\n      \"priority\": null,\n      \"filter\": {\n        \"id\": \"<FILTER_ID_2>\",\n        \"expression\": \"(http.request.uri.path ~ \\\"^.*/wp-login.php$\\\" or http.request.uri.path ~ \\\"^.*/xmlrpc.php$\\\")\",\n        \"paused\": false,\n        \"description\": \"Login\"\n      }\n    },\n    {\n      \"id\": \"<RULE_ID_3>\",\n      \"paused\": false,\n      \"description\": \"JS challenge site\",\n      \"action\": \"js_challenge\",\n      \"priority\": null,\n      \"filter\": {\n        \"id\": \"<FILTER_ID_3>\",\n        \"expression\": \"not http.request.uri.path matches \\\"^/api/.*$\\\"\",\n        \"paused\": false,\n        \"description\": \"not /api\"\n      }\n    },\n    {\n      \"id\": \"<RULE_ID_4>\",\n      \"paused\": false,\n      \"description\": \"Allow API traffic without challenge\",\n      \"action\": \"allow\",\n      \"priority\": null,\n      \"filter\": {\n        \"id\": \"<FILTER_ID_4>\",\n        \"expression\": \"http.request.uri.path matches \\\"^/api/.*$\\\"\",\n        \"paused\": false,\n        \"description\": \"/api\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": []\n}","position":{"start":{"line":53,"column":1,"offset":1086},"end":{"line":116,"column":4,"offset":2780},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"POST example\",\"pcx-content-type\":\"reference\",\"order\":420}","position":{"start":{"line":119,"column":1,"offset":2783},"end":{"line":119,"column":96,"offset":2878},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":119,"column":96,"offset":2878}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"POST example\",\n  \"pcx-content-type\": \"reference\",\n  \"order\": 420\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Aside = makeShortcode(\"Aside\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"post-example\"\n  }, \"POST example\"), mdx(\"p\", null, \"This example creates several Firewall Rules using a single API call.\"), mdx(Aside, {\n    type: \"note\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, \"To create a Firewall Rule you need a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/api/cf-filters/what-is-a-filter\"\n  }, \"filter\"), \" identifier (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \"). If you have not created a filter yet, refer to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/api/cf-filters\"\n  }, \"Cloudflare Filters API documentation\"), \".\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Request\\n---\\ncurl -X POST \\\\\\n\\\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/firewall/rules\\\" \\\\\\n-H \\\"X-Auth-Email: <EMAIL>\\\" \\\\\\n-H \\\"X-Auth-Key: <API_KEY>\\\" \\\\\\n-H \\\"Content-Type: application/json\\\" \\\\\\n-d '[\\n  {\\n    \\\"filter\\\": {\\n      \\\"id\\\": \\\"<FILTER_ID_1>\\\"\\n    },\\n    \\\"action\\\": \\\"allow\\\",\\n    \\\"description\\\": \\\"Do not challenge login from office\\\"\\n  },\\n  {\\n    \\\"filter\\\": {\\n      \\\"id\\\": \\\"<FILTER_ID_2>\\\"\\n    },\\n    \\\"action\\\": \\\"challenge\\\",\\n    \\\"description\\\": \\\"Challenge login\\\"\\n  },\\n  {\\n    \\\"filter\\\": {\\n      \\\"id\\\": \\\"<FILTER_ID_3>\\\"\\n    },\\n    \\\"action\\\": \\\"js_challenge\\\",\\n    \\\"description\\\": \\\"JS challenge site\\\"\\n  },\\n  {\\n    \\\"filter\\\": {\\n      \\\"id\\\": \\\"<FILTER_ID_4>\\\"\\n    },\\n    \\\"action\\\": \\\"allow\\\",\\n    \\\"description\\\": \\\"Allow API traffic without challenge\\\"\\n  }\\n]'\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Response\\n---\\n{\\n  \\\"result\\\": [\\n    {\\n      \\\"id\\\": \\\"<RULE_ID_1>\\\",\\n      \\\"paused\\\": false,\\n      \\\"description\\\": \\\"Do not challenge login from office\\\",\\n      \\\"action\\\": \\\"allow\\\",\\n      \\\"priority\\\": null,\\n      \\\"filter\\\": {\\n        \\\"id\\\": \\\"<FILTER_ID_1>\\\",\\n        \\\"expression\\\": \\\"ip.src in {2400:cb00::/32 2803:f800::/32 2c0f:f248::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\\\\\"^.*/wp-login.php$\\\\\\\" or http.request.uri.path ~ \\\\\\\"^.*/xmlrpc.php$\\\\\\\")\\\",\\n        \\\"paused\\\": false,\\n        \\\"description\\\": \\\"Login from office\\\"\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"<RULE_ID_2>\\\",\\n      \\\"paused\\\": false,\\n      \\\"description\\\": \\\"Challenge login\\\",\\n      \\\"action\\\": \\\"challenge\\\",\\n      \\\"priority\\\": null,\\n      \\\"filter\\\": {\\n        \\\"id\\\": \\\"<FILTER_ID_2>\\\",\\n        \\\"expression\\\": \\\"(http.request.uri.path ~ \\\\\\\"^.*/wp-login.php$\\\\\\\" or http.request.uri.path ~ \\\\\\\"^.*/xmlrpc.php$\\\\\\\")\\\",\\n        \\\"paused\\\": false,\\n        \\\"description\\\": \\\"Login\\\"\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"<RULE_ID_3>\\\",\\n      \\\"paused\\\": false,\\n      \\\"description\\\": \\\"JS challenge site\\\",\\n      \\\"action\\\": \\\"js_challenge\\\",\\n      \\\"priority\\\": null,\\n      \\\"filter\\\": {\\n        \\\"id\\\": \\\"<FILTER_ID_3>\\\",\\n        \\\"expression\\\": \\\"not http.request.uri.path matches \\\\\\\"^/api/.*$\\\\\\\"\\\",\\n        \\\"paused\\\": false,\\n        \\\"description\\\": \\\"not /api\\\"\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"<RULE_ID_4>\\\",\\n      \\\"paused\\\": false,\\n      \\\"description\\\": \\\"Allow API traffic without challenge\\\",\\n      \\\"action\\\": \\\"allow\\\",\\n      \\\"priority\\\": null,\\n      \\\"filter\\\": {\\n        \\\"id\\\": \\\"<FILTER_ID_4>\\\",\\n        \\\"expression\\\": \\\"http.request.uri.path matches \\\\\\\"^/api/.*$\\\\\\\"\\\",\\n        \\\"paused\\\": false,\\n        \\\"description\\\": \\\"/api\\\"\\n      }\\n    }\\n  ],\\n  \\\"success\\\": true,\\n  \\\"errors\\\": [],\\n  \\\"messages\\\": []\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"POST example\",\n  \"pcx-content-type\": \"reference\",\n  \"order\": 420\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Aside = makeShortcode(\"Aside\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"post-example\"\n    }}>{`POST example`}</h1>\n    <p>{`This example creates several Firewall Rules using a single API call.`}</p>\n    <Aside type=\"note\" mdxType=\"Aside\">\n      <p>{`To create a Firewall Rule you need a `}<a parentName=\"p\" {...{\n          \"href\": \"/api/cf-filters/what-is-a-filter\"\n        }}>{`filter`}</a>{` identifier (`}<inlineCode parentName=\"p\">{`id`}</inlineCode>{`). If you have not created a filter yet, refer to the `}<a parentName=\"p\" {...{\n          \"href\": \"/api/cf-filters\"\n        }}>{`Cloudflare Filters API documentation`}</a>{`.`}</p>\n    </Aside>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`---\nheader: Request\n---\ncurl -X POST \\\\\n\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/firewall/rules\" \\\\\n-H \"X-Auth-Email: <EMAIL>\" \\\\\n-H \"X-Auth-Key: <API_KEY>\" \\\\\n-H \"Content-Type: application/json\" \\\\\n-d '[\n  {\n    \"filter\": {\n      \"id\": \"<FILTER_ID_1>\"\n    },\n    \"action\": \"allow\",\n    \"description\": \"Do not challenge login from office\"\n  },\n  {\n    \"filter\": {\n      \"id\": \"<FILTER_ID_2>\"\n    },\n    \"action\": \"challenge\",\n    \"description\": \"Challenge login\"\n  },\n  {\n    \"filter\": {\n      \"id\": \"<FILTER_ID_3>\"\n    },\n    \"action\": \"js_challenge\",\n    \"description\": \"JS challenge site\"\n  },\n  {\n    \"filter\": {\n      \"id\": \"<FILTER_ID_4>\"\n    },\n    \"action\": \"allow\",\n    \"description\": \"Allow API traffic without challenge\"\n  }\n]'\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`---\nheader: Response\n---\n{\n  \"result\": [\n    {\n      \"id\": \"<RULE_ID_1>\",\n      \"paused\": false,\n      \"description\": \"Do not challenge login from office\",\n      \"action\": \"allow\",\n      \"priority\": null,\n      \"filter\": {\n        \"id\": \"<FILTER_ID_1>\",\n        \"expression\": \"ip.src in {2400:cb00::/32 2803:f800::/32 2c0f:f248::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\\\"^.*/wp-login.php$\\\\\" or http.request.uri.path ~ \\\\\"^.*/xmlrpc.php$\\\\\")\",\n        \"paused\": false,\n        \"description\": \"Login from office\"\n      }\n    },\n    {\n      \"id\": \"<RULE_ID_2>\",\n      \"paused\": false,\n      \"description\": \"Challenge login\",\n      \"action\": \"challenge\",\n      \"priority\": null,\n      \"filter\": {\n        \"id\": \"<FILTER_ID_2>\",\n        \"expression\": \"(http.request.uri.path ~ \\\\\"^.*/wp-login.php$\\\\\" or http.request.uri.path ~ \\\\\"^.*/xmlrpc.php$\\\\\")\",\n        \"paused\": false,\n        \"description\": \"Login\"\n      }\n    },\n    {\n      \"id\": \"<RULE_ID_3>\",\n      \"paused\": false,\n      \"description\": \"JS challenge site\",\n      \"action\": \"js_challenge\",\n      \"priority\": null,\n      \"filter\": {\n        \"id\": \"<FILTER_ID_3>\",\n        \"expression\": \"not http.request.uri.path matches \\\\\"^/api/.*$\\\\\"\",\n        \"paused\": false,\n        \"description\": \"not /api\"\n      }\n    },\n    {\n      \"id\": \"<RULE_ID_4>\",\n      \"paused\": false,\n      \"description\": \"Allow API traffic without challenge\",\n      \"action\": \"allow\",\n      \"priority\": null,\n      \"filter\": {\n        \"id\": \"<FILTER_ID_4>\",\n        \"expression\": \"http.request.uri.path matches \\\\\"^/api/.*$\\\\\"\",\n        \"paused\": false,\n        \"description\": \"/api\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": []\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}