{"expireTime":9007200899183226000,"key":"gatsby-plugin-mdx-entire-payload-7fa2588583c11225c1b4967c1bbc2b4c-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Block requests based on IP reputation","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":40,"offset":40},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":40,"offset":40},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A powerful feature of Firewall Rules is its support for Cloudflare’s IP reputation score. To block requests based on IP reputation, use the ","position":{"start":{"line":4,"column":1,"offset":42},"end":{"line":4,"column":141,"offset":182},"indent":[]}},{"type":"inlineCode","value":"cf.threat_score","position":{"start":{"line":4,"column":141,"offset":182},"end":{"line":4,"column":158,"offset":199},"indent":[]}},{"type":"text","value":" field, which can contain a score from 0 to 100. Reputation scores are collected from ","position":{"start":{"line":4,"column":158,"offset":199},"end":{"line":4,"column":244,"offset":285},"indent":[]}},{"type":"link","title":null,"url":"https://www.projecthoneypot.org/","children":[{"type":"text","value":"Project Honeypot","position":{"start":{"line":4,"column":245,"offset":286},"end":{"line":4,"column":261,"offset":302},"indent":[]}}],"position":{"start":{"line":4,"column":244,"offset":285},"end":{"line":4,"column":296,"offset":337},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":4,"column":296,"offset":337},"end":{"line":4,"column":297,"offset":338},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":42},"end":{"line":4,"column":297,"offset":338},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example blocks requests from IP addresses that score greater than 0. This is equivalent to setting the Security Level in the Firewall app ","position":{"start":{"line":6,"column":1,"offset":340},"end":{"line":6,"column":144,"offset":483},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Settings","position":{"start":{"line":6,"column":146,"offset":485},"end":{"line":6,"column":154,"offset":493},"indent":[]}}],"position":{"start":{"line":6,"column":144,"offset":483},"end":{"line":6,"column":156,"offset":495},"indent":[]}},{"type":"text","value":" panel to ","position":{"start":{"line":6,"column":156,"offset":495},"end":{"line":6,"column":166,"offset":505},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"High","position":{"start":{"line":6,"column":167,"offset":506},"end":{"line":6,"column":171,"offset":510},"indent":[]}}],"position":{"start":{"line":6,"column":166,"offset":505},"end":{"line":6,"column":172,"offset":511},"indent":[]}},{"type":"text","value":". For more, refer to ","position":{"start":{"line":6,"column":172,"offset":511},"end":{"line":6,"column":193,"offset":532},"indent":[]}},{"type":"link","title":null,"url":"https://support.cloudflare.com/hc/en-us/articles/200170056-Understanding-the-Cloudflare-Security-Level","children":[{"type":"text","value":"Understanding the Cloudflare Security Level","position":{"start":{"line":6,"column":194,"offset":533},"end":{"line":6,"column":237,"offset":576},"indent":[]}}],"position":{"start":{"line":6,"column":193,"offset":532},"end":{"line":6,"column":342,"offset":681},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":6,"column":342,"offset":681},"end":{"line":6,"column":343,"offset":682},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":340},"end":{"line":6,"column":343,"offset":682},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example also blocks requests based on country code (","position":{"start":{"line":8,"column":1,"offset":684},"end":{"line":8,"column":58,"offset":741},"indent":[]}},{"type":"link","title":null,"url":"https://www.iso.org/obp/ui/#search/code/","children":[{"type":"text","value":"ISO 3166-1 Alpha 2","position":{"start":{"line":8,"column":59,"offset":742},"end":{"line":8,"column":77,"offset":760},"indent":[]}}],"position":{"start":{"line":8,"column":58,"offset":741},"end":{"line":8,"column":120,"offset":803},"indent":[]}},{"type":"text","value":" format):","position":{"start":{"line":8,"column":120,"offset":803},"end":{"line":8,"column":129,"offset":812},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":684},"end":{"line":8,"column":129,"offset":812},"indent":[]}},{"type":"jsx","value":"<table>\n  <thead>\n  <tr>\n    <th>Expression</th>\n    <th>Action</th>\n  </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>(ip.geoip.country in {'{'}\"CN\" \"TW\" \"US\" \"GB\"{'}'}) or cf.threat_score > 0</code></td>\n      <td><em>Block</em></td>\n    </tr>\n  </tbody>\n</table>","position":{"start":{"line":10,"column":1,"offset":814},"end":{"line":23,"column":9,"offset":1083},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"pcx-content-type\":\"configuration\"}","position":{"start":{"line":26,"column":1,"offset":1086},"end":{"line":26,"column":65,"offset":1150},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":26,"column":65,"offset":1150}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"pcx-content-type\": \"configuration\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"block-requests-based-on-ip-reputation\"\n  }, \"Block requests based on IP reputation\"), mdx(\"p\", null, \"A powerful feature of Firewall Rules is its support for Cloudflare\\u2019s IP reputation score. To block requests based on IP reputation, use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cf.threat_score\"), \" field, which can contain a score from 0 to 100. Reputation scores are collected from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.projecthoneypot.org/\"\n  }, \"Project Honeypot\"), \".\"), mdx(\"p\", null, \"This example blocks requests from IP addresses that score greater than 0. This is equivalent to setting the Security Level in the Firewall app \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Settings\"), \" panel to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"High\"), \". For more, refer to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://support.cloudflare.com/hc/en-us/articles/200170056-Understanding-the-Cloudflare-Security-Level\"\n  }, \"Understanding the Cloudflare Security Level\"), \".\"), mdx(\"p\", null, \"This example also blocks requests based on country code (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.iso.org/obp/ui/#search/code/\"\n  }, \"ISO 3166-1 Alpha 2\"), \" format):\"), mdx(\"table\", null, mdx(\"thead\", null, mdx(\"tr\", null, mdx(\"th\", null, \"Expression\"), mdx(\"th\", null, \"Action\"))), mdx(\"tbody\", null, mdx(\"tr\", null, mdx(\"td\", null, mdx(\"code\", null, \"(ip.geoip.country in \", '{', \"\\\"CN\\\" \\\"TW\\\" \\\"US\\\" \\\"GB\\\"\", '}', \") or cf.threat_score > 0\")), mdx(\"td\", null, mdx(\"em\", null, \"Block\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"pcx-content-type\": \"configuration\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"block-requests-based-on-ip-reputation\"\n    }}>{`Block requests based on IP reputation`}</h1>\n    <p>{`A powerful feature of Firewall Rules is its support for Cloudflare’s IP reputation score. To block requests based on IP reputation, use the `}<inlineCode parentName=\"p\">{`cf.threat_score`}</inlineCode>{` field, which can contain a score from 0 to 100. Reputation scores are collected from `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.projecthoneypot.org/\"\n      }}>{`Project Honeypot`}</a>{`.`}</p>\n    <p>{`This example blocks requests from IP addresses that score greater than 0. This is equivalent to setting the Security Level in the Firewall app `}<strong parentName=\"p\">{`Settings`}</strong>{` panel to `}<em parentName=\"p\">{`High`}</em>{`. For more, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://support.cloudflare.com/hc/en-us/articles/200170056-Understanding-the-Cloudflare-Security-Level\"\n      }}>{`Understanding the Cloudflare Security Level`}</a>{`.`}</p>\n    <p>{`This example also blocks requests based on country code (`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.iso.org/obp/ui/#search/code/\"\n      }}>{`ISO 3166-1 Alpha 2`}</a>{` format):`}</p>\n    <table>\n  <thead>\n  <tr>\n    <th>Expression</th>\n    <th>Action</th>\n  </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>(ip.geoip.country in {'{'}\"CN\" \"TW\" \"US\" \"GB\"{'}'}) or cf.threat_score > 0</code></td>\n      <td><em>Block</em></td>\n    </tr>\n  </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}