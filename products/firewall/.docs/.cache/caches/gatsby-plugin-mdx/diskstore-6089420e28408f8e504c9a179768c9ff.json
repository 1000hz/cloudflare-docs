{"expireTime":9007200899183226000,"key":"gatsby-plugin-mdx-entire-payload-f2f6c523e83f3533a2f1d82a31e4470b-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Require a valid client certificate","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":37,"offset":37},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":37,"offset":37},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use Cloudflare ","position":{"start":{"line":4,"column":1,"offset":39},"end":{"line":4,"column":16,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://developers.cloudflare.com/firewall/cf-firewall-rules/api-shield","children":[{"type":"text","value":"API Shield™","position":{"start":{"line":4,"column":17,"offset":55},"end":{"line":4,"column":28,"offset":66},"indent":[]}}],"position":{"start":{"line":4,"column":16,"offset":54},"end":{"line":4,"column":102,"offset":140},"indent":[]}},{"type":"text","value":" to protect your API or web application with client-certificate-based encryption.","position":{"start":{"line":4,"column":102,"offset":140},"end":{"line":4,"column":183,"offset":221},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":39},"end":{"line":4,"column":183,"offset":221},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Before you can use API Shield to protect your API or web application, you must do the following:","position":{"start":{"line":6,"column":1,"offset":223},"end":{"line":6,"column":97,"offset":319},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":223},"end":{"line":6,"column":97,"offset":319},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://developers.cloudflare.com/ssl/client-certificates/create-a-client-certificate","children":[{"type":"text","value":"Create a client certificate","position":{"start":{"line":8,"column":4,"offset":324},"end":{"line":8,"column":31,"offset":351},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":323},"end":{"line":8,"column":119,"offset":439},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":8,"column":119,"offset":439},"end":{"line":8,"column":120,"offset":440},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":323},"end":{"line":8,"column":120,"offset":440},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":321},"end":{"line":8,"column":120,"offset":440},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://developers.cloudflare.com/ssl/client-certificates/configure-your-mobile-app-or-iot-device","children":[{"type":"text","value":"Configure your mobile app or Internet-of-things device","position":{"start":{"line":9,"column":4,"offset":444},"end":{"line":9,"column":58,"offset":498},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":443},"end":{"line":9,"column":158,"offset":598},"indent":[]}},{"type":"text","value":" to use the client certificate.","position":{"start":{"line":9,"column":158,"offset":598},"end":{"line":9,"column":189,"offset":629},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":443},"end":{"line":9,"column":189,"offset":629},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":441},"end":{"line":9,"column":189,"offset":629},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://developers.cloudflare.com/ssl/client-certificates/enable-mtls","children":[{"type":"text","value":"Enable mutual Transport Layer Security (mTLS) for a host","position":{"start":{"line":10,"column":4,"offset":633},"end":{"line":10,"column":60,"offset":689},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":632},"end":{"line":10,"column":132,"offset":761},"indent":[]}},{"type":"text","value":" in your zone.","position":{"start":{"line":10,"column":132,"offset":761},"end":{"line":10,"column":146,"offset":775},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":632},"end":{"line":10,"column":146,"offset":775},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":630},"end":{"line":10,"column":146,"offset":775},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":321},"end":{"line":10,"column":146,"offset":775},"indent":[1,1]}},{"type":"jsx","value":"<Aside type='warning' header='Important'>","position":{"start":{"line":12,"column":1,"offset":777},"end":{"line":12,"column":42,"offset":818},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can only use API Shield with a certificate authority (CA) that is fully managed by Cloudflare. Cloudflare generates a unique CA for each zone.","position":{"start":{"line":14,"column":1,"offset":820},"end":{"line":14,"column":147,"offset":966},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":820},"end":{"line":14,"column":147,"offset":966},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you need to use a different CA, contact a Cloudflare Customer Success Manager.","position":{"start":{"line":16,"column":1,"offset":968},"end":{"line":16,"column":82,"offset":1049},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":968},"end":{"line":16,"column":82,"offset":1049},"indent":[]}},{"type":"jsx","value":"</Aside>","position":{"start":{"line":18,"column":1,"offset":1051},"end":{"line":18,"column":9,"offset":1059},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example creates a firewall rule that requires API calls to present a valid client certificate. When the client certificate cannot be verified, the rule triggers the ","position":{"start":{"line":20,"column":1,"offset":1061},"end":{"line":20,"column":171,"offset":1231},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Block","position":{"start":{"line":20,"column":172,"offset":1232},"end":{"line":20,"column":177,"offset":1237},"indent":[]}}],"position":{"start":{"line":20,"column":171,"offset":1231},"end":{"line":20,"column":178,"offset":1238},"indent":[]}},{"type":"text","value":" action.","position":{"start":{"line":20,"column":178,"offset":1238},"end":{"line":20,"column":186,"offset":1246},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1061},"end":{"line":20,"column":186,"offset":1246},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The rule includes a compound expression that comprises two ","position":{"start":{"line":22,"column":1,"offset":1248},"end":{"line":22,"column":60,"offset":1307},"indent":[]}},{"type":"link","title":null,"url":"/cf-firewall-rules/fields-and-expressions#simple-expressions","children":[{"type":"text","value":"simple expressions","position":{"start":{"line":22,"column":61,"offset":1308},"end":{"line":22,"column":79,"offset":1326},"indent":[]}}],"position":{"start":{"line":22,"column":60,"offset":1307},"end":{"line":22,"column":142,"offset":1389},"indent":[]}},{"type":"text","value":" joined by the ","position":{"start":{"line":22,"column":142,"offset":1389},"end":{"line":22,"column":157,"offset":1404},"indent":[]}},{"type":"inlineCode","value":"and","position":{"start":{"line":22,"column":157,"offset":1404},"end":{"line":22,"column":162,"offset":1409},"indent":[]}},{"type":"text","value":" operator.","position":{"start":{"line":22,"column":162,"offset":1409},"end":{"line":22,"column":172,"offset":1419},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1248},"end":{"line":22,"column":172,"offset":1419},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first expression uses the ","position":{"start":{"line":24,"column":1,"offset":1421},"end":{"line":24,"column":31,"offset":1451},"indent":[]}},{"type":"inlineCode","value":"http.host","position":{"start":{"line":24,"column":31,"offset":1451},"end":{"line":24,"column":42,"offset":1462},"indent":[]}},{"type":"text","value":" field and the ","position":{"start":{"line":24,"column":42,"offset":1462},"end":{"line":24,"column":57,"offset":1477},"indent":[]}},{"type":"inlineCode","value":"in","position":{"start":{"line":24,"column":57,"offset":1477},"end":{"line":24,"column":61,"offset":1481},"indent":[]}},{"type":"text","value":" operator to capture the hosts that should be protected — ","position":{"start":{"line":24,"column":61,"offset":1481},"end":{"line":24,"column":119,"offset":1539},"indent":[]}},{"type":"inlineCode","value":"orangeclouded.com","position":{"start":{"line":24,"column":119,"offset":1539},"end":{"line":24,"column":138,"offset":1558},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":24,"column":138,"offset":1558},"end":{"line":24,"column":143,"offset":1563},"indent":[]}},{"type":"inlineCode","value":"api.orangeclouded.com","position":{"start":{"line":24,"column":143,"offset":1563},"end":{"line":24,"column":166,"offset":1586},"indent":[]}},{"type":"text","value":" in this example.","position":{"start":{"line":24,"column":166,"offset":1586},"end":{"line":24,"column":183,"offset":1603},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":1421},"end":{"line":24,"column":183,"offset":1603},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The second expression — ","position":{"start":{"line":26,"column":1,"offset":1605},"end":{"line":26,"column":25,"offset":1629},"indent":[]}},{"type":"inlineCode","value":"not cf.tls_client_auth.cert_verified","position":{"start":{"line":26,"column":25,"offset":1629},"end":{"line":26,"column":63,"offset":1667},"indent":[]}},{"type":"text","value":" — returns ","position":{"start":{"line":26,"column":63,"offset":1667},"end":{"line":26,"column":74,"offset":1678},"indent":[]}},{"type":"inlineCode","value":"true","position":{"start":{"line":26,"column":74,"offset":1678},"end":{"line":26,"column":80,"offset":1684},"indent":[]}},{"type":"text","value":" when a request to access the API or web application does ","position":{"start":{"line":26,"column":80,"offset":1684},"end":{"line":26,"column":138,"offset":1742},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":26,"column":139,"offset":1743},"end":{"line":26,"column":142,"offset":1746},"indent":[]}}],"position":{"start":{"line":26,"column":138,"offset":1742},"end":{"line":26,"column":143,"offset":1747},"indent":[]}},{"type":"text","value":" present a valid client certificate.","position":{"start":{"line":26,"column":143,"offset":1747},"end":{"line":26,"column":179,"offset":1783},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1605},"end":{"line":26,"column":179,"offset":1783},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Because the ","position":{"start":{"line":28,"column":1,"offset":1785},"end":{"line":28,"column":13,"offset":1797},"indent":[]}},{"type":"link","title":null,"url":"/cf-firewall-rules/actions","children":[{"type":"text","value":"action","position":{"start":{"line":28,"column":14,"offset":1798},"end":{"line":28,"column":20,"offset":1804},"indent":[]}}],"position":{"start":{"line":28,"column":13,"offset":1797},"end":{"line":28,"column":49,"offset":1833},"indent":[]}},{"type":"text","value":" is ","position":{"start":{"line":28,"column":49,"offset":1833},"end":{"line":28,"column":53,"offset":1837},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Block","position":{"start":{"line":28,"column":54,"offset":1838},"end":{"line":28,"column":59,"offset":1843},"indent":[]}}],"position":{"start":{"line":28,"column":53,"offset":1837},"end":{"line":28,"column":60,"offset":1844},"indent":[]}},{"type":"text","value":", only requests that present a valid client certificate can access the specified hosts:","position":{"start":{"line":28,"column":60,"offset":1844},"end":{"line":28,"column":147,"offset":1931},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1785},"end":{"line":28,"column":147,"offset":1931},"indent":[]}},{"type":"jsx","value":"<table>\n  <thead>\n  <tr>\n    <th>Expression</th>\n    <th>Action</th>\n  </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>(http.host in {'{'}\"orangeclouded.com\" \"api.orangeclouded.com\"{'}'} and not cf.tls_client_auth.cert_verified)</code></td>\n      <td><em>Block</em></td>\n    </tr>\n  </tbody>\n</table>","position":{"start":{"line":30,"column":1,"offset":1933},"end":{"line":43,"column":9,"offset":2237},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To create a mTLS rule that requires a valid client certificate in the Cloudflare dashboard, ","position":{"start":{"line":45,"column":1,"offset":2239},"end":{"line":45,"column":93,"offset":2331},"indent":[]}},{"type":"link","title":null,"url":"/cf-dashboard/create-mtls-rule#use-the-mutual-tls-rule-interface","children":[{"type":"text","value":"use the Mutual TLS Rule interface","position":{"start":{"line":45,"column":94,"offset":2332},"end":{"line":45,"column":127,"offset":2365},"indent":[]}}],"position":{"start":{"line":45,"column":93,"offset":2331},"end":{"line":45,"column":194,"offset":2432},"indent":[]}},{"type":"text","value":" in the ","position":{"start":{"line":45,"column":194,"offset":2432},"end":{"line":45,"column":202,"offset":2440},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Firewall","position":{"start":{"line":45,"column":204,"offset":2442},"end":{"line":45,"column":212,"offset":2450},"indent":[]}}],"position":{"start":{"line":45,"column":202,"offset":2440},"end":{"line":45,"column":214,"offset":2452},"indent":[]}},{"type":"text","value":" app.","position":{"start":{"line":45,"column":214,"offset":2452},"end":{"line":45,"column":219,"offset":2457},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":2239},"end":{"line":45,"column":219,"offset":2457},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"pcx-content-type\":\"configuration\"}","position":{"start":{"line":48,"column":1,"offset":2460},"end":{"line":48,"column":65,"offset":2524},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":48,"column":65,"offset":2524}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"pcx-content-type\": \"configuration\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Aside = makeShortcode(\"Aside\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"require-a-valid-client-certificate\"\n  }, \"Require a valid client certificate\"), mdx(\"p\", null, \"Use Cloudflare \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/firewall/cf-firewall-rules/api-shield\"\n  }, \"API Shield\\u2122\"), \" to protect your API or web application with client-certificate-based encryption.\"), mdx(\"p\", null, \"Before you can use API Shield to protect your API or web application, you must do the following:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developers.cloudflare.com/ssl/client-certificates/create-a-client-certificate\"\n  }, \"Create a client certificate\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developers.cloudflare.com/ssl/client-certificates/configure-your-mobile-app-or-iot-device\"\n  }, \"Configure your mobile app or Internet-of-things device\"), \" to use the client certificate.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developers.cloudflare.com/ssl/client-certificates/enable-mtls\"\n  }, \"Enable mutual Transport Layer Security (mTLS) for a host\"), \" in your zone.\")), mdx(Aside, {\n    type: \"warning\",\n    header: \"Important\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, \"You can only use API Shield with a certificate authority (CA) that is fully managed by Cloudflare. Cloudflare generates a unique CA for each zone.\"), mdx(\"p\", null, \"If you need to use a different CA, contact a Cloudflare Customer Success Manager.\")), mdx(\"p\", null, \"This example creates a firewall rule that requires API calls to present a valid client certificate. When the client certificate cannot be verified, the rule triggers the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Block\"), \" action.\"), mdx(\"p\", null, \"The rule includes a compound expression that comprises two \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/cf-firewall-rules/fields-and-expressions#simple-expressions\"\n  }, \"simple expressions\"), \" joined by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"and\"), \" operator.\"), mdx(\"p\", null, \"The first expression uses the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http.host\"), \" field and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"in\"), \" operator to capture the hosts that should be protected \\u2014 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"orangeclouded.com\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"api.orangeclouded.com\"), \" in this example.\"), mdx(\"p\", null, \"The second expression \\u2014 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"not cf.tls_client_auth.cert_verified\"), \" \\u2014 returns \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \" when a request to access the API or web application does \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"not\"), \" present a valid client certificate.\"), mdx(\"p\", null, \"Because the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/cf-firewall-rules/actions\"\n  }, \"action\"), \" is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Block\"), \", only requests that present a valid client certificate can access the specified hosts:\"), mdx(\"table\", null, mdx(\"thead\", null, mdx(\"tr\", null, mdx(\"th\", null, \"Expression\"), mdx(\"th\", null, \"Action\"))), mdx(\"tbody\", null, mdx(\"tr\", null, mdx(\"td\", null, mdx(\"code\", null, \"(http.host in \", '{', \"\\\"orangeclouded.com\\\" \\\"api.orangeclouded.com\\\"\", '}', \" and not cf.tls_client_auth.cert_verified)\")), mdx(\"td\", null, mdx(\"em\", null, \"Block\"))))), mdx(\"p\", null, \"To create a mTLS rule that requires a valid client certificate in the Cloudflare dashboard, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/cf-dashboard/create-mtls-rule#use-the-mutual-tls-rule-interface\"\n  }, \"use the Mutual TLS Rule interface\"), \" in the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Firewall\"), \" app.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"pcx-content-type\": \"configuration\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Aside = makeShortcode(\"Aside\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"require-a-valid-client-certificate\"\n    }}>{`Require a valid client certificate`}</h1>\n    <p>{`Use Cloudflare `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.cloudflare.com/firewall/cf-firewall-rules/api-shield\"\n      }}>{`API Shield™`}</a>{` to protect your API or web application with client-certificate-based encryption.`}</p>\n    <p>{`Before you can use API Shield to protect your API or web application, you must do the following:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://developers.cloudflare.com/ssl/client-certificates/create-a-client-certificate\"\n        }}>{`Create a client certificate`}</a>{`.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://developers.cloudflare.com/ssl/client-certificates/configure-your-mobile-app-or-iot-device\"\n        }}>{`Configure your mobile app or Internet-of-things device`}</a>{` to use the client certificate.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://developers.cloudflare.com/ssl/client-certificates/enable-mtls\"\n        }}>{`Enable mutual Transport Layer Security (mTLS) for a host`}</a>{` in your zone.`}</li>\n    </ul>\n    <Aside type='warning' header='Important' mdxType=\"Aside\">\n      <p>{`You can only use API Shield with a certificate authority (CA) that is fully managed by Cloudflare. Cloudflare generates a unique CA for each zone.`}</p>\n      <p>{`If you need to use a different CA, contact a Cloudflare Customer Success Manager.`}</p>\n    </Aside>\n    <p>{`This example creates a firewall rule that requires API calls to present a valid client certificate. When the client certificate cannot be verified, the rule triggers the `}<em parentName=\"p\">{`Block`}</em>{` action.`}</p>\n    <p>{`The rule includes a compound expression that comprises two `}<a parentName=\"p\" {...{\n        \"href\": \"/cf-firewall-rules/fields-and-expressions#simple-expressions\"\n      }}>{`simple expressions`}</a>{` joined by the `}<inlineCode parentName=\"p\">{`and`}</inlineCode>{` operator.`}</p>\n    <p>{`The first expression uses the `}<inlineCode parentName=\"p\">{`http.host`}</inlineCode>{` field and the `}<inlineCode parentName=\"p\">{`in`}</inlineCode>{` operator to capture the hosts that should be protected — `}<inlineCode parentName=\"p\">{`orangeclouded.com`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`api.orangeclouded.com`}</inlineCode>{` in this example.`}</p>\n    <p>{`The second expression — `}<inlineCode parentName=\"p\">{`not cf.tls_client_auth.cert_verified`}</inlineCode>{` — returns `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` when a request to access the API or web application does `}<em parentName=\"p\">{`not`}</em>{` present a valid client certificate.`}</p>\n    <p>{`Because the `}<a parentName=\"p\" {...{\n        \"href\": \"/cf-firewall-rules/actions\"\n      }}>{`action`}</a>{` is `}<em parentName=\"p\">{`Block`}</em>{`, only requests that present a valid client certificate can access the specified hosts:`}</p>\n    <table>\n  <thead>\n  <tr>\n    <th>Expression</th>\n    <th>Action</th>\n  </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>(http.host in {'{'}\"orangeclouded.com\" \"api.orangeclouded.com\"{'}'} and not cf.tls_client_auth.cert_verified)</code></td>\n      <td><em>Block</em></td>\n    </tr>\n  </tbody>\n    </table>\n    <p>{`To create a mTLS rule that requires a valid client certificate in the Cloudflare dashboard, `}<a parentName=\"p\" {...{\n        \"href\": \"/cf-dashboard/create-mtls-rule#use-the-mutual-tls-rule-interface\"\n      }}>{`use the Mutual TLS Rule interface`}</a>{` in the `}<strong parentName=\"p\">{`Firewall`}</strong>{` app.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}