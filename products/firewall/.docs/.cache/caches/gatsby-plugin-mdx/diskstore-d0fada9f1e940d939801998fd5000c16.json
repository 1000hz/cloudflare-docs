{"expireTime":9007200899183225000,"key":"gatsby-plugin-mdx-entire-payload-a9c412aeb1f392e0ee2f17f06800bf25-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Cloudflare Firewall Rules","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":28,"offset":28},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":28,"offset":28},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Firewall Rules allow users to create rules that inspect incoming traffic and block, challenge, log, or allow specific requests.","position":{"start":{"line":4,"column":1,"offset":30},"end":{"line":4,"column":128,"offset":157},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":30},"end":{"line":4,"column":128,"offset":157},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Main features","position":{"start":{"line":6,"column":4,"offset":162},"end":{"line":6,"column":17,"offset":175},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":159},"end":{"line":6,"column":17,"offset":175},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Rule-based protection","position":{"start":{"line":8,"column":5,"offset":181},"end":{"line":8,"column":26,"offset":202},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":179},"end":{"line":8,"column":28,"offset":204},"indent":[]}},{"type":"text","value":": Use pre-defined rulesets provided by Cloudflare, or define your own Firewall Rules, including rules that perform rate limiting. Create rules in the Cloudflare dashboard or via API.","position":{"start":{"line":8,"column":28,"offset":204},"end":{"line":8,"column":210,"offset":386},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":179},"end":{"line":8,"column":210,"offset":386},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":177},"end":{"line":8,"column":210,"offset":386},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Complex custom rules","position":{"start":{"line":9,"column":5,"offset":391},"end":{"line":9,"column":25,"offset":411},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":389},"end":{"line":9,"column":27,"offset":413},"indent":[]}},{"type":"text","value":": Each rule's expression can reference multiple fields from all the available HTTP request parameters and fields, allowing you to create complex rules.","position":{"start":{"line":9,"column":27,"offset":413},"end":{"line":9,"column":178,"offset":564},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":389},"end":{"line":9,"column":178,"offset":564},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":387},"end":{"line":9,"column":178,"offset":564},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":177},"end":{"line":9,"column":178,"offset":564},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Availability","position":{"start":{"line":11,"column":4,"offset":569},"end":{"line":11,"column":16,"offset":581},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":566},"end":{"line":11,"column":16,"offset":581},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Firewall Rules are available to customers on all Cloudflare plans.","position":{"start":{"line":13,"column":1,"offset":583},"end":{"line":13,"column":67,"offset":649},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":583},"end":{"line":13,"column":67,"offset":649},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":15,"column":1,"offset":651},"end":{"line":15,"column":4,"offset":654},"indent":[]}},{"type":"jsx","value":"<ButtonGroup>\n  <Button type=\"primary\" href=\"/cf-dashboard\">Manage rules</Button>\n  <Button type=\"secondary\" href=\"/cf-firewall-rules\">Learn more</Button>\n</ButtonGroup>","position":{"start":{"line":17,"column":1,"offset":656},"end":{"line":20,"column":15,"offset":825},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Overview\",\"order\":1,\"pcx-content-type\":\"overview\"}","position":{"start":{"line":23,"column":1,"offset":828},"end":{"line":23,"column":89,"offset":916},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":23,"column":89,"offset":916}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Overview\",\n  \"order\": 1,\n  \"pcx-content-type\": \"overview\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar ButtonGroup = makeShortcode(\"ButtonGroup\");\nvar Button = makeShortcode(\"Button\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"cloudflare-firewall-rules\"\n  }, \"Cloudflare Firewall Rules\"), mdx(\"p\", null, \"Firewall Rules allow users to create rules that inspect incoming traffic and block, challenge, log, or allow specific requests.\"), mdx(\"h2\", {\n    \"id\": \"main-features\"\n  }, \"Main features\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Rule-based protection\"), \": Use pre-defined rulesets provided by Cloudflare, or define your own Firewall Rules, including rules that perform rate limiting. Create rules in the Cloudflare dashboard or via API.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Complex custom rules\"), \": Each rule's expression can reference multiple fields from all the available HTTP request parameters and fields, allowing you to create complex rules.\")), mdx(\"h2\", {\n    \"id\": \"availability\"\n  }, \"Availability\"), mdx(\"p\", null, \"Firewall Rules are available to customers on all Cloudflare plans.\"), mdx(\"hr\", null), mdx(ButtonGroup, {\n    mdxType: \"ButtonGroup\"\n  }, mdx(Button, {\n    type: \"primary\",\n    href: \"/cf-dashboard\",\n    mdxType: \"Button\"\n  }, \"Manage rules\"), mdx(Button, {\n    type: \"secondary\",\n    href: \"/cf-firewall-rules\",\n    mdxType: \"Button\"\n  }, \"Learn more\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Overview\",\n  \"order\": 1,\n  \"pcx-content-type\": \"overview\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst ButtonGroup = makeShortcode(\"ButtonGroup\");\nconst Button = makeShortcode(\"Button\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"cloudflare-firewall-rules\"\n    }}>{`Cloudflare Firewall Rules`}</h1>\n    <p>{`Firewall Rules allow users to create rules that inspect incoming traffic and block, challenge, log, or allow specific requests.`}</p>\n    <h2 {...{\n      \"id\": \"main-features\"\n    }}>{`Main features`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Rule-based protection`}</strong>{`: Use pre-defined rulesets provided by Cloudflare, or define your own Firewall Rules, including rules that perform rate limiting. Create rules in the Cloudflare dashboard or via API.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Complex custom rules`}</strong>{`: Each rule's expression can reference multiple fields from all the available HTTP request parameters and fields, allowing you to create complex rules.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"availability\"\n    }}>{`Availability`}</h2>\n    <p>{`Firewall Rules are available to customers on all Cloudflare plans.`}</p>\n    <hr></hr>\n    <ButtonGroup mdxType=\"ButtonGroup\">\n  <Button type=\"primary\" href=\"/cf-dashboard\" mdxType=\"Button\">Manage rules</Button>\n  <Button type=\"secondary\" href=\"/cf-firewall-rules\" mdxType=\"Button\">Learn more</Button>\n    </ButtonGroup>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}