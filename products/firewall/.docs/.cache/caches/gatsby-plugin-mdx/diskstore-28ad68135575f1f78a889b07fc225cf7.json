{"expireTime":9007200899183228000,"key":"gatsby-plugin-mdx-entire-payload-ffb10eca91ecb9ba8482149ef99d7436-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"PUT examples","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":15,"offset":15},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":15,"offset":15},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Update multiple filters","position":{"start":{"line":4,"column":4,"offset":20},"end":{"line":4,"column":27,"offset":43},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":17},"end":{"line":4,"column":27,"offset":43},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example updates two filters with IDs ","position":{"start":{"line":6,"column":1,"offset":45},"end":{"line":6,"column":43,"offset":87},"indent":[]}},{"type":"inlineCode","value":"<FILTER_ID_1>","position":{"start":{"line":6,"column":43,"offset":87},"end":{"line":6,"column":58,"offset":102},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":6,"column":58,"offset":102},"end":{"line":6,"column":63,"offset":107},"indent":[]}},{"type":"inlineCode","value":"<FILTER_ID_2>","position":{"start":{"line":6,"column":63,"offset":107},"end":{"line":6,"column":78,"offset":122},"indent":[]}},{"type":"text","value":" using a single API call.","position":{"start":{"line":6,"column":78,"offset":122},"end":{"line":6,"column":103,"offset":147},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":45},"end":{"line":6,"column":103,"offset":147},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"---\nheader: Request\n---\ncurl -X PUT \\\n\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/filters\" \\\n-H \"X-Auth-Email: <EMAIL>\" \\\n-H \"X-Auth-Key: <API_KEY>\" \\\n-H \"Content-Type: application/json\" \\\n-d '[\n  {\n    \"id\": \"<FILTER_ID_1>\",\n    \"paused\": false,\n    \"expression\": \"ip.src eq 93.184.216.0\",\n    \"description\": \"IP of example.org\"\n  },\n  {\n    \"id\": \"<FILTER_ID_2>\",\n    \"expression\": \"http.request.uri.path matches \\\"^/api/.*$\\\"\", \n    \"description\": \"/api\"\n  }\n]'","position":{"start":{"line":8,"column":1,"offset":149},"end":{"line":30,"column":4,"offset":635},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"json","meta":null,"value":"---\nheader: Response\n---\n{\n  \"result\": [\n    {\n      \"id\": \"<FILTER_ID>\",\n      \"paused\": false,\n      \"description\": \"IP of example.org\",\n      \"expression\": \"ip.src eq 93.184.216.0\"\n    },\n    {\n      \"id\": \"<FILTER_ID_2>\",\n      \"paused\": false,\n      \"description\": \"/api\",\n      \"expression\": \"http.request.uri.path matches \\\"^/api/.*$\\\"\"\n    }\n  ],\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": []\n}","position":{"start":{"line":32,"column":1,"offset":637},"end":{"line":55,"column":4,"offset":1057},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Update a single filter","position":{"start":{"line":57,"column":4,"offset":1062},"end":{"line":57,"column":26,"offset":1084},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1059},"end":{"line":57,"column":26,"offset":1084},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example updates the filter with ID ","position":{"start":{"line":59,"column":1,"offset":1086},"end":{"line":59,"column":41,"offset":1126},"indent":[]}},{"type":"inlineCode","value":"<FILTER_ID>","position":{"start":{"line":59,"column":41,"offset":1126},"end":{"line":59,"column":54,"offset":1139},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":59,"column":54,"offset":1139},"end":{"line":59,"column":55,"offset":1140},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1086},"end":{"line":59,"column":55,"offset":1140},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"---\nheader: Request\n---\ncurl -X PUT \\\n\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/filters/<FILTER_ID>\" \\\n-H \"X-Auth-Email: <EMAIL>\" \\\n-H \"X-Auth-Key: <API_KEY>\" \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"id\": \"<FILTER_ID>\",\n  \"paused\": false,\n  \"description\": \"Login from office\",\n  \"expression\": \"ip.src in {2400:cb00::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\"^.*/wp-login.php$\\\" or http.request.uri.path ~ \\\"^.*/xmlrpc.php$\\\")\"\n}' ","position":{"start":{"line":61,"column":1,"offset":1142},"end":{"line":76,"column":4,"offset":1613},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"json","meta":null,"value":"---\nheader: Response\n---\n{\n  \"result\": {\n    \"id\": \"<FILTER_ID>\",\n    \"paused\": false,\n    \"description\": \"Login from office\",\n    \"expression\": \"ip.src in {2400:cb00::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\"^.*/wp-login.php$\\\" or http.request.uri.path ~ \\\"^.*/xmlrpc.php$\\\")\"\n  },\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": []\n}","position":{"start":{"line":78,"column":1,"offset":1615},"end":{"line":93,"column":4,"offset":1973},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"PUT examples\",\"pcx-content-type\":\"reference\",\"order\":470}","position":{"start":{"line":96,"column":1,"offset":1976},"end":{"line":96,"column":96,"offset":2071},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":96,"column":96,"offset":2071}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"PUT examples\",\n  \"pcx-content-type\": \"reference\",\n  \"order\": 470\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"put-examples\"\n  }, \"PUT examples\"), mdx(\"h2\", {\n    \"id\": \"update-multiple-filters\"\n  }, \"Update multiple filters\"), mdx(\"p\", null, \"This example updates two filters with IDs \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<FILTER_ID_1>\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<FILTER_ID_2>\"), \" using a single API call.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Request\\n---\\ncurl -X PUT \\\\\\n\\\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/filters\\\" \\\\\\n-H \\\"X-Auth-Email: <EMAIL>\\\" \\\\\\n-H \\\"X-Auth-Key: <API_KEY>\\\" \\\\\\n-H \\\"Content-Type: application/json\\\" \\\\\\n-d '[\\n  {\\n    \\\"id\\\": \\\"<FILTER_ID_1>\\\",\\n    \\\"paused\\\": false,\\n    \\\"expression\\\": \\\"ip.src eq 93.184.216.0\\\",\\n    \\\"description\\\": \\\"IP of example.org\\\"\\n  },\\n  {\\n    \\\"id\\\": \\\"<FILTER_ID_2>\\\",\\n    \\\"expression\\\": \\\"http.request.uri.path matches \\\\\\\"^/api/.*$\\\\\\\"\\\", \\n    \\\"description\\\": \\\"/api\\\"\\n  }\\n]'\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Response\\n---\\n{\\n  \\\"result\\\": [\\n    {\\n      \\\"id\\\": \\\"<FILTER_ID>\\\",\\n      \\\"paused\\\": false,\\n      \\\"description\\\": \\\"IP of example.org\\\",\\n      \\\"expression\\\": \\\"ip.src eq 93.184.216.0\\\"\\n    },\\n    {\\n      \\\"id\\\": \\\"<FILTER_ID_2>\\\",\\n      \\\"paused\\\": false,\\n      \\\"description\\\": \\\"/api\\\",\\n      \\\"expression\\\": \\\"http.request.uri.path matches \\\\\\\"^/api/.*$\\\\\\\"\\\"\\n    }\\n  ],\\n  \\\"success\\\": true,\\n  \\\"errors\\\": [],\\n  \\\"messages\\\": []\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"update-a-single-filter\"\n  }, \"Update a single filter\"), mdx(\"p\", null, \"This example updates the filter with ID \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<FILTER_ID>\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Request\\n---\\ncurl -X PUT \\\\\\n\\\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/filters/<FILTER_ID>\\\" \\\\\\n-H \\\"X-Auth-Email: <EMAIL>\\\" \\\\\\n-H \\\"X-Auth-Key: <API_KEY>\\\" \\\\\\n-H \\\"Content-Type: application/json\\\" \\\\\\n-d '{\\n  \\\"id\\\": \\\"<FILTER_ID>\\\",\\n  \\\"paused\\\": false,\\n  \\\"description\\\": \\\"Login from office\\\",\\n  \\\"expression\\\": \\\"ip.src in {2400:cb00::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\\\\\"^.*/wp-login.php$\\\\\\\" or http.request.uri.path ~ \\\\\\\"^.*/xmlrpc.php$\\\\\\\")\\\"\\n}' \\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Response\\n---\\n{\\n  \\\"result\\\": {\\n    \\\"id\\\": \\\"<FILTER_ID>\\\",\\n    \\\"paused\\\": false,\\n    \\\"description\\\": \\\"Login from office\\\",\\n    \\\"expression\\\": \\\"ip.src in {2400:cb00::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\\\\\"^.*/wp-login.php$\\\\\\\" or http.request.uri.path ~ \\\\\\\"^.*/xmlrpc.php$\\\\\\\")\\\"\\n  },\\n  \\\"success\\\": true,\\n  \\\"errors\\\": [],\\n  \\\"messages\\\": []\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"PUT examples\",\n  \"pcx-content-type\": \"reference\",\n  \"order\": 470\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"put-examples\"\n    }}>{`PUT examples`}</h1>\n    <h2 {...{\n      \"id\": \"update-multiple-filters\"\n    }}>{`Update multiple filters`}</h2>\n    <p>{`This example updates two filters with IDs `}<inlineCode parentName=\"p\">{`<FILTER_ID_1>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<FILTER_ID_2>`}</inlineCode>{` using a single API call.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`---\nheader: Request\n---\ncurl -X PUT \\\\\n\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/filters\" \\\\\n-H \"X-Auth-Email: <EMAIL>\" \\\\\n-H \"X-Auth-Key: <API_KEY>\" \\\\\n-H \"Content-Type: application/json\" \\\\\n-d '[\n  {\n    \"id\": \"<FILTER_ID_1>\",\n    \"paused\": false,\n    \"expression\": \"ip.src eq 93.184.216.0\",\n    \"description\": \"IP of example.org\"\n  },\n  {\n    \"id\": \"<FILTER_ID_2>\",\n    \"expression\": \"http.request.uri.path matches \\\\\"^/api/.*$\\\\\"\", \n    \"description\": \"/api\"\n  }\n]'\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`---\nheader: Response\n---\n{\n  \"result\": [\n    {\n      \"id\": \"<FILTER_ID>\",\n      \"paused\": false,\n      \"description\": \"IP of example.org\",\n      \"expression\": \"ip.src eq 93.184.216.0\"\n    },\n    {\n      \"id\": \"<FILTER_ID_2>\",\n      \"paused\": false,\n      \"description\": \"/api\",\n      \"expression\": \"http.request.uri.path matches \\\\\"^/api/.*$\\\\\"\"\n    }\n  ],\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": []\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"update-a-single-filter\"\n    }}>{`Update a single filter`}</h2>\n    <p>{`This example updates the filter with ID `}<inlineCode parentName=\"p\">{`<FILTER_ID>`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`---\nheader: Request\n---\ncurl -X PUT \\\\\n\"https://api.cloudflare.com/client/v4/zones/<ZONE_ID>/filters/<FILTER_ID>\" \\\\\n-H \"X-Auth-Email: <EMAIL>\" \\\\\n-H \"X-Auth-Key: <API_KEY>\" \\\\\n-H \"Content-Type: application/json\" \\\\\n-d '{\n  \"id\": \"<FILTER_ID>\",\n  \"paused\": false,\n  \"description\": \"Login from office\",\n  \"expression\": \"ip.src in {2400:cb00::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\\\"^.*/wp-login.php$\\\\\" or http.request.uri.path ~ \\\\\"^.*/xmlrpc.php$\\\\\")\"\n}' \n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`---\nheader: Response\n---\n{\n  \"result\": {\n    \"id\": \"<FILTER_ID>\",\n    \"paused\": false,\n    \"description\": \"Login from office\",\n    \"expression\": \"ip.src in {2400:cb00::/32 2a06:98c0::/29} and (http.request.uri.path ~ \\\\\"^.*/wp-login.php$\\\\\" or http.request.uri.path ~ \\\\\"^.*/xmlrpc.php$\\\\\")\"\n  },\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": []\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}