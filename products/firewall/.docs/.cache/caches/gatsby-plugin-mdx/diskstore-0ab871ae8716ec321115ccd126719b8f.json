{"expireTime":9007200899183226000,"key":"gatsby-plugin-mdx-entire-payload-ec84d0d81bce14143e8f5231b6c7c364-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Require specific HTTP headers","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":32,"offset":32},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":32,"offset":32},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Many organizations qualify traffic based on the presence of specific HTTP request headers.","position":{"start":{"line":4,"column":1,"offset":34},"end":{"line":4,"column":91,"offset":124},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":34},"end":{"line":4,"column":91,"offset":124},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use the Rules language ","position":{"start":{"line":6,"column":1,"offset":126},"end":{"line":6,"column":24,"offset":149},"indent":[]}},{"type":"link","title":null,"url":"https://developers.cloudflare.com/ruleset-engine/rules-language/fields#http-request-header-fields","children":[{"type":"text","value":"HTTP request header fields","position":{"start":{"line":6,"column":25,"offset":150},"end":{"line":6,"column":51,"offset":176},"indent":[]}}],"position":{"start":{"line":6,"column":24,"offset":149},"end":{"line":6,"column":151,"offset":276},"indent":[]}},{"type":"text","value":" to target requests with specific headers.","position":{"start":{"line":6,"column":151,"offset":276},"end":{"line":6,"column":193,"offset":318},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":126},"end":{"line":6,"column":193,"offset":318},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This example uses the ","position":{"start":{"line":8,"column":1,"offset":320},"end":{"line":8,"column":23,"offset":342},"indent":[]}},{"type":"inlineCode","value":"http.headers.names","position":{"start":{"line":8,"column":23,"offset":342},"end":{"line":8,"column":43,"offset":362},"indent":[]}},{"type":"text","value":" field to look for the presence of an X-CSRF-Token header. The ","position":{"start":{"line":8,"column":43,"offset":362},"end":{"line":8,"column":106,"offset":425},"indent":[]}},{"type":"inlineCode","value":"lower()","position":{"start":{"line":8,"column":106,"offset":425},"end":{"line":8,"column":115,"offset":434},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":8,"column":115,"offset":434},"end":{"line":8,"column":116,"offset":435},"indent":[]}},{"type":"link","title":null,"url":"https://developers.cloudflare.com/ruleset-engine/rules-language/functions#transformation-functions","children":[{"type":"text","value":"transformation function","position":{"start":{"line":8,"column":117,"offset":436},"end":{"line":8,"column":140,"offset":459},"indent":[]}}],"position":{"start":{"line":8,"column":116,"offset":435},"end":{"line":8,"column":241,"offset":560},"indent":[]}},{"type":"text","value":" converts the value to lowercase so that the expression is case insensitive.","position":{"start":{"line":8,"column":241,"offset":560},"end":{"line":8,"column":317,"offset":636},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":320},"end":{"line":8,"column":317,"offset":636},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When the X-CSRF-Token header is missing, Cloudflare blocks the request:","position":{"start":{"line":10,"column":1,"offset":638},"end":{"line":10,"column":72,"offset":709},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":638},"end":{"line":10,"column":72,"offset":709},"indent":[]}},{"type":"jsx","value":"<table>\n  <thead>\n  <tr>\n    <th>Expression</th>\n    <th>Action</th>\n  </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>not any(lower(http.request.headers.names[*])[*] contains \"x-csrf-token\") and (http.request.full_uri eq \"https://www.example.com/somepath\")</code></td>\n      <td><em>Block</em></td>\n    </tr>\n  </tbody>\n</table>","position":{"start":{"line":12,"column":1,"offset":711},"end":{"line":25,"column":9,"offset":1044},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"pcx-content-type\":\"configuration\"}","position":{"start":{"line":28,"column":1,"offset":1047},"end":{"line":28,"column":65,"offset":1111},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":28,"column":65,"offset":1111}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"pcx-content-type\": \"configuration\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"require-specific-http-headers\"\n  }, \"Require specific HTTP headers\"), mdx(\"p\", null, \"Many organizations qualify traffic based on the presence of specific HTTP request headers.\"), mdx(\"p\", null, \"Use the Rules language \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/ruleset-engine/rules-language/fields#http-request-header-fields\"\n  }, \"HTTP request header fields\"), \" to target requests with specific headers.\"), mdx(\"p\", null, \"This example uses the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http.headers.names\"), \" field to look for the presence of an X-CSRF-Token header. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lower()\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/ruleset-engine/rules-language/functions#transformation-functions\"\n  }, \"transformation function\"), \" converts the value to lowercase so that the expression is case insensitive.\"), mdx(\"p\", null, \"When the X-CSRF-Token header is missing, Cloudflare blocks the request:\"), mdx(\"table\", null, mdx(\"thead\", null, mdx(\"tr\", null, mdx(\"th\", null, \"Expression\"), mdx(\"th\", null, \"Action\"))), mdx(\"tbody\", null, mdx(\"tr\", null, mdx(\"td\", null, mdx(\"code\", null, \"not any(lower(http.request.headers.names[*])[*] contains \\\"x-csrf-token\\\") and (http.request.full_uri eq \\\"https://www.example.com/somepath\\\")\")), mdx(\"td\", null, mdx(\"em\", null, \"Block\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"pcx-content-type\": \"configuration\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"require-specific-http-headers\"\n    }}>{`Require specific HTTP headers`}</h1>\n    <p>{`Many organizations qualify traffic based on the presence of specific HTTP request headers.`}</p>\n    <p>{`Use the Rules language `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.cloudflare.com/ruleset-engine/rules-language/fields#http-request-header-fields\"\n      }}>{`HTTP request header fields`}</a>{` to target requests with specific headers.`}</p>\n    <p>{`This example uses the `}<inlineCode parentName=\"p\">{`http.headers.names`}</inlineCode>{` field to look for the presence of an X-CSRF-Token header. The `}<inlineCode parentName=\"p\">{`lower()`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.cloudflare.com/ruleset-engine/rules-language/functions#transformation-functions\"\n      }}>{`transformation function`}</a>{` converts the value to lowercase so that the expression is case insensitive.`}</p>\n    <p>{`When the X-CSRF-Token header is missing, Cloudflare blocks the request:`}</p>\n    <table>\n  <thead>\n  <tr>\n    <th>Expression</th>\n    <th>Action</th>\n  </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>not any(lower(http.request.headers.names[*])[*] contains \"x-csrf-token\") and (http.request.full_uri eq \"https://www.example.com/somepath\")</code></td>\n      <td><em>Block</em></td>\n    </tr>\n  </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}