{"expireTime":9007200899161329000,"key":"gatsby-plugin-mdx-entire-payload-80d326d13ef5732968d45cac15d07498-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Get started","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":14,"offset":14},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":14,"offset":14},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Having access to Cloudflare’s provisioning capabilities allows you to more easily create and manage Cloudflare accounts. The following steps will get you started making API calls to provision accounts, users, and services.","position":{"start":{"line":4,"column":1,"offset":16},"end":{"line":4,"column":223,"offset":238},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":16},"end":{"line":4,"column":223,"offset":238},"indent":[]}},{"type":"jsx","value":"<DirectoryListing path=\"/get-started\"/>","position":{"start":{"line":6,"column":1,"offset":240},"end":{"line":6,"column":40,"offset":279},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"order\":1,\"pcx-content-type\":\"get-started\"}","position":{"start":{"line":9,"column":1,"offset":282},"end":{"line":9,"column":73,"offset":354},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":9,"column":73,"offset":354}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"order\": 1,\n  \"pcx-content-type\": \"get-started\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar DirectoryListing = makeShortcode(\"DirectoryListing\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"get-started\"\n  }, \"Get started\"), mdx(\"p\", null, \"Having access to Cloudflare\\u2019s provisioning capabilities allows you to more easily create and manage Cloudflare accounts. The following steps will get you started making API calls to provision accounts, users, and services.\"), mdx(DirectoryListing, {\n    path: \"/get-started\",\n    mdxType: \"DirectoryListing\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"order\": 1,\n  \"pcx-content-type\": \"get-started\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst DirectoryListing = makeShortcode(\"DirectoryListing\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"get-started\"\n    }}>{`Get started`}</h1>\n    <p>{`Having access to Cloudflare’s provisioning capabilities allows you to more easily create and manage Cloudflare accounts. The following steps will get you started making API calls to provision accounts, users, and services.`}</p>\n    <DirectoryListing path=\"/get-started\" mdxType=\"DirectoryListing\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}