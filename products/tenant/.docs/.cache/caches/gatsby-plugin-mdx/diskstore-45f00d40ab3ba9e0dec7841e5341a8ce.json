{"expireTime":9007200899161078000,"key":"gatsby-plugin-mdx-entire-payload-3bf54a3b0037b1884a5806b2ab08e343-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Step 4: Service configuration","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":32,"offset":32},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":32,"offset":32},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once an account has been created, subscriptions were created, and access was granted to end-customers (if needed), the only thing left is to configure the account and zones as needed. This can be done by anyone with access to the account (based on their permissions). Configuring the account and zones is not different from doing the configuration of any Cloudflare account.","position":{"start":{"line":4,"column":1,"offset":34},"end":{"line":4,"column":375,"offset":408},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":34},"end":{"line":4,"column":375,"offset":408},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"API documentation can be found at ","position":{"start":{"line":6,"column":1,"offset":410},"end":{"line":6,"column":35,"offset":444},"indent":[]}},{"type":"link","title":null,"url":"https://api.cloudflare.com/","children":[{"type":"text","value":"api.cloudflare.com","position":{"start":{"line":6,"column":36,"offset":445},"end":{"line":6,"column":54,"offset":463},"indent":[]}}],"position":{"start":{"line":6,"column":35,"offset":444},"end":{"line":6,"column":84,"offset":493},"indent":[]}},{"type":"text","value":" or in the other ","position":{"start":{"line":6,"column":84,"offset":493},"end":{"line":6,"column":101,"offset":510},"indent":[]}},{"type":"link","title":null,"url":"https://developers.cloudflare.com/docs","children":[{"type":"text","value":"developer docs","position":{"start":{"line":6,"column":102,"offset":511},"end":{"line":6,"column":116,"offset":525},"indent":[]}}],"position":{"start":{"line":6,"column":101,"offset":510},"end":{"line":6,"column":157,"offset":566},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":6,"column":157,"offset":566},"end":{"line":6,"column":158,"offset":567},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":410},"end":{"line":6,"column":158,"offset":567},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"4: Service configuration\",\"weight\":4,\"pcx-content-type\":\"get-started\"}","position":{"start":{"line":8,"column":1,"offset":569},"end":{"line":8,"column":109,"offset":677},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":8,"column":109,"offset":677}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"4: Service configuration\",\n  \"weight\": 4,\n  \"pcx-content-type\": \"get-started\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"step-4-service-configuration\"\n  }, \"Step 4: Service configuration\"), mdx(\"p\", null, \"Once an account has been created, subscriptions were created, and access was granted to end-customers (if needed), the only thing left is to configure the account and zones as needed. This can be done by anyone with access to the account (based on their permissions). Configuring the account and zones is not different from doing the configuration of any Cloudflare account.\"), mdx(\"p\", null, \"API documentation can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://api.cloudflare.com/\"\n  }, \"api.cloudflare.com\"), \" or in the other \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/docs\"\n  }, \"developer docs\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"4: Service configuration\",\n  \"weight\": 4,\n  \"pcx-content-type\": \"get-started\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"step-4-service-configuration\"\n    }}>{`Step 4: Service configuration`}</h1>\n    <p>{`Once an account has been created, subscriptions were created, and access was granted to end-customers (if needed), the only thing left is to configure the account and zones as needed. This can be done by anyone with access to the account (based on their permissions). Configuring the account and zones is not different from doing the configuration of any Cloudflare account.`}</p>\n    <p>{`API documentation can be found at `}<a parentName=\"p\" {...{\n        \"href\": \"https://api.cloudflare.com/\"\n      }}>{`api.cloudflare.com`}</a>{` or in the other `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.cloudflare.com/docs\"\n      }}>{`developer docs`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}