{"data":{"mdx":{"id":"65f5b185-5262-5ef5-9915-c320eba1250a","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Enable Datadog\",\n  \"order\": 58,\n  \"pcx-content-type\": \"how-to\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Aside = makeShortcode(\"Aside\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"enable-logpush-to-datadog\"\n  }, \"Enable Logpush to Datadog\"), mdx(\"p\", null, \"Cloudflare Logpush supports pushing logs directly to Datadog via the Cloudflare dashboard or via API.\"), mdx(\"h2\", {\n    \"id\": \"manage-via-the-cloudflare-dashboard\"\n  }, \"Manage via the Cloudflare dashboard\"), mdx(\"p\", null, \"Enable Logpush to Datadog via the dashboard.\"), mdx(\"p\", null, \"To enable the Cloudflare Logpush service:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Log in to the Cloudflare dashboard.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Select the Enterprise domain you want to use with Logpush.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Go to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Analytics\"), \" > \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Logs\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Connect a service\"), \". A modal window opens where you will need to complete several steps.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Select the dataset you want to push to a storage service.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Select the data fields to include in your logs. Add or remove fields later by modifying your settings in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Logs\"), \" > \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Logpush\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Select \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Datadog\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Enter or select the following destination information:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Datadog URL Endpoint\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Datadog API Key\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Validate access\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Save and Start Pushing\"), \" to finish enabling Logpush.\"))), mdx(\"p\", null, \"Once connected, Cloudflare lists Datadog as a connected service under \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Logs\"), \" > \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Logpush\"), \". Edit or remove connected services from here.\"), mdx(\"h2\", {\n    \"id\": \"manage-via-api\"\n  }, \"Manage via API\"), mdx(\"p\", null, \"To set up a Datadog Logpush job:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a job with the appropriate endpoint URL and authentication parameters.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Enable the job to begin pushing logs.\")), mdx(Aside, {\n    type: \"note\",\n    header: \"Note\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, \"Unlike configuring Logpush jobs for AWS S3, GCS, or Azure, there is no ownership challenge when configuring Logpush to Datadog.\")), mdx(EnableReadPermissions, {\n    mdxType: \"EnableReadPermissions\"\n  }), mdx(\"h3\", {\n    \"id\": \"1-create-a-job\"\n  }, \"1. Create a job\"), mdx(\"p\", null, \"To create a job, make a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"POST\"), \" request to the Logpush jobs endpoint with the following fields:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"name\"), \" (optional) - Use your domain name as the job name.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"destination_conf\"), \" - A log destination consisting of an endpoint URL, authorization header, and zero or more optional parameters that Datadog supports in the string format below.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"<DATADOG_ENDPOINT_URL>\"), \": The Datadog HTTP logs intake endpoint, which is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http-intake.logs.datadoghq.com/v1/input\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"<DATADOG_API_KEY>\"), \": The Datadog API token. For example, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"20e6d94e8c57924ad1be3c29bcaee0197d\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ddsource\"), \": Set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cloudflare\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"service\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"host\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ddtags\"), \": Optional parameters allowed by Datadog.\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"\\\"datadog://<DATADOG_ENDPOINT_URL>?header_DD-API-KEY=<DATADOG_API_KEY>&ddsource=cloudflare&service=<SERVICE>&host=<HOST>&ddtags=<TAGS>\\\"\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"dataset\"), \" - The category of logs you want to receive. Refer to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/reference/log-fields\"\n  }, \"Log fields\"), \" for the full list of supported datasets.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"logpull_options\"), \" (optional) - To configure fields, sample rate, and timestamp format, refer to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/get-started/logpush-configuration-api/understanding-logpush-api#options\"\n  }, \"Logpush API options\"), \".\")), mdx(\"p\", null, \"Example request using cURL:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"curl -s -X POST \\\\\\nhttps://api.cloudflare.com/client/v4/zones/<ZONE_ID>/logpush/jobs \\\\\\n-H \\\"X-Auth-Email: <EMAIL>\\\" \\\\\\n-H \\\"X-Auth-Key: <API_KEY>\\\" \\\\\\n-d '{\\\"name\\\":\\\"<DOMAIN_NAME>\\\",\\n\\\"destination_conf\\\": \\\"datadog://<DATADOG_ENDPOINT_URL>?header_DD-API-KEY=<DATADOG_API_KEY>&ddsource=cloudflare&service=<SERVICE>&host=<HOST>&ddtags=<TAGS>\\\", \\\"logpull_options\\\": \\\"fields=ClientIP,ClientRequestHost,ClientRequestMethod,ClientRequestURI,EdgeEndTimestamp,EdgeResponseBytes,EdgeResponseStatus,EdgeStartTimestamp,RayID&timestamps=rfc3339\\\", \\\"dataset\\\": \\\"http_requests\\\"}' | jq .\\n\")), mdx(\"p\", null, \"Response:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"errors\\\": [],\\n  \\\"messages\\\": [],\\n  \\\"result\\\": {\\n    \\\"id\\\": 100,\\n    \\\"dataset\\\": \\\"http_requests\\\",\\n    \\\"enabled\\\": false,\\n    \\\"name\\\": \\\"<DOMAIN_NAME>\\\",\\n    \\\"logpull_options\\\": \\\"fields=ClientIP,ClientRequestHost,ClientRequestMethod,ClientRequestURI,EdgeEndTimestamp,EdgeResponseBytes,EdgeResponseStatus,EdgeStartTimestamp,RayID&timestamps=rfc3339\\\",\\n    \\\"destination_conf\\\": \\\"datadog://<DATADOG_ENDPOINT_URL>?header_DD-API-KEY=<DATADOG_API_KEY>\\\",\\n    \\\"last_complete\\\": null,\\n    \\\"last_error\\\": null,\\n    \\\"error_message\\\": null\\n  },\\n  \\\"success\\\": true\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"2-enable-update-a-job\"\n  }, \"2. Enable (update) a job\"), mdx(\"p\", null, \"To enable a  job, make a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PUT\"), \" request to the Logpush jobs endpoint. You will use the job ID returned from the previous step in the URL and send \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{\\\"enabled\\\": true}\"), \" in the request body.\"), mdx(\"p\", null, \"Example request using cURL:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"curl -s -X PUT \\\\\\nhttps://api.cloudflare.com/client/v4/zones/<ZONE_ID>/logpush/jobs/100 -d'{\\\"enabled\\\":true}' | jq .\\n\")), mdx(\"p\", null, \"Response:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"errors\\\": [],\\n  \\\"messages\\\": [],\\n  \\\"result\\\": {\\n    \\\"id\\\": 100,\\n    \\\"dataset\\\": \\\"http_requests\\\",\\n    \\\"enabled\\\": true,\\n    \\\"name\\\": \\\"<DOMAIN_NAME>\\\",\\n    \\\"logpull_options\\\": \\\"fields=ClientIP,ClientRequestHost,ClientRequestMethod,ClientRequestURI,EdgeEndTimestamp,EdgeResponseBytes,EdgeResponseStatus,EdgeStartTimestamp,RayID&timestamps=rfc3339\\\",\\n    \\\"destination_conf\\\": \\\"datadog://<DATADOG_ENDPOINT_URL>?header_DD-API-KEY=<DATADOG_API_KEY>\\\",\\n    \\\"last_complete\\\": null,\\n    \\\"last_error\\\": null,\\n    \\\"error_message\\\": null\\n  },\\n  \\\"success\\\": true\\n}\\n\")), mdx(Aside, {\n    type: \"note\",\n    header: \"Note\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, \"The Datadog destination is exclusive to new jobs and might not be backward compatible with older jobs. Create new jobs if you expect to send your logs directly to Datadog instead of modifying already existing ones. If you try to modify an existing job for another destination to push logs to Datadog, you may observe errors.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"Enable Datadog","type":null,"updated":null}}},"pageContext":{"id":"65f5b185-5262-5ef5-9915-c320eba1250a","fields":{"slug":"/get-started/enable-destinations/datadog"},"frontmatter":{"pcx_content_type":"how-to","title":"Enable Datadog","type":null,"order":58,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"Enable Logpush to Datadog","depth":1}],"tableOfContents":{"items":[{"url":"#enable-logpush-to-datadog","title":"Enable Logpush to Datadog","items":[{"url":"#manage-via-the-cloudflare-dashboard","title":"Manage via the Cloudflare dashboard"},{"url":"#manage-via-api","title":"Manage via API","items":[{"url":"#1-create-a-job","title":"1. Create a job"},{"url":"#2-enable-update-a-job","title":"2. Enable (update) a job"}]}]}]},"parent":{"modifiedTime":"2022-01-27","relativePath":"get-started/enable-destinations/datadog/index.md"}}}