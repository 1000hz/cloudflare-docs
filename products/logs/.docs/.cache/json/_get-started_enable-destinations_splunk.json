{"data":{"mdx":{"id":"77f161b9-89c2-5dbb-a05d-1a18fd9f5201","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Enable Splunk\",\n  \"order\": 63,\n  \"pcx-content-type\": \"how-to\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Aside = makeShortcode(\"Aside\");\nvar TableWrap = makeShortcode(\"TableWrap\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"enable-logpush-to-splunk\"\n  }, \"Enable Logpush to Splunk\"), mdx(\"p\", null, \"Cloudflare Logpush supports pushing logs directly to Splunk via the Cloudflare dashboard or via API.\"), mdx(\"h2\", {\n    \"id\": \"manage-via-the-cloudflare-dashboard\"\n  }, \"Manage via the Cloudflare dashboard\"), mdx(\"p\", null, \"Enable Logpush to Splunk via the dashboard.\"), mdx(\"p\", null, \"To enable the Cloudflare Logpush service:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Log in to the Cloudflare dashboard.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Select the Enterprise domain you want to use with Logpush.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Go to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Analytics\"), \" > \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Logs\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Connect a service\"), \". A modal window opens where you will need to complete several steps.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Select the dataset you want to push to a storage service.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Select the data fields to include in your logs. Add or remove fields later by modifying your settings in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Logs\"), \" > \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Logpush\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Select \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Splunk\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Enter or select the following destination information:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Splunk raw HTTP Event Collector URL\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Channel ID\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Auth Token\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Source Type\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Use insecure skip verify option\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Validate access\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Save and Start Pushing\"), \" to finish enabling Logpush.\"))), mdx(\"p\", null, \"Once connected, Cloudflare lists Splunk as a connected service under \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Logs\"), \" > \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Logpush\"), \". Edit or remove connected services from here.\"), mdx(\"h2\", {\n    \"id\": \"manage-via-api\"\n  }, \"Manage via API\"), mdx(\"p\", null, \"To set up a Splunk Logpush job:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a job with the appropriate endpoint URL and authentication parameters.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Enable the job to begin pushing logs.\")), mdx(Aside, {\n    type: \"note\",\n    header: \"Note\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, \"Unlike configuring Logpush jobs for AWS S3, GCS, or Azure, there is no ownership challenge when configuring Logpush to Splunk.\")), mdx(EnableReadPermissions, {\n    mdxType: \"EnableReadPermissions\"\n  }), mdx(\"h3\", {\n    \"id\": \"1-create-a-job\"\n  }, \"1. Create a job\"), mdx(\"p\", null, \"To create a job, make a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"POST\"), \" request to the Logpush jobs endpoint with the following fields:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"name\"), \" (optional) - Use your domain name as the job name.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"destination_conf\"), \" - A log destination consisting of an endpoint URL, channel id, insecure-skip-verify flag, source type, authorization header in the string format below. \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"<SPLUNK_ENDPOINT_URL>\"), \": The Splunk raw HTTP Event Collector URL with port. For example: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"splunk.cf-analytics.com:8088/services/collector/raw\"), \". \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cloudflare expects the HEC network port to be configured to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":443\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":8088\"), \". \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cloudflare expects the Splunk endpoint to be \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/services/collector/raw\"), \" while configuring and setting up the Logpush job.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ensure you have enabled HEC in Splunk. Refer to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developers.cloudflare.com/fundamentals/data-products/analytics-integrations/splunk\"\n  }, \"Splunk Analytics Integrations\"), \" for information on how to set up HEC in Splunk. \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"<SPLUNK_CHANNEL_ID>\"), \": A unique channel ID. This is a random GUID that you can generate by:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using an online tool like the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.guidgenerator.com/\"\n  }, \"GUID generator\"), \". \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using the command line.  For example: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"python -c 'import uuid; print(uuid.uuid4())'\"), \". \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"<INSECURE_SKIP_VERIFY>\"), \": Boolean value. Cloudflare recommends setting this value to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\"), \". Setting this value to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \" is equivalent to using the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-k\"), \" option with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"curl\"), \" as shown in Splunk examples and is \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"not\"), \" recommended. Only set this value to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \" when HEC uses a self-signed certificate.\")))), mdx(Aside, {\n    type: \"note\",\n    header: \"Note\",\n    mdxType: \"Aside\"\n  }, \"Cloudflare highly recommends setting this value to \", mdx(\"code\", {\n    className: \"InlineCode\"\n  }, \"false\"), \". Refer to the \", mdx(\"a\", {\n    href: \"/faq#logpush-faq\"\n  }, \"Logpush FAQ\"), \" for more information.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<SOURCE_TYPE>\"), \": The Splunk source type. For example: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cloudflare:json\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<SPLUNK_AUTH_TOKEN>\"), \": The Splunk authorization token that is URL-encoded. For example: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Splunk%20e6d94e8c-5792-4ad1-be3c-29bcaee0197d\"), \".\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"\\\"splunk://<SPLUNK_ENDPOINT_URL>?channel=<SPLUNK_CHANNEL_ID>&insecure-skip-verify=<INSECURE_SKIP_VERIFY>&sourcetype=<SOURCE_TYPE>&header_Authorization=<SPLUNK_AUTH_TOKEN>\\\"\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dataset\"), \" - The category of logs you want to receive. Refer to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/reference/log-fields\"\n  }, \"Log fields\"), \" for the full list of supported datasets.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"logpull_options\"), \" (optional) - To configure fields, sample rate, and timestamp format, refer to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/get-started/logpush-configuration-api/understanding-logpush-api#options\"\n  }, \"Logpush API options\"), \". For timestamp, Cloudflare recommends using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"timestamps=rfc3339\"), \".\"))), mdx(\"p\", null, \"Example request using cURL:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"curl -s -X POST \\\\\\nhttps://api.cloudflare.com/client/v4/zones/<ZONE_ID>/logpush/jobs \\\\\\n-H \\\"X-Auth-Email: <EMAIL>\\\" \\\\\\n-H \\\"X-Auth-Key: <API_KEY>\\\" \\\\\\n-d '{\\\"name\\\":\\\"<DOMAIN_NAME>\\\",\\n\\\"destination_conf\\\":\\\"splunk://<SPLUNK_ENDPOINT_URL>?channel=<SPLUNK_CHANNEL_ID>&insecure-skip-verify=<INSECURE_SKIP_VERIFY>&sourcetype=<SOURCE_TYPE>&header_Authorization=<SPLUNK_AUTH_TOKEN>\\\", \\\"logpull_options\\\": \\\"fields=ClientIP,ClientRequestHost,ClientRequestMethod,ClientRequestURI,EdgeEndTimestamp,EdgeResponseBytes,EdgeResponseStatus,EdgeStartTimestamp,RayID&timestamps=rfc3339\\\", \\\"dataset\\\": \\\"http_requests\\\"}' | jq .\\n\")), mdx(\"p\", null, \"Response:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"errors\\\": [],\\n  \\\"messages\\\": [],\\n  \\\"result\\\": {\\n    \\\"id\\\": 100,\\n    \\\"dataset\\\": \\\"http_requests\\\",\\n    \\\"enabled\\\": false,\\n    \\\"name\\\": \\\"<DOMAIN_NAME>\\\",\\n    \\\"logpull_options\\\": \\\"fields=ClientIP,ClientRequestHost,ClientRequestMethod,ClientRequestURI,EdgeEndTimestamp,EdgeResponseBytes,EdgeResponseStatus,EdgeStartTimestamp,RayID&timestamps=rfc3339\\\",\\n    \\\"destination_conf\\\": \\\"splunk://<SPLUNK_ENDPOINT_URL>?channel=<SPLUNK_CHANNEL_ID>&insecure-skip-verify=<INSECURE_SKIP_VERIFY>&sourcetype=<SOURCE_TYPE>&header_Authorization=<SPLUNK_AUTH_TOKEN>\\\",\\n    \\\"last_complete\\\": null,\\n    \\\"last_error\\\": null,\\n    \\\"error_message\\\": null\\n  },\\n  \\\"success\\\": true\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"2-enable-update-a-job\"\n  }, \"2. Enable (update) a job\"), mdx(\"p\", null, \"To enable a  job, make a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PUT\"), \" request to the Logpush jobs endpoint. Use the job ID returned from the previous step in the URL and send \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{\\\"enabled\\\":true}\"), \" in the request body.\"), mdx(\"p\", null, \"Example request using cURL:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"curl -s -X PUT \\\\\\nhttps://api.cloudflare.com/client/v4/zones/<ZONE_ID>/logpush/jobs/100 -d'{\\\"enabled\\\":true}' | jq .\\n\")), mdx(\"p\", null, \"Response:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"errors\\\": [],\\n  \\\"messages\\\": [],\\n  \\\"result\\\": {\\n    \\\"id\\\": 100,\\n    \\\"dataset\\\": \\\"http_requests\\\",\\n    \\\"enabled\\\": true,\\n    \\\"name\\\": \\\"<DOMAIN_NAME>\\\",\\n    \\\"logpull_options\\\": \\\"fields=ClientIP,ClientRequestHost,ClientRequestMethod,ClientRequestURI,EdgeEndTimestamp,EdgeResponseBytes,EdgeResponseStatus,EdgeStartTimestamp,RayID&timestamps=rfc3339\\\",\\n    \\\"destination_conf\\\": \\\"splunk://<SPLUNK_ENDPOINT_URL>?channel=<SPLUNK_CHANNEL_ID>&insecure-skip-verify=<INSECURE_SKIP_VERIFY>&sourcetype=<SOURCE_TYPE>&header_Authorization=<SPLUNK_AUTH_TOKEN>\\\",\\n    \\\"last_complete\\\": null,\\n    \\\"last_error\\\": null,\\n    \\\"error_message\\\": null\\n  },\\n  \\\"success\\\": true\\n}\\n\")), mdx(\"p\", null, \"Refer to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../../faq#logpush-faq\"\n  }, \"Logpush FAQ\"), \" for troubleshooting information.\"), mdx(\"h3\", {\n    \"id\": \"3-create-waf-rule-for-splunk-hec-endpoint-optional\"\n  }, \"3. Create WAF rule for Splunk HEC endpoint (optional)\"), mdx(\"p\", null, \"If you have the Cloudflare Web Application Firewall (WAF) turned on, you may see a CAPTCHA challenge when Cloudflare makes a request to Splunk HTTP Event Collector (HEC). To make sure this does not happen, you have to create a WAF rule that allows Cloudflare to bypass the HEC endpoint.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Log in to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://dash.cloudflare.com/\"\n  }, \"Cloudflare dashboard\"), \" and select your account. Go to the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Firewall\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Create firewall rule\"), \" and enter a descriptive name for it (for example, Splunk).\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Under \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When incoming requests match...\"), \", use the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Field\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Operator\"), \", and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Value\"), \" dropdowns to create a rule. After finishing each row, click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"And\"), \" to create the next row of rules. Refer to the table below for the values you should input:\"), mdx(TableWrap, {\n    mdxType: \"TableWrap\"\n  }, mdx(\"table\", {\n    parentName: \"li\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Field\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Operator\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Value\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Request Method\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"equals\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"POST\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Hostname\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"equals\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Your Splunk endpoint hostname. For example: \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"splunk.cf-analytics.com\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"URI Path\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"equals\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"/services/collector/raw\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"URI Query String\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"contains\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"channel\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"AS Num\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"equals\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"132892\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"User Agent\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"equals\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Go-http-client/2.0\"))))))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"After inputting the values as shown in the table, you should have an Expression Preview with the values you added for your specific rule. The example below reflects the hostname \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"splunk.cf-analytics.com\"), \".\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-txt\"\n  }, \"(http.request.method eq \\\"POST\\\" and http.host eq \\\"splunk.cf-analytics.com\\\" and http.request.uri.path eq \\\"/services/collector/raw\\\" and http.request.uri.query contains \\\"channel\\\" and ip.geoip.asnum eq 132892 and http.user_agent eq \\\"Go-http-client/2.0\\\")\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Under the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Then...\"), \" > \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Choose an action\"), \" dropdown, select \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Bypass\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Choose a feature\"), \" dropdown, select \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"WAF Managed Rules\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Deploy\"), \".\"))), mdx(\"p\", null, \"The WAF should now ignore requests made to Splunk HEC by Cloudflare.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"Enable Splunk","type":null,"updated":null}}},"pageContext":{"id":"77f161b9-89c2-5dbb-a05d-1a18fd9f5201","fields":{"slug":"/get-started/enable-destinations/splunk"},"frontmatter":{"pcx_content_type":"how-to","title":"Enable Splunk","type":null,"order":63,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"Enable Logpush to Splunk","depth":1}],"tableOfContents":{"items":[{"url":"#enable-logpush-to-splunk","title":"Enable Logpush to Splunk","items":[{"url":"#manage-via-the-cloudflare-dashboard","title":"Manage via the Cloudflare dashboard"},{"url":"#manage-via-api","title":"Manage via API","items":[{"url":"#1-create-a-job","title":"1. Create a job"},{"url":"#2-enable-update-a-job","title":"2. Enable (update) a job"},{"url":"#3-create-waf-rule-for-splunk-hec-endpoint-optional","title":"3. Create WAF rule for Splunk HEC endpoint (optional)"}]}]}]},"parent":{"modifiedTime":"2022-01-27","relativePath":"get-started/enable-destinations/splunk/index.md"}}}