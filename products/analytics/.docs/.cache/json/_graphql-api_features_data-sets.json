{"data":{"mdx":{"id":"be3bb964-16a0-522c-a924-15f7fda0cf03","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"order\": 2,\n  \"pcx-content-type\": \"reference\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar TableWrap = makeShortcode(\"TableWrap\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"data-sets-tables\"\n  }, \"Data Sets (tables)\"), mdx(\"p\", null, \"Cloudflare Analytics offers a range of data sets, including both general and product-specific data sets. Data sets use a consistent naming scheme that explicitly identifies the type of data they return:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Domain.\"), \" Each data set is named after the domain it describes and is associated with a set of nodes. Data nodes are typically named after the domain they represent. Product-specific data nodes incorporate the name of the relevant product, as in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"loadBalancingRequests\"), \". Network Analytics data nodes incorporate the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ipFlows\"), \" label.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Aggregated data.\"), \" Nodes that represent aggregated data include the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Groups\"), \" suffix. For example, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"loadBalancingRequestsGroups\"), \" node represents aggregated data for Load Balancing requests. Aggregated data returns in an array of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"...Group\"), \" objects. If the data represented by a node is aggregated prior to query time, the aggregation period is also specified. For example, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"requests1mGroups\"), \" represents data aggregated into a collection of minute-wise roll-up reports.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Raw data.\"), \" Raw data nodes, such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"loadBalancingRequests\"), \", are not aggregated and so do not incorporate the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Groups\"), \" suffix. Raw data returns in arrays containing objects of the relevant data type. For example, a query to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"loadBalancingRequests\"), \" returns an array of \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"LoadBalancingRequest\"), \" objects.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Adaptive Sampling.\"), \" Nodes that represent data acquired using adaptive sampling incorporate the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Adaptive\"), \" suffix. (For details, see \", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"/graphql-api/sampling/\"\n  }, \"Sampling\")), \").\"))), mdx(\"p\", null, \"Detailed descriptions of nodes, their structure, and supported queries are available directly from the GraphQL Analytics API via \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"introspection\"), \" (see \", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"https://developers.cloudflare.com/analytics/graphql-api/getting-started/#querying-basics\"\n  }, \"Getting started: Querying basics\")), \"). For more on using introspection to ask a GraphQL schema for information about the queries it supports, see the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://graphql.org/learn/introspection/\"\n  }, \"GraphQL documentation\"), \".\"), mdx(\"h2\", {\n    \"id\": \"available-data-sets\"\n  }, \"Available data sets\"), mdx(\"p\", null, \"The following data sets (and associated nodes) are available in Cloudflare Analytics:\"), mdx(TableWrap, {\n    mdxType: \"TableWrap\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Data set (product)\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Node\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Firewall Activity Log\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"firewallEventsAdaptive\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"firewallEventsAdaptiveByTimeGroups\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Firewall Analytics\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"firewallEventsAdaptiveGroups\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Health Check Analytics\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"healthCheckEventsAdaptive\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"healthCheckEventsAdaptiveGroups\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"HTTP Requests\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"httpRequestsAdaptiveGroups\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"httpRequests1mGroups\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"httpRequests1hGroups\"), \"  \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"httpRequests1dGroups\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Image Resizing Analytics\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"imageResizingRequests1mGroups\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Load Balancing Analytics\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"loadBalancingRequestsAdaptive\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"loadBalancingRequestsAdaptiveGroups\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Magic Firewall Analytics\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"magicFirewallSamplesAdaptiveGroups\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Network Analytics v2\", mdx(\"br\", null), \" for Magic Transit customers\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"magicTransitNetworkAnalyticsAdaptiveGroups\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dosdNetworkAnalyticsAdaptiveGroups\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dosdAttackAnalyticsAdaptiveGroups\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"flowtrackdNetworkAnalyticsAdaptiveGroups\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"magicFirewallNetworkAnalyticsAdaptiveGroups\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Network Analytics v2\", mdx(\"br\", null), \" for Spectrum customers\", mdx(\"br\", null), \" (Enterprise plans only)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"spectrumNetworkAnalyticsAdaptiveGroups\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dosdNetworkAnalyticsAdaptiveGroups\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dosdAttackAnalyticsAdaptiveGroups\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"SYN Attacks (DoS Analytics)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"synAvgPps1mGroups\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Workers Metrics\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"workersInvocationsAdaptive\")))))), mdx(\"h2\", {\n    \"id\": \"beta-data-sets\"\n  }, \"Beta data sets\"), mdx(\"p\", null, \"Beta data sets are available to Enterprise customers for testing and exploration. Do not rely on beta data nodes, since they are subject to change or removal without notice.\"), mdx(TableWrap, {\n    mdxType: \"TableWrap\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Data set (product)\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Node\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Browser Insights\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"browserInsightsAdaptiveGroups\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"webVitalsAdaptiveGroups\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Web Analytics\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"rumPageloadEventsAdaptiveGroups\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"rumPerformanceEventsAdaptiveGroups\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"rumWebVitalsEventsAdaptiveGroups\")))))), mdx(\"h2\", {\n    \"id\": \"deprecated-data-nodes\"\n  }, \"Deprecated data nodes\"), mdx(\"p\", null, \"The following data nodes are deprecated. To avoid disruption, migrate to replacement nodes before the sunset date.\"), mdx(TableWrap, {\n    mdxType: \"TableWrap\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Node\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Replacement node\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Sunset date\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"httpRequestsCacheGroups\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"httpRequestsAdaptiveGroups\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"March 1, 2021\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"httpRequests1mByColoGroups\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"httpRequestsAdaptiveGroups\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"September 1, 2021\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"httpRequests1dByColoGroups\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"httpRequestsAdaptiveGroups\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"September 1, 2021\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"firewallRulePreviewGroups\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"httpRequestsAdaptiveGroups\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"March 1, 2021\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"healthCheckEvents\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"healthCheckEventsAdaptive\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"March 1, 2021\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"healthCheckEventsGroups\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"healthCheckEventsAdaptiveGroups\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"March 1, 2021\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"loadBalancingRequests\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"loadBalancingRequestsAdaptive\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"September 30, 2021\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"loadBalancingRequestsGroups\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"loadBalancingRequestsAdaptiveGroups\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"September 30, 2021\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ipFlows1mGroups\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ipFlows1hGroups\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ipFlows1dGroups\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ipFlows1mAttacksGroups\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"spectrumNetworkAnalyticsAdaptiveGroups\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"magicTransitNetworkAnalyticsAdaptiveGroups\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dosdNetworkAnalyticsAdaptiveGroups\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"dosdAttackAnalyticsAdaptiveGroups\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"flowtrackdNetworkAnalyticsAdaptiveGroups\"), mdx(\"br\", null), \" \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"magicFirewallNetworkAnalyticsAdaptiveGroups\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"March 31, 2022\"))))), mdx(\"h2\", {\n    \"id\": \"working-with-data-sets\"\n  }, \"Working with data sets\"), mdx(\"h3\", {\n    \"id\": \"aggregated-fields\"\n  }, \"Aggregated fields\"), mdx(\"p\", null, \"This example illustrates the structure for Groups:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-graphql\"\n  }, \"type WhateverGroup {\\n    count # No subfields, it is just the group size. Not available for roll-up tables.\\n    sum {\\n        # fields that support summing (numbers, maps of numbers)\\n    }\\n    avg {\\n        # fields that support averaging (numbers)\\n    }\\n    uniq {\\n        # fields that support uniqueing (numbers, strings, enums, IPs, dates, etc.)\\n    }\\n}\\n\")), mdx(\"p\", null, \"Unique values are not available as a dimension but can be queried as demonstrated in this example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-graphql\"\n  }, \"{\\n  # Get number of bytes and unique IPs in each minute.\\n  httpRequests1mGroups {\\n    sum {\\n      bytes\\n    }\\n    uniq {\\n      uniques # unique IPs\\n    }\\n    dimensions {\\n      datetimeMinute\\n    }\\n  }\\n\\n  # Count the number of events in each hour.\\n  firewallEventsAdaptiveGroups {\\n    count\\n    dimensions {\\n      datetimeHour\\n    }\\n  }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"schema-type-definitions\"\n  }, \"Schema type definitions\"), mdx(\"p\", null, \"Every exposed table has a GraphQL type definition. Type definitions observe the following rules:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Regular fields represent themselves.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Every field, including nested fields, has a type and represents a list of that type.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"enum\"), \" type represents an enumerated field.\")), mdx(\"p\", null, \"Here is an example type definition for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ContentTypeMapElem\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-graphql\"\n  }, \"type ContentTypeMapElem {\\n    edgeResponseContentType: UInt32!\\n    requests: UInt64!\\n    bytes: UInt64!\\n}\\n\\n# An array of httpRequestsGroup is the result of httpRequests1hGroups or\\n# httpRequests1mGroups query.\\ntype httpRequestsGroup {\\n    date: Date!\\n    timeslot: DateTime!\\n    requests: UInt64!\\n    contentTypeMap: [ContentTypeMapElem!]!\\n    # ... other fields\\n}\\n\\nenum TrustedClientCategory {\\n    UNKNOWN\\n    REAL_BROWSER\\n    HONEST_BOT\\n}\\n\\n# An array of Request is the result of httpRequests query.\\ntype Request {\\n    trustedClientCategory: TrustedClientCategory!\\n    # ... other fields\\n}\\n///\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"","type":null,"updated":null}}},"pageContext":{"id":"be3bb964-16a0-522c-a924-15f7fda0cf03","fields":{"slug":"/graphql-api/features/data-sets"},"frontmatter":{"title":"","type":null,"order":2,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"Data Sets (tables)","depth":1}],"tableOfContents":{"items":[{"url":"#data-sets-tables","title":"Data Sets (tables)","items":[{"url":"#available-data-sets","title":"Available data sets"},{"url":"#beta-data-sets","title":"Beta data sets"},{"url":"#deprecated-data-nodes","title":"Deprecated data nodes"},{"url":"#working-with-data-sets","title":"Working with data sets","items":[{"url":"#aggregated-fields","title":"Aggregated fields"},{"url":"#schema-type-definitions","title":"Schema type definitions"}]}]}]},"parent":{"modifiedTime":"2021-10-26","relativePath":"graphql-api/features/data-sets/index.md"}}}