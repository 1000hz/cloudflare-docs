{"data":{"mdx":{"id":"c837930a-b145-52ec-9aa9-60ff24607f08","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"pcx-content-type\": \"reference\",\n  \"order\": 3\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Aside = makeShortcode(\"Aside\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"nav2-node-reference\"\n  }, \"NAv2 node reference\"), mdx(\"h2\", {\n    \"id\": \"main-nodes\"\n  }, \"Main nodes\"), mdx(\"p\", null, \"Main nodes provide deep packet-level information about traffic and attacks for Spectrum customers and Magic Transit customers.\"), mdx(\"p\", null, \"Use the main node to query traffic and attacks at a high level, as seen at the Cloudflare edge:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Product\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Main node\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Spectrum\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"spectrumNetworkAnalyticsAdaptiveGroups\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Magic Transit\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"magicTransitNetworkAnalyticsAdaptiveGroups\"))))), mdx(\"p\", null, \"To query more specific details about attacks, use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#attack-nodes\"\n  }, \"attack nodes\"), \".\"), mdx(\"p\", null, \"Each row represents a packet sample. The sample rate of main nodes is 1/10,000 packets.\"), mdx(\"p\", null, \"If you are using both Magic Transit and Spectrum for IP addresses that overlap, you can use only the Magic Transit node.\"), mdx(\"h2\", {\n    \"id\": \"attack-nodes\"\n  }, \"Attack nodes\"), mdx(\"h3\", {\n    \"id\": \"dosdattackanalyticsadaptivegroups\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"dosdAttackAnalyticsAdaptiveGroups\")), mdx(\"p\", null, \"Provides information about DDoS attacks detected and mitigated by Cloudflare's main DDoS protection system, the denial of service daemon (dosd). This node includes attack metadata such as:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"attackStartDateTime\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"attackEndDatetime\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"attackType\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"attackSourceIp\"))), mdx(\"p\", null, \"Each row represents an attack event. Each attack has a unique ID.\"), mdx(\"p\", null, \"The sample rate is 1/10,000 packets.\"), mdx(Aside, {\n    type: \"note\",\n    header: \"Adjusting attack mitigation\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, \"To adjust mitigation sensitivities and actions, or to define expression filters that exclude or include traffic from mitigation actions, customize the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/waf/ddos-l34-mitigation\"\n  }, \"L3/4 DDoS Managed Ruleset\"), \".\")), mdx(\"h3\", {\n    \"id\": \"dosdnetworkanalyticsadaptivegroups\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"dosdNetworkAnalyticsAdaptiveGroups\")), mdx(\"p\", null, \"Complements the information in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dosdAttackAnalyticsAdaptiveGroups\"), \" node. Provides deep packet-level information about DDoS attack packets mitigated by dosd, including fields such as:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ipProtocol\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ipv4Checksum\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ipv4Options\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tcpSequenceNumber\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tcpChecksum\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"icmpCode\"))), mdx(\"p\", null, \"Each row represents a packet sample. The sample rate is 1/10,000 packets.\"), mdx(\"h3\", {\n    \"id\": \"flowtrackdnetworkanalyticsadaptivegroups\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"flowtrackdNetworkAnalyticsAdaptiveGroups\")), mdx(\"p\", null, \"This node is only available to Magic Transit customers. Provides metadata about out-of-state TCP DDoS attacks mitigated by flowtrackd, Cloudflare\\u2019s Advanced TCP Protection system.\"), mdx(\"p\", null, \"flowtrackd does not use the following ID fields: attack ID, rule ID, and ruleset ID.\"), mdx(\"p\", null, \"The sample rate is dynamic and based on the volume of packets, ranging from 1/100 to 1/10,000 packets.\"), mdx(\"h3\", {\n    \"id\": \"magicfirewallnetworkanalyticsadaptivegroups\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"magicFirewallNetworkAnalyticsAdaptiveGroups\")), mdx(\"p\", null, \"This node is only available to Magic Transit customers. Provides information about packets that were matched against customer-configured \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/magic-firewall/\"\n  }, \"Magic Firewall\"), \" rules.\"), mdx(\"p\", null, \"Each row represents a packet sample that matches a Magic Firewall rule.\"), mdx(\"p\", null, \"Magic Firewall does not use attack IDs, only rule IDs and ruleset IDs.\"), mdx(\"p\", null, \"The sample rate is 1/100 packets.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"","type":null,"updated":null}}},"pageContext":{"id":"c837930a-b145-52ec-9aa9-60ff24607f08","fields":{"slug":"/graphql-api/migration-guides/network-analytics-v2/node-reference"},"frontmatter":{"title":"","type":null,"order":3,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"NAv2 node reference","depth":1}],"tableOfContents":{"items":[{"url":"#nav2-node-reference","title":"NAv2 node reference","items":[{"url":"#main-nodes","title":"Main nodes"},{"url":"#attack-nodes","title":"Attack nodes","items":[{"url":"#dosdattackanalyticsadaptivegroups","title":"dosdAttackAnalyticsAdaptiveGroups"},{"url":"#dosdnetworkanalyticsadaptivegroups","title":"dosdNetworkAnalyticsAdaptiveGroups"},{"url":"#flowtrackdnetworkanalyticsadaptivegroups","title":"flowtrackdNetworkAnalyticsAdaptiveGroups"},{"url":"#magicfirewallnetworkanalyticsadaptivegroups","title":"magicFirewallNetworkAnalyticsAdaptiveGroups"}]}]}]},"parent":{"modifiedTime":"2021-10-26","relativePath":"graphql-api/migration-guides/network-analytics-v2/node-reference.md"}}}