{"expireTime":9007200889996143000,"key":"gatsby-plugin-mdx-entire-payload-abe57cd3d596b1cebdca772343c30051-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Querying Firewall Events with GraphQL","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":40,"offset":40},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":40,"offset":40},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this example, we're going to use the GraphQL Analytics API to query for Firewall Events over a specified time period.","position":{"start":{"line":4,"column":1,"offset":42},"end":{"line":4,"column":121,"offset":162},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":42},"end":{"line":4,"column":121,"offset":162},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following API call will request Firewall Events over a one hour period, and output the requested fields. Be sure to replace CLOUDFLARE_ZONE_ID, CLOUDFLARE_EMAIL, and CLOUDFLARE_API_KEY with your zone tag and API credentials, and adjust the datetime_geg and datetime_leq values to your liking.","position":{"start":{"line":6,"column":1,"offset":164},"end":{"line":6,"column":297,"offset":460},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":164},"end":{"line":6,"column":297,"offset":460},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"API Call","position":{"start":{"line":8,"column":4,"offset":465},"end":{"line":8,"column":12,"offset":473},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":462},"end":{"line":8,"column":12,"offset":473},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"PAYLOAD='{ \"query\":\n  \"query ListFirewallEvents($zoneTag: string, $filter: FirewallEventsAdaptiveFilter_InputObject) {\n      viewer {\n        zones(filter: { zoneTag: $zoneTag }) {\n          firewallEventsAdaptive(\n            filter: $filter\n            limit: 10\n            orderBy: [datetime_DESC]\n          ) {\n            action\n            clientAsn\n            clientCountryName\n            clientIP\n            clientRequestPath\n            clientRequestQuery\n            datetime\n            source\n            userAgent\n          }\n        }\n      }\n    }\",\n    \"variables\": {\n      \"zoneTag\": \"CLOUDFLARE_ZONE_ID\",\n      \"filter\": {\n        \"datetime_geq\": \"2020-04-24T11:00:00Z\",\n        \"datetime_leq\": \"2020-04-24T12:00:00Z\"\n      }\n    }\n  }'\n\ncurl \\\n  -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"X-Auth-Email: CLOUDFLARE_EMAIL\" \\\n  -H \"X-Auth-key: CLOUDFLARE_API_KEY\" \\\n  --data \"$(echo $PAYLOAD)\" \\\n  https://api.cloudflare.com/client/v4/graphql/","position":{"start":{"line":10,"column":1,"offset":475},"end":{"line":49,"column":4,"offset":1459},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The results returned will be in JSON (as requested), so piping the output to ","position":{"start":{"line":51,"column":1,"offset":1461},"end":{"line":51,"column":78,"offset":1538},"indent":[]}},{"type":"inlineCode","value":"jq","position":{"start":{"line":51,"column":78,"offset":1538},"end":{"line":51,"column":82,"offset":1542},"indent":[]}},{"type":"text","value":" will make them easier to read, e.g.,:","position":{"start":{"line":51,"column":82,"offset":1542},"end":{"line":51,"column":120,"offset":1580},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1461},"end":{"line":51,"column":120,"offset":1580},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"curl \\\n  -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"X-Auth-Email: CLOUDFLARE_EMAIL\" \\\n  -H \"X-Auth-key: CLOUDFLARE_API_KEY\" \\\n  --data \"$(echo $PAYLOAD)\" \\\n  https://api.cloudflare.com/client/v4/graphql/ | jq .\n{\n  \"data\": {\n    \"viewer\": {\n      \"zones\": [\n        {\n          \"firewallEventsAdaptive\": [\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"block\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"58224\",\n              \"clientCountryName\": \"IR\",\n              \"clientIP\": \"2.183.175.37\",\n              \"clientRequestPath\": \"/api/v2\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:00:54Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"58224\",\n              \"clientCountryName\": \"IR\",\n              \"clientIP\": \"2.183.175.37\",\n              \"clientRequestPath\": \"/api/v2\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:00:54Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\"\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"errors\": null\n}","position":{"start":{"line":52,"column":1,"offset":1581},"end":{"line":183,"column":4,"offset":7126},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"pcx-content-type\":\"interim\"}","position":{"start":{"line":186,"column":1,"offset":7129},"end":{"line":186,"column":59,"offset":7187},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":186,"column":59,"offset":7187}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"pcx-content-type\": \"interim\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"querying-firewall-events-with-graphql\"\n  }, \"Querying Firewall Events with GraphQL\"), mdx(\"p\", null, \"In this example, we're going to use the GraphQL Analytics API to query for Firewall Events over a specified time period.\"), mdx(\"p\", null, \"The following API call will request Firewall Events over a one hour period, and output the requested fields. Be sure to replace CLOUDFLARE_ZONE_ID, CLOUDFLARE_EMAIL, and CLOUDFLARE_API_KEY with your zone tag and API credentials, and adjust the datetime_geg and datetime_leq values to your liking.\"), mdx(\"h2\", {\n    \"id\": \"api-call\"\n  }, \"API Call\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"PAYLOAD='{ \\\"query\\\":\\n  \\\"query ListFirewallEvents($zoneTag: string, $filter: FirewallEventsAdaptiveFilter_InputObject) {\\n      viewer {\\n        zones(filter: { zoneTag: $zoneTag }) {\\n          firewallEventsAdaptive(\\n            filter: $filter\\n            limit: 10\\n            orderBy: [datetime_DESC]\\n          ) {\\n            action\\n            clientAsn\\n            clientCountryName\\n            clientIP\\n            clientRequestPath\\n            clientRequestQuery\\n            datetime\\n            source\\n            userAgent\\n          }\\n        }\\n      }\\n    }\\\",\\n    \\\"variables\\\": {\\n      \\\"zoneTag\\\": \\\"CLOUDFLARE_ZONE_ID\\\",\\n      \\\"filter\\\": {\\n        \\\"datetime_geq\\\": \\\"2020-04-24T11:00:00Z\\\",\\n        \\\"datetime_leq\\\": \\\"2020-04-24T12:00:00Z\\\"\\n      }\\n    }\\n  }'\\n\\ncurl \\\\\\n  -X POST \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -H \\\"X-Auth-Email: CLOUDFLARE_EMAIL\\\" \\\\\\n  -H \\\"X-Auth-key: CLOUDFLARE_API_KEY\\\" \\\\\\n  --data \\\"$(echo $PAYLOAD)\\\" \\\\\\n  https://api.cloudflare.com/client/v4/graphql/\\n\")), mdx(\"p\", null, \"The results returned will be in JSON (as requested), so piping the output to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jq\"), \" will make them easier to read, e.g.,:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"curl \\\\\\n  -X POST \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -H \\\"X-Auth-Email: CLOUDFLARE_EMAIL\\\" \\\\\\n  -H \\\"X-Auth-key: CLOUDFLARE_API_KEY\\\" \\\\\\n  --data \\\"$(echo $PAYLOAD)\\\" \\\\\\n  https://api.cloudflare.com/client/v4/graphql/ | jq .\\n{\\n  \\\"data\\\": {\\n    \\\"viewer\\\": {\\n      \\\"zones\\\": [\\n        {\\n          \\\"firewallEventsAdaptive\\\": [\\n            {\\n              \\\"action\\\": \\\"log\\\",\\n              \\\"clientAsn\\\": \\\"5089\\\",\\n              \\\"clientCountryName\\\": \\\"GB\\\",\\n              \\\"clientIP\\\": \\\"203.0.113.69\\\",\\n              \\\"clientRequestPath\\\": \\\"/%3Cscript%3Ealert()%3C/script%3E\\\",\\n              \\\"clientRequestQuery\\\": \\\"\\\",\\n              \\\"datetime\\\": \\\"2020-04-24T10:11:24Z\\\",\\n              \\\"source\\\": \\\"waf\\\",\\n              \\\"userAgent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\\\"\\n            },\\n            {\\n              \\\"action\\\": \\\"log\\\",\\n              \\\"clientAsn\\\": \\\"5089\\\",\\n              \\\"clientCountryName\\\": \\\"GB\\\",\\n              \\\"clientIP\\\": \\\"203.0.113.69\\\",\\n              \\\"clientRequestPath\\\": \\\"/%3Cscript%3Ealert()%3C/script%3E\\\",\\n              \\\"clientRequestQuery\\\": \\\"\\\",\\n              \\\"datetime\\\": \\\"2020-04-24T10:11:24Z\\\",\\n              \\\"source\\\": \\\"waf\\\",\\n              \\\"userAgent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\\\"\\n            },\\n            {\\n              \\\"action\\\": \\\"log\\\",\\n              \\\"clientAsn\\\": \\\"5089\\\",\\n              \\\"clientCountryName\\\": \\\"GB\\\",\\n              \\\"clientIP\\\": \\\"203.0.113.69\\\",\\n              \\\"clientRequestPath\\\": \\\"/%3Cscript%3Ealert()%3C/script%3E\\\",\\n              \\\"clientRequestQuery\\\": \\\"\\\",\\n              \\\"datetime\\\": \\\"2020-04-24T10:11:24Z\\\",\\n              \\\"source\\\": \\\"waf\\\",\\n              \\\"userAgent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\\\"\\n            },\\n            {\\n              \\\"action\\\": \\\"log\\\",\\n              \\\"clientAsn\\\": \\\"5089\\\",\\n              \\\"clientCountryName\\\": \\\"GB\\\",\\n              \\\"clientIP\\\": \\\"203.0.113.69\\\",\\n              \\\"clientRequestPath\\\": \\\"/%3Cscript%3Ealert()%3C/script%3E\\\",\\n              \\\"clientRequestQuery\\\": \\\"\\\",\\n              \\\"datetime\\\": \\\"2020-04-24T10:11:24Z\\\",\\n              \\\"source\\\": \\\"waf\\\",\\n              \\\"userAgent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\\\"\\n            },\\n            {\\n              \\\"action\\\": \\\"log\\\",\\n              \\\"clientAsn\\\": \\\"5089\\\",\\n              \\\"clientCountryName\\\": \\\"GB\\\",\\n              \\\"clientIP\\\": \\\"203.0.113.69\\\",\\n              \\\"clientRequestPath\\\": \\\"/%3Cscript%3Ealert()%3C/script%3E\\\",\\n              \\\"clientRequestQuery\\\": \\\"\\\",\\n              \\\"datetime\\\": \\\"2020-04-24T10:11:24Z\\\",\\n              \\\"source\\\": \\\"waf\\\",\\n              \\\"userAgent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\\\"\\n            },\\n            {\\n              \\\"action\\\": \\\"log\\\",\\n              \\\"clientAsn\\\": \\\"5089\\\",\\n              \\\"clientCountryName\\\": \\\"GB\\\",\\n              \\\"clientIP\\\": \\\"203.0.113.69\\\",\\n              \\\"clientRequestPath\\\": \\\"/%3Cscript%3Ealert()%3C/script%3E\\\",\\n              \\\"clientRequestQuery\\\": \\\"\\\",\\n              \\\"datetime\\\": \\\"2020-04-24T10:11:24Z\\\",\\n              \\\"source\\\": \\\"waf\\\",\\n              \\\"userAgent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\\\"\\n            },\\n            {\\n              \\\"action\\\": \\\"log\\\",\\n              \\\"clientAsn\\\": \\\"5089\\\",\\n              \\\"clientCountryName\\\": \\\"GB\\\",\\n              \\\"clientIP\\\": \\\"203.0.113.69\\\",\\n              \\\"clientRequestPath\\\": \\\"/%3Cscript%3Ealert()%3C/script%3E\\\",\\n              \\\"clientRequestQuery\\\": \\\"\\\",\\n              \\\"datetime\\\": \\\"2020-04-24T10:11:24Z\\\",\\n              \\\"source\\\": \\\"waf\\\",\\n              \\\"userAgent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\\\"\\n            },\\n            {\\n              \\\"action\\\": \\\"block\\\",\\n              \\\"clientAsn\\\": \\\"5089\\\",\\n              \\\"clientCountryName\\\": \\\"GB\\\",\\n              \\\"clientIP\\\": \\\"203.0.113.69\\\",\\n              \\\"clientRequestPath\\\": \\\"/%3Cscript%3Ealert()%3C/script%3E\\\",\\n              \\\"clientRequestQuery\\\": \\\"\\\",\\n              \\\"datetime\\\": \\\"2020-04-24T10:11:24Z\\\",\\n              \\\"source\\\": \\\"waf\\\",\\n              \\\"userAgent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\\\"\\n            },\\n            {\\n              \\\"action\\\": \\\"log\\\",\\n              \\\"clientAsn\\\": \\\"58224\\\",\\n              \\\"clientCountryName\\\": \\\"IR\\\",\\n              \\\"clientIP\\\": \\\"2.183.175.37\\\",\\n              \\\"clientRequestPath\\\": \\\"/api/v2\\\",\\n              \\\"clientRequestQuery\\\": \\\"\\\",\\n              \\\"datetime\\\": \\\"2020-04-24T10:00:54Z\\\",\\n              \\\"source\\\": \\\"waf\\\",\\n              \\\"userAgent\\\": \\\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\\\"\\n            },\\n            {\\n              \\\"action\\\": \\\"log\\\",\\n              \\\"clientAsn\\\": \\\"58224\\\",\\n              \\\"clientCountryName\\\": \\\"IR\\\",\\n              \\\"clientIP\\\": \\\"2.183.175.37\\\",\\n              \\\"clientRequestPath\\\": \\\"/api/v2\\\",\\n              \\\"clientRequestQuery\\\": \\\"\\\",\\n              \\\"datetime\\\": \\\"2020-04-24T10:00:54Z\\\",\\n              \\\"source\\\": \\\"waf\\\",\\n              \\\"userAgent\\\": \\\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\\\"\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  },\\n  \\\"errors\\\": null\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"pcx-content-type\": \"interim\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"querying-firewall-events-with-graphql\"\n    }}>{`Querying Firewall Events with GraphQL`}</h1>\n    <p>{`In this example, we're going to use the GraphQL Analytics API to query for Firewall Events over a specified time period.`}</p>\n    <p>{`The following API call will request Firewall Events over a one hour period, and output the requested fields. Be sure to replace CLOUDFLARE_ZONE_ID, CLOUDFLARE_EMAIL, and CLOUDFLARE_API_KEY with your zone tag and API credentials, and adjust the datetime_geg and datetime_leq values to your liking.`}</p>\n    <h2 {...{\n      \"id\": \"api-call\"\n    }}>{`API Call`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`PAYLOAD='{ \"query\":\n  \"query ListFirewallEvents($zoneTag: string, $filter: FirewallEventsAdaptiveFilter_InputObject) {\n      viewer {\n        zones(filter: { zoneTag: $zoneTag }) {\n          firewallEventsAdaptive(\n            filter: $filter\n            limit: 10\n            orderBy: [datetime_DESC]\n          ) {\n            action\n            clientAsn\n            clientCountryName\n            clientIP\n            clientRequestPath\n            clientRequestQuery\n            datetime\n            source\n            userAgent\n          }\n        }\n      }\n    }\",\n    \"variables\": {\n      \"zoneTag\": \"CLOUDFLARE_ZONE_ID\",\n      \"filter\": {\n        \"datetime_geq\": \"2020-04-24T11:00:00Z\",\n        \"datetime_leq\": \"2020-04-24T12:00:00Z\"\n      }\n    }\n  }'\n\ncurl \\\\\n  -X POST \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -H \"X-Auth-Email: CLOUDFLARE_EMAIL\" \\\\\n  -H \"X-Auth-key: CLOUDFLARE_API_KEY\" \\\\\n  --data \"$(echo $PAYLOAD)\" \\\\\n  https://api.cloudflare.com/client/v4/graphql/\n`}</code></pre>\n    <p>{`The results returned will be in JSON (as requested), so piping the output to `}<inlineCode parentName=\"p\">{`jq`}</inlineCode>{` will make them easier to read, e.g.,:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl \\\\\n  -X POST \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -H \"X-Auth-Email: CLOUDFLARE_EMAIL\" \\\\\n  -H \"X-Auth-key: CLOUDFLARE_API_KEY\" \\\\\n  --data \"$(echo $PAYLOAD)\" \\\\\n  https://api.cloudflare.com/client/v4/graphql/ | jq .\n{\n  \"data\": {\n    \"viewer\": {\n      \"zones\": [\n        {\n          \"firewallEventsAdaptive\": [\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"block\",\n              \"clientAsn\": \"5089\",\n              \"clientCountryName\": \"GB\",\n              \"clientIP\": \"203.0.113.69\",\n              \"clientRequestPath\": \"/%3Cscript%3Ealert()%3C/script%3E\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:11:24Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"58224\",\n              \"clientCountryName\": \"IR\",\n              \"clientIP\": \"2.183.175.37\",\n              \"clientRequestPath\": \"/api/v2\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:00:54Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\"\n            },\n            {\n              \"action\": \"log\",\n              \"clientAsn\": \"58224\",\n              \"clientCountryName\": \"IR\",\n              \"clientIP\": \"2.183.175.37\",\n              \"clientRequestPath\": \"/api/v2\",\n              \"clientRequestQuery\": \"\",\n              \"datetime\": \"2020-04-24T10:00:54Z\",\n              \"source\": \"waf\",\n              \"userAgent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\"\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"errors\": null\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}