{"expireTime":9007200889996143000,"key":"gatsby-plugin-mdx-entire-payload-e08136522ea3bc579532ed29890badaf-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Change log for beacon.min.js","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":31,"offset":31},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":31,"offset":31},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Cloudflare occasionally updates the ","position":{"start":{"line":4,"column":1,"offset":33},"end":{"line":4,"column":37,"offset":69},"indent":[]}},{"type":"inlineCode","value":"beacon.min.js","position":{"start":{"line":4,"column":37,"offset":69},"end":{"line":4,"column":52,"offset":84},"indent":[]}},{"type":"text","value":" file to improve Web Analytics functionality. The table below includes a log of what changed in the ","position":{"start":{"line":4,"column":52,"offset":84},"end":{"line":4,"column":152,"offset":184},"indent":[]}},{"type":"inlineCode","value":"beacon.min.js","position":{"start":{"line":4,"column":152,"offset":184},"end":{"line":4,"column":167,"offset":199},"indent":[]}},{"type":"text","value":" file and when.","position":{"start":{"line":4,"column":167,"offset":199},"end":{"line":4,"column":182,"offset":214},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":33},"end":{"line":4,"column":182,"offset":214},"indent":[]}},{"type":"jsx","value":"<table style=\"width:100%\">\n   <thead>\n        <tr>\n            <th>Date of change</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>2021-09-01</td>\n            <td>Improved to report debugging information for Core Web Vitals.</td>\n        </tr>   \n        <tr>\n            <td>2021-05-28</td>\n            <td>startsWith function replaced with indexOf function, which prevents rendering if multiple beacon scripts are loaded.</td>\n        </tr>\n        <tr>\n            <td>2021-05-12</td>\n            <td>Reporting endpoint changed from /cdn-cgi/beacon/performance to /cdn-cgi/rum (for Browser Insights only).</td>\n        </tr>\n   </tbody>\n</table>","position":{"start":{"line":6,"column":1,"offset":216},"end":{"line":27,"column":9,"offset":921},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Change log\",\"order\":40,\"pcx-content-type\":\"reference\"}","position":{"start":{"line":30,"column":1,"offset":924},"end":{"line":30,"column":93,"offset":1016},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":30,"column":93,"offset":1016}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Change log\",\n  \"order\": 40,\n  \"pcx-content-type\": \"reference\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"change-log-for-beaconminjs\"\n  }, \"Change log for beacon.min.js\"), mdx(\"p\", null, \"Cloudflare occasionally updates the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"beacon.min.js\"), \" file to improve Web Analytics functionality. The table below includes a log of what changed in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"beacon.min.js\"), \" file and when.\"), mdx(\"table\", {\n    style: {\n      \"width\": \"100%\"\n    }\n  }, mdx(\"thead\", null, mdx(\"tr\", null, mdx(\"th\", null, \"Date of change\"), mdx(\"th\", null, \"Description\"))), mdx(\"tbody\", null, mdx(\"tr\", null, mdx(\"td\", null, \"2021-09-01\"), mdx(\"td\", null, \"Improved to report debugging information for Core Web Vitals.\")), mdx(\"tr\", null, mdx(\"td\", null, \"2021-05-28\"), mdx(\"td\", null, \"startsWith function replaced with indexOf function, which prevents rendering if multiple beacon scripts are loaded.\")), mdx(\"tr\", null, mdx(\"td\", null, \"2021-05-12\"), mdx(\"td\", null, \"Reporting endpoint changed from /cdn-cgi/beacon/performance to /cdn-cgi/rum (for Browser Insights only).\")))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Change log\",\n  \"order\": 40,\n  \"pcx-content-type\": \"reference\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"change-log-for-beaconminjs\"\n    }}>{`Change log for beacon.min.js`}</h1>\n    <p>{`Cloudflare occasionally updates the `}<inlineCode parentName=\"p\">{`beacon.min.js`}</inlineCode>{` file to improve Web Analytics functionality. The table below includes a log of what changed in the `}<inlineCode parentName=\"p\">{`beacon.min.js`}</inlineCode>{` file and when.`}</p>\n    <table style=\"width:100%\">\n   <thead>\n        <tr>\n            <th>Date of change</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>2021-09-01</td>\n            <td>Improved to report debugging information for Core Web Vitals.</td>\n        </tr>   \n        <tr>\n            <td>2021-05-28</td>\n            <td>startsWith function replaced with indexOf function, which prevents rendering if multiple beacon scripts are loaded.</td>\n        </tr>\n        <tr>\n            <td>2021-05-12</td>\n            <td>Reporting endpoint changed from /cdn-cgi/beacon/performance to /cdn-cgi/rum (for Browser Insights only).</td>\n        </tr>\n   </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}