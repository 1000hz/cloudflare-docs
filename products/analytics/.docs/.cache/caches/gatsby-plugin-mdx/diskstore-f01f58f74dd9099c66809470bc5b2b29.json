{"expireTime":9007200889996143000,"key":"gatsby-plugin-mdx-entire-payload-47a33e10143201e6814e08342a7ffb7a-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Web Analytics for Single Page Applications (SPAs)","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":52,"offset":52},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":52,"offset":52},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Cloudflare Web Analytics enables measuring SPAs automatically by overriding the History API's ","position":{"start":{"line":5,"column":1,"offset":55},"end":{"line":5,"column":95,"offset":149},"indent":[]}},{"type":"inlineCode","value":"pushState","position":{"start":{"line":5,"column":95,"offset":149},"end":{"line":5,"column":106,"offset":160},"indent":[]}},{"type":"text","value":" function and listening to the ","position":{"start":{"line":5,"column":106,"offset":160},"end":{"line":5,"column":137,"offset":191},"indent":[]}},{"type":"inlineCode","value":"onpopstate","position":{"start":{"line":5,"column":137,"offset":191},"end":{"line":5,"column":149,"offset":203},"indent":[]}},{"type":"text","value":". Hash-based router is not supported.","position":{"start":{"line":5,"column":149,"offset":203},"end":{"line":5,"column":186,"offset":240},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":55},"end":{"line":5,"column":186,"offset":240},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To disable measuring SPAs, add the \"spa\" option with a false value in the data attribute as shown below.","position":{"start":{"line":7,"column":1,"offset":242},"end":{"line":7,"column":105,"offset":346},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":242},"end":{"line":7,"column":105,"offset":346},"indent":[]}},{"type":"code","lang":"html","meta":null,"value":"<script \n  defer src='https://static.cloudflareinsights.com/beacon.min.js' \n  data-cf-beacon=' {\"token\": \"42e216b9090ru59384ygu891dce9eecde\", \"spa\": false} '\n  ></script>","position":{"start":{"line":9,"column":1,"offset":348},"end":{"line":14,"column":4,"offset":530},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you are using Google Tag Manager (GTM), use the query string to pass the spa option instead.","position":{"start":{"line":16,"column":1,"offset":532},"end":{"line":16,"column":96,"offset":627},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":532},"end":{"line":16,"column":96,"offset":627},"indent":[]}},{"type":"code","lang":"html","meta":null,"value":"<script \n  defer src='https://static.cloudflareinsights.com/beacon.min.js?token=42e216b9090ru59384ygu891dce9eecde&spa=false'\n  ></script>","position":{"start":{"line":18,"column":1,"offset":629},"end":{"line":22,"column":4,"offset":778},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Web Analytics for SPAs\",\"order\":12,\"pcx-content-type\":\"reference\"}","position":{"start":{"line":25,"column":1,"offset":781},"end":{"line":25,"column":105,"offset":885},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":25,"column":105,"offset":885}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Web Analytics for SPAs\",\n  \"order\": 12,\n  \"pcx-content-type\": \"reference\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"web-analytics-for-single-page-applications-spas\"\n  }, \"Web Analytics for Single Page Applications (SPAs)\"), mdx(\"p\", null, \"Cloudflare Web Analytics enables measuring SPAs automatically by overriding the History API's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pushState\"), \" function and listening to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onpopstate\"), \". Hash-based router is not supported.\"), mdx(\"p\", null, \"To disable measuring SPAs, add the \\\"spa\\\" option with a false value in the data attribute as shown below.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<script \\n  defer src='https://static.cloudflareinsights.com/beacon.min.js' \\n  data-cf-beacon=' {\\\"token\\\": \\\"42e216b9090ru59384ygu891dce9eecde\\\", \\\"spa\\\": false} '\\n  ></script>\\n\")), mdx(\"p\", null, \"If you are using Google Tag Manager (GTM), use the query string to pass the spa option instead.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<script \\n  defer src='https://static.cloudflareinsights.com/beacon.min.js?token=42e216b9090ru59384ygu891dce9eecde&spa=false'\\n  ></script>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Web Analytics for SPAs\",\n  \"order\": 12,\n  \"pcx-content-type\": \"reference\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"web-analytics-for-single-page-applications-spas\"\n    }}>{`Web Analytics for Single Page Applications (SPAs)`}</h1>\n    <p>{`Cloudflare Web Analytics enables measuring SPAs automatically by overriding the History API's `}<inlineCode parentName=\"p\">{`pushState`}</inlineCode>{` function and listening to the `}<inlineCode parentName=\"p\">{`onpopstate`}</inlineCode>{`. Hash-based router is not supported.`}</p>\n    <p>{`To disable measuring SPAs, add the \"spa\" option with a false value in the data attribute as shown below.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<script \n  defer src='https://static.cloudflareinsights.com/beacon.min.js' \n  data-cf-beacon=' {\"token\": \"42e216b9090ru59384ygu891dce9eecde\", \"spa\": false} '\n  ></script>\n`}</code></pre>\n    <p>{`If you are using Google Tag Manager (GTM), use the query string to pass the spa option instead.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<script \n  defer src='https://static.cloudflareinsights.com/beacon.min.js?token=42e216b9090ru59384ygu891dce9eecde&spa=false'\n  ></script>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}