{"componentChunkName":"component---src-components-mdx-custom-renderer-js","path":"/graphql-api/tutorials/querying-magic-firewall-samples","result":{"data":{"mdx":{"id":"e4b5c6a6-7c0c-5261-84dc-5b57ee53568e","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"pcx-content-type\": \"interim\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"querying-magic-firewall-samples-with-graphql\"\n  }, \"Querying Magic Firewall Samples with GraphQL\"), mdx(\"p\", null, \"In this example, we're going to use the GraphQL Analytics API to query for Magic Firewall Samples over a specified time period.\"), mdx(\"p\", null, \"The following API call will request Magic Firewall Samples over a one hour period, and output the requested fields. Be sure to replace CLOUDFLARE_ACCOUNT_ID, CLOUDFLARE_EMAIL, and CLOUDFLARE_API_KEY with your zone tag and API credentials, and adjust the datetime_geg and datetime_leq values to your liking.\"), mdx(\"h2\", {\n    \"id\": \"api-call\"\n  }, \"API Call\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"PAYLOAD='{ \\\"query\\\":\\n  \\\"query MFWActivity {\\n      viewer {\\n        accounts(filter: { accountTag: $accountTag }) {\\n          magicFirewallSamplesAdaptiveGroups(\\n            filter: $filter\\n            limit: 10\\n            orderBy: [datetimeFiveMinute_DESC]\\n          ) {\\n            sum {\\n              bits\\n              packets\\n            }\\n            dimensions {\\n              datetimeFiveMinute\\n              ruleId\\n            }\\n          }\\n        }\\n      }\\n    }\\\",\\n    \\\"variables\\\": {\\n      \\\"accountTag\\\": \\\"$CLOUDFLARE_ACCOUNT_ID\\\",\\n      \\\"filter\\\": {\\n        \\\"datetime_geq\\\": \\\"2021-04-24T11:00:00Z\\\",\\n        \\\"datetime_leq\\\": \\\"2021-04-24T12:00:00Z\\\"\\n      }\\n    }\\n  }'\\n\\ncurl \\\\\\n  -X POST \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -H \\\"X-Auth-Email: CLOUDFLARE_EMAIL\\\" \\\\\\n  -H \\\"X-Auth-key: CLOUDFLARE_API_KEY\\\" \\\\\\n  --data \\\"$(echo $PAYLOAD)\\\" \\\\\\n  https://api.cloudflare.com/client/v4/graphql/\\n\")), mdx(\"p\", null, \"The returned values represent the total number of packets and bits received during the five minute interval for a particular rule. The result will be in JSON (as requested), so piping the output to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jq\"), \" will make it easier to read, e.g.,:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"curl \\\\\\n  -X POST \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -H \\\"X-Auth-Email: CLOUDFLARE_EMAIL\\\" \\\\\\n  -H \\\"X-Auth-key: CLOUDFLARE_API_KEY\\\" \\\\\\n  --data \\\"$(echo $PAYLOAD)\\\" \\\\\\n  https://api.cloudflare.com/client/v4/graphql/ | jq .\\n{\\n  \\\"data\\\": {\\n    \\\"viewer\\\": {\\n      \\\"accounts\\\": [\\n        {\\n          \\\"magicFirewallSamplesAdaptiveGroups\\\": [\\n            {\\n              sum: { bits:  327680, packets: 16384 },\\n              dimensions: {\\n                datetimeFiveMinute: '2021-05-12T22:00-00:00',\\n                ruleId: 'bdfa8f8f0ae142b4a70ef15f6160e532'\\n              }\\n            },\\n            {\\n              sum: { bits:  360448, packets: 8192 },\\n              dimensions: {\\n                datetimeFiveMinute: '2021-05-12T22:05-00:00',\\n                ruleId: 'bdfa8f8f0ae142b4a70ef15f6160e532'\\n              }\\n            },\\n            {\\n              sum: { bits:  327680, packets: 8192 },\\n              dimensions: {\\n                datetimeFiveMinute: '2021-05-12T22:05-00:00',\\n                ruleId: 'bdfa8f8f0ae142b4a70ef15f6160e532'\\n              }\\n            },\\n            {\\n              sum: { bits:  360448, packets: 8192 },\\n              dimensions: {\\n                datetimeFiveMinute: '2021-05-12T22:20-00:00',\\n                ruleId: 'bdfa8f8f0ae142b4a70ef15f6160e532'\\n              }\\n            },\\n            {\\n              sum: { bits:  327680, packets: 8192 },\\n              dimensions: {\\n                datetimeFiveMinute: '2021-05-12T22:20-00:00',\\n                ruleId: 'bdfa8f8f0ae142b4a70ef15f6160e532'\\n              }\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  },\\n  \\\"errors\\\": null\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"","type":null,"updated":null}}},"pageContext":{"id":"e4b5c6a6-7c0c-5261-84dc-5b57ee53568e","fields":{"slug":"/graphql-api/tutorials/querying-magic-firewall-samples"},"frontmatter":{"title":"","type":null,"order":null,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"Querying Magic Firewall Samples with GraphQL","depth":1}],"tableOfContents":{"items":[{"url":"#querying-magic-firewall-samples-with-graphql","title":"Querying Magic Firewall Samples with GraphQL","items":[{"url":"#api-call","title":"API Call"}]}]},"parent":{"modifiedTime":"2021-10-26","relativePath":"graphql-api/tutorials/querying-magic-firewall-samples/index.md"}}},"staticQueryHashes":["1052658729","2814688963","32046230","338033027","811020565"]}