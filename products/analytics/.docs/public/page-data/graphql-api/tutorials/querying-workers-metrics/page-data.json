{"componentChunkName":"component---src-components-mdx-custom-renderer-js","path":"/graphql-api/tutorials/querying-workers-metrics","result":{"data":{"mdx":{"id":"343efc29-a3bd-5c1f-a1e1-5e8927b10247","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Querying Workers Metrics with GraphQL\",\n  \"pcx-content-type\": \"interim\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"querying-workers-metrics-with-graphql\"\n  }, \"Querying Workers Metrics with GraphQL\"), mdx(\"p\", null, \"In this example, we're going to use the GraphQL Analytics API to query for Workers Metrics over a specified time period. We can query up to one week of data for dates up to three months ago.\"), mdx(\"p\", null, \"The following API call will request a Worker script's metrics over a one day period, and output the requested fields. Be sure to replace \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CLOUDFLARE_EMAIL\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CLOUDFLARE_API_KEY\"), \" with your email and API credentials, and adjust the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"datetimeStart\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"datetimeEnd\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"accountTag\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scriptName\"), \" variables as needed.\"), mdx(\"h2\", {\n    \"id\": \"api-call\"\n  }, \"API Call\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"CLOUDFLARE_EMAIL=<CLOUDFLARE_EMAIL>\\nCLOUDFLARE_API_KEY=<CLOUDFLARE_API_KEY>\\nPAYLOAD='{ \\\"query\\\":\\n  \\\"query GetWorkersAnalytics($accountTag: string, $datetimeStart: string, $datetimeEnd: string, $scriptName: string) {\\n      viewer {\\n        accounts(filter: {accountTag: $accountTag}) {\\n          workersInvocationsAdaptive(limit: 100, filter: {\\n            scriptName: $scriptName,\\n            datetime_geq: $datetimeStart,\\n            datetime_leq: $datetimeEnd\\n          }) {\\n            sum {\\n              subrequests\\n              requests\\n              errors\\n            }\\n            quantiles {\\n              cpuTimeP50\\n              cpuTimeP99\\n            }\\n            dimensions{\\n              datetime\\n              scriptName\\n              status\\n            }\\n          }\\n        }\\n      }\\n    }\\\",\\n    \\\"variables\\\": {\\n      \\\"accountTag\\\": \\\"90f518ca7113dc0a91513972ba243ba5\\\",\\n      \\\"datetimeStart\\\": \\\"2020-05-04T00:00:00.000Z\\\",\\n      \\\"datetimeEnd\\\": \\\"2020-05-04T00:00:00.000Z\\\",\\n      \\\"scriptName\\\": \\\"worker-subrequest-test-client\\\"\\n    }\\n  }'\\n\\ncurl \\\\\\n  -X POST \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -H \\\"X-Auth-Email: CLOUDFLARE_EMAIL\\\" \\\\\\n  -H \\\"X-Auth-key: CLOUDFLARE_API_KEY\\\" \\\\\\n  --data \\\"$(echo $PAYLOAD)\\\" \\\\\\n  https://api.cloudflare.com/client/v4/graphql/\\n\")), mdx(\"p\", null, \"The results returned will be in JSON (as requested), so piping the output to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jq\"), \" will make them easier to read, e.g.,:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"curl \\\\\\n  -X POST \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -H \\\"X-Auth-Email: CLOUDFLARE_EMAIL\\\" \\\\\\n  -H \\\"X-Auth-key: CLOUDFLARE_API_KEY\\\" \\\\\\n  --data \\\"$(echo $PAYLOAD)\\\" \\\\\\n  https://api.cloudflare.com/client/v4/graphql/ | jq .\\n{\\n  \\\"data\\\": {\\n    \\\"viewer\\\": {\\n      \\\"accounts\\\": [\\n        {\\n          \\\"workersInvocationsAdaptive\\\": [\\n            {\\n              \\\"dimensions\\\": {\\n                \\\"datetime\\\": \\\"2020-05-04T18:10:35Z\\\",\\n                \\\"scriptName\\\": \\\"worker-subrequest-test-client\\\",\\n                \\\"status\\\": \\\"success\\\"\\n              },\\n              \\\"quantiles\\\": {\\n                \\\"cpuTimeP50\\\": 206,\\n                \\\"cpuTimeP99\\\": 206\\n              },\\n              \\\"sum\\\": {\\n                \\\"errors\\\": 0,\\n                \\\"requests\\\": 1,\\n                \\\"subrequests\\\": 0\\n              }\\n            },\\n            {\\n              \\\"dimensions\\\": {\\n                \\\"datetime\\\": \\\"2020-05-04T18:10:34Z\\\",\\n                \\\"scriptName\\\": \\\"worker-subrequest-test-client\\\",\\n                \\\"status\\\": \\\"success\\\"\\n              },\\n              \\\"quantiles\\\": {\\n                \\\"cpuTimeP50\\\": 291,\\n                \\\"cpuTimeP99\\\": 291\\n              },\\n              \\\"sum\\\": {\\n                \\\"errors\\\": 0,\\n                \\\"requests\\\": 1,\\n                \\\"subrequests\\\": 0\\n              }\\n            },\\n            {\\n              \\\"dimensions\\\": {\\n                \\\"datetime\\\": \\\"2020-05-04T18:10:49Z\\\",\\n                \\\"scriptName\\\": \\\"worker-subrequest-test-client\\\",\\n                \\\"status\\\": \\\"success\\\"\\n              },\\n              \\\"quantiles\\\": {\\n                \\\"cpuTimeP50\\\": 212.5,\\n                \\\"cpuTimeP99\\\": 261.19\\n              },\\n              \\\"sum\\\": {\\n                \\\"errors\\\": 0,\\n                \\\"requests\\\": 4,\\n                \\\"subrequests\\\": 0\\n              }\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  },\\n  \\\"errors\\\": null\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"Querying Workers Metrics with GraphQL","type":null,"updated":null}}},"pageContext":{"id":"343efc29-a3bd-5c1f-a1e1-5e8927b10247","fields":{"slug":"/graphql-api/tutorials/querying-workers-metrics"},"frontmatter":{"title":"Querying Workers Metrics with GraphQL","type":null,"order":null,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"Querying Workers Metrics with GraphQL","depth":1}],"tableOfContents":{"items":[{"url":"#querying-workers-metrics-with-graphql","title":"Querying Workers Metrics with GraphQL","items":[{"url":"#api-call","title":"API Call"}]}]},"parent":{"modifiedTime":"2021-10-26","relativePath":"graphql-api/tutorials/querying-workers-metrics/index.md"}}},"staticQueryHashes":["1052658729","2814688963","32046230","338033027","811020565"]}