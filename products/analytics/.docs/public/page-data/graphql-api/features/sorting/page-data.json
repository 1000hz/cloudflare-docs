{"componentChunkName":"component---src-components-mdx-custom-renderer-js","path":"/graphql-api/features/sorting","result":{"data":{"mdx":{"id":"fed27b43-b84a-54d8-b77c-68384ab91e88","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"order\": 12,\n  \"pcx-content-type\": \"reference\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Aside = makeShortcode(\"Aside\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"sorting\"\n  }, \"Sorting\"), mdx(\"p\", null, \"You can specify the order of the query result elements using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"orderBy\"), \" argument. By default, the results are sorted by the primary key of a data set (table). If you specify another field to sort on, the primary key is also used in the sorting key, allowing results to remain consistent for pagination.\"), mdx(\"p\", null, \"The default order for an aggregated data set is by the fields on which the aggregated data is grouped. If you specify a different order, the aggregation group is appended to your specified ordering.\"), mdx(Aside, {\n    type: \"note\",\n    header: \"Note\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, \"Ordering within nested structures is not supported.\")), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, \"Examples\"), mdx(\"h3\", {\n    \"id\": \"raw-data-sorting\"\n  }, \"Raw data sorting\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"\\nfirewallEventsAdaptive (orderBy: [clientCountryName_ASC]) {\\n    clientCountryName\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"raw-data-sorting-using-multiple-fields\"\n  }, \"Raw data sorting using multiple fields\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"\\nfirewallEventsAdaptive (orderBy: [clientCountryName_ASC, datetime_DESC]) {\\n    clientCountryName\\n    datetime\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"group-sorting-by-aggregation-function\"\n  }, \"Group sorting by aggregation function\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"\\nhttpRequests1hGroups (orderBy: [sum_bytes_DESC]){\\n    sum {\\n        bytes\\n        requests\\n    }\\n    dimensions {\\n        datetime\\n    }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"","type":null,"updated":null}}},"pageContext":{"id":"fed27b43-b84a-54d8-b77c-68384ab91e88","fields":{"slug":"/graphql-api/features/sorting"},"frontmatter":{"title":"","type":null,"order":12,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"Sorting","depth":1}],"tableOfContents":{"items":[{"url":"#sorting","title":"Sorting","items":[{"url":"#examples","title":"Examples","items":[{"url":"#raw-data-sorting","title":"Raw data sorting"},{"url":"#raw-data-sorting-using-multiple-fields","title":"Raw data sorting using multiple fields"},{"url":"#group-sorting-by-aggregation-function","title":"Group sorting by aggregation function"}]}]}]},"parent":{"modifiedTime":"2021-10-26","relativePath":"graphql-api/features/sorting/index.md"}}},"staticQueryHashes":["1052658729","2814688963","32046230","338033027","811020565"]}