{"componentChunkName":"component---src-components-mdx-custom-renderer-js","path":"/graphql-api/errors","result":{"data":{"mdx":{"id":"3bb8ca53-ef42-556c-b47a-769edfae3672","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"order\": 25,\n  \"pcx-content-type\": \"reference\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"error-responses\"\n  }, \"Error responses\"), mdx(\"p\", null, \"The GraphQL Analytics API is a RESTful API based on HTTPS requests and JSON responses and will return familiar HTTP status codes (e.g., \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"404\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"500\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"504\"), \"). However, in contrast to the common REST approach, a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"200\"), \" response can contain an error, conforming to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://graphql.github.io/graphql-spec/June2018/#sec-Errors\"\n  }, \"GraphQL specification\"), \".\"), mdx(\"p\", null, \"All responses contain an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"errors\"), \" array, which will be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"null\"), \" if there are no errors, and include at least one error object if there was an error. Non-null error objects will contain the following fields:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"message\"), \": a string describing the error\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"path\"), \": the nodes associated with the error, starting from the root. Note that the number included in the path array, e.g., \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"0\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"1\"), \", specifies to which zone the error applies; \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"0\"), \" indicates the first zone in the list (or only zone, if only one is being queried).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"timestamp\"), \": UTC datetime when the error occurred\")), mdx(\"h2\", {\n    \"id\": \"example\"\n  }, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"data\\\": null,\\n  \\\"errors\\\": [\\n    {\\n      \\\"message\\\": \\\"cannot request data older than 2678400s\\\",\\n      \\\"path\\\": [\\n        \\\"viewer\\\",\\n        \\\"zones\\\",\\n        \\\"0\\\",\\n        \\\"firewallEventsAdaptiveGroups\\\"\\n      ],\\n      \\\"extensions\\\": {\\n        \\\"timestamp\\\": \\\"2019-12-09T21:27:19.195060142Z\\\"\\n      }\\n    }\\n  ]\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"common-error-types\"\n  }, \"Common error types\"), mdx(\"h3\", {\n    \"id\": \"data-set-accessibility-limits-entitlements-exceeded\"\n  }, \"Data set accessibility limits (entitlements) exceeded\"), mdx(\"p\", null, \"Sample error messages:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\"cannot request data older than...\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\"number of fields can't be more than...\\\"\")), mdx(\"p\", null, \"Indicate that the query exceeds what's allowed for the particular data set under your plan. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"See \", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"/graphql-api/limits/#data-set-accessibility\"\n  }, \"Data set accessibility\")), \" for details.\"), mdx(\"h3\", {\n    \"id\": \"parsing-issues\"\n  }, \"Parsing issues\"), mdx(\"p\", null, \"Sample error messages:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\"error parsing args...\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\"scalar fields must have not selections\\\"\")), mdx(\"p\", null, \"Indicate that the query can't be processed because it's malformed.\"), mdx(\"h3\", {\n    \"id\": \"rate-limits-exceeded\"\n  }, \"Rate limits exceeded\"), mdx(\"p\", null, \"Sample error messages:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\"limit reached, please try reduced time period\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\"quota exceeded, please repeat your request in the next minute\\\"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"","type":null,"updated":null}}},"pageContext":{"id":"3bb8ca53-ef42-556c-b47a-769edfae3672","fields":{"slug":"/graphql-api/errors"},"frontmatter":{"title":"","type":null,"order":25,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"Error responses","depth":1}],"tableOfContents":{"items":[{"url":"#error-responses","title":"Error responses","items":[{"url":"#example","title":"Example"},{"url":"#common-error-types","title":"Common error types","items":[{"url":"#data-set-accessibility-limits-entitlements-exceeded","title":"Data set accessibility limits (entitlements) exceeded"},{"url":"#parsing-issues","title":"Parsing issues"},{"url":"#rate-limits-exceeded","title":"Rate limits exceeded"}]}]}]},"parent":{"modifiedTime":"2021-10-26","relativePath":"graphql-api/errors/index.md"}}},"staticQueryHashes":["1052658729","2814688963","32046230","338033027","811020565"]}