{"expireTime":9007200897961980000,"key":"gatsby-plugin-mdx-entire-payload-7e12dfbe1f73752f5b8c08089c18557d-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import TransformPhaseFields from \"../../../_partials/transform/_transform-phase-fields.md\"","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":91,"offset":91},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Available fields and functions in URL Rewrite Rules","position":{"start":{"line":4,"column":3,"offset":95},"end":{"line":4,"column":54,"offset":146},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":93},"end":{"line":4,"column":54,"offset":146},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Filter expressions","position":{"start":{"line":6,"column":4,"offset":151},"end":{"line":6,"column":22,"offset":169},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":148},"end":{"line":6,"column":22,"offset":169},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A URL Rewrite Rule filter expression (that is, the expression that defines which incoming requests match the rule) can include the following fields:","position":{"start":{"line":8,"column":1,"offset":171},"end":{"line":8,"column":149,"offset":319},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":171},"end":{"line":8,"column":149,"offset":319},"indent":[]}},{"type":"jsx","value":"<TransformPhaseFields/>","position":{"start":{"line":10,"column":1,"offset":321},"end":{"line":10,"column":24,"offset":344},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For information on the available functions, refer to ","position":{"start":{"line":12,"column":1,"offset":346},"end":{"line":12,"column":54,"offset":399},"indent":[]}},{"type":"link","title":null,"url":"https://developers.cloudflare.com/ruleset-engine/rules-language/functions","children":[{"type":"text","value":"Functions","position":{"start":{"line":12,"column":55,"offset":400},"end":{"line":12,"column":64,"offset":409},"indent":[]}}],"position":{"start":{"line":12,"column":54,"offset":399},"end":{"line":12,"column":140,"offset":485},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":12,"column":140,"offset":485},"end":{"line":12,"column":141,"offset":486},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":346},"end":{"line":12,"column":141,"offset":486},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Rewrite expressions","position":{"start":{"line":14,"column":4,"offset":491},"end":{"line":14,"column":23,"offset":510},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":488},"end":{"line":14,"column":23,"offset":510},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A rewrite expression (that is, the expression that defines the dynamic URL rewrite to perform) can only include the following fields:","position":{"start":{"line":16,"column":1,"offset":512},"end":{"line":16,"column":134,"offset":645},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":512},"end":{"line":16,"column":134,"offset":645},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"http.request.uri.*","position":{"start":{"line":18,"column":3,"offset":649},"end":{"line":18,"column":23,"offset":669},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":649},"end":{"line":18,"column":23,"offset":669},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":647},"end":{"line":18,"column":23,"offset":669},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"http.request.headers.*","position":{"start":{"line":19,"column":3,"offset":672},"end":{"line":19,"column":27,"offset":696},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":672},"end":{"line":19,"column":27,"offset":696},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":670},"end":{"line":19,"column":27,"offset":696},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"http.request.accepted_languages","position":{"start":{"line":20,"column":3,"offset":699},"end":{"line":20,"column":36,"offset":732},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":699},"end":{"line":20,"column":36,"offset":732},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":697},"end":{"line":20,"column":36,"offset":732},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":647},"end":{"line":20,"column":36,"offset":732},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Refer to ","position":{"start":{"line":22,"column":1,"offset":734},"end":{"line":22,"column":10,"offset":743},"indent":[]}},{"type":"link","title":null,"url":"https://developers.cloudflare.com/ruleset-engine/rules-language/fields","children":[{"type":"text","value":"Fields","position":{"start":{"line":22,"column":11,"offset":744},"end":{"line":22,"column":17,"offset":750},"indent":[]}}],"position":{"start":{"line":22,"column":10,"offset":743},"end":{"line":22,"column":90,"offset":823},"indent":[]}},{"type":"text","value":" for reference information on these fields.","position":{"start":{"line":22,"column":90,"offset":823},"end":{"line":22,"column":133,"offset":866},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":734},"end":{"line":22,"column":133,"offset":866},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":24,"column":1,"offset":868},"end":{"line":24,"column":5,"offset":872},"indent":[]}},{"type":"inlineCode","value":"concat()","position":{"start":{"line":24,"column":5,"offset":872},"end":{"line":24,"column":15,"offset":882},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":24,"column":15,"offset":882},"end":{"line":24,"column":20,"offset":887},"indent":[]}},{"type":"inlineCode","value":"regex_replace()","position":{"start":{"line":24,"column":20,"offset":887},"end":{"line":24,"column":37,"offset":904},"indent":[]}},{"type":"text","value":" functions can appear only ","position":{"start":{"line":24,"column":37,"offset":904},"end":{"line":24,"column":64,"offset":931},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"once","position":{"start":{"line":24,"column":66,"offset":933},"end":{"line":24,"column":70,"offset":937},"indent":[]}}],"position":{"start":{"line":24,"column":64,"offset":931},"end":{"line":24,"column":72,"offset":939},"indent":[]}},{"type":"text","value":" in a rewrite expression. For more information on these functions, refer to ","position":{"start":{"line":24,"column":72,"offset":939},"end":{"line":24,"column":148,"offset":1015},"indent":[]}},{"type":"link","title":null,"url":"https://developers.cloudflare.com/ruleset-engine/rules-language/functions#transformation-functions","children":[{"type":"text","value":"Transformation functions","position":{"start":{"line":24,"column":149,"offset":1016},"end":{"line":24,"column":173,"offset":1040},"indent":[]}}],"position":{"start":{"line":24,"column":148,"offset":1015},"end":{"line":24,"column":274,"offset":1141},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":24,"column":274,"offset":1141},"end":{"line":24,"column":275,"offset":1142},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":868},"end":{"line":24,"column":275,"offset":1142},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Available fields and functions\",\"order\":2,\"pcx-content-type\":\"reference\"}","position":{"start":{"line":27,"column":1,"offset":1145},"end":{"line":27,"column":112,"offset":1256},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":27,"column":112,"offset":1256}}},"scopeImports":["import TransformPhaseFields from \"../../../_partials/transform/_transform-phase-fields.md\"","import * as React from 'react'"],"scopeIdentifiers":["TransformPhaseFields","React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Available fields and functions\",\n  \"order\": 2,\n  \"pcx-content-type\": \"reference\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"available-fields-and-functions-in-url-rewrite-rules\"\n  }, \"Available fields and functions in URL Rewrite Rules\"), mdx(\"h2\", {\n    \"id\": \"filter-expressions\"\n  }, \"Filter expressions\"), mdx(\"p\", null, \"A URL Rewrite Rule filter expression (that is, the expression that defines which incoming requests match the rule) can include the following fields:\"), mdx(TransformPhaseFields, {\n    mdxType: \"TransformPhaseFields\"\n  }), mdx(\"p\", null, \"For information on the available functions, refer to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/ruleset-engine/rules-language/functions\"\n  }, \"Functions\"), \".\"), mdx(\"h2\", {\n    \"id\": \"rewrite-expressions\"\n  }, \"Rewrite expressions\"), mdx(\"p\", null, \"A rewrite expression (that is, the expression that defines the dynamic URL rewrite to perform) can only include the following fields:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http.request.uri.*\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http.request.headers.*\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http.request.accepted_languages\"))), mdx(\"p\", null, \"Refer to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/ruleset-engine/rules-language/fields\"\n  }, \"Fields\"), \" for reference information on these fields.\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"concat()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"regex_replace()\"), \" functions can appear only \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"once\"), \" in a rewrite expression. For more information on these functions, refer to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/ruleset-engine/rules-language/functions#transformation-functions\"\n  }, \"Transformation functions\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport TransformPhaseFields from \"../../../_partials/transform/_transform-phase-fields.md\"\nexport const _frontmatter = {\n  \"title\": \"Available fields and functions\",\n  \"order\": 2,\n  \"pcx-content-type\": \"reference\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"available-fields-and-functions-in-url-rewrite-rules\"\n    }}>{`Available fields and functions in URL Rewrite Rules`}</h1>\n    <h2 {...{\n      \"id\": \"filter-expressions\"\n    }}>{`Filter expressions`}</h2>\n    <p>{`A URL Rewrite Rule filter expression (that is, the expression that defines which incoming requests match the rule) can include the following fields:`}</p>\n    <TransformPhaseFields mdxType=\"TransformPhaseFields\" />\n    <p>{`For information on the available functions, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.cloudflare.com/ruleset-engine/rules-language/functions\"\n      }}>{`Functions`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"rewrite-expressions\"\n    }}>{`Rewrite expressions`}</h2>\n    <p>{`A rewrite expression (that is, the expression that defines the dynamic URL rewrite to perform) can only include the following fields:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`http.request.uri.*`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`http.request.headers.*`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`http.request.accepted_languages`}</inlineCode></li>\n    </ul>\n    <p>{`Refer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.cloudflare.com/ruleset-engine/rules-language/fields\"\n      }}>{`Fields`}</a>{` for reference information on these fields.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`concat()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`regex_replace()`}</inlineCode>{` functions can appear only `}<strong parentName=\"p\">{`once`}</strong>{` in a rewrite expression. For more information on these functions, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.cloudflare.com/ruleset-engine/rules-language/functions#transformation-functions\"\n      }}>{`Transformation functions`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}