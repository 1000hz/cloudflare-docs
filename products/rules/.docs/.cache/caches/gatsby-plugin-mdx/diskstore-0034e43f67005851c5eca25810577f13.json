{"expireTime":9007200897961981000,"key":"gatsby-plugin-mdx-entire-payload-b24a2924d7a894b421654abf74573b34-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Response header modification API parameter reference","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":55,"offset":55},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":55,"offset":55},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To set an HTTP response header, set the following parameters in the ","position":{"start":{"line":4,"column":1,"offset":57},"end":{"line":4,"column":69,"offset":125},"indent":[]}},{"type":"inlineCode","value":"action_parameters","position":{"start":{"line":4,"column":69,"offset":125},"end":{"line":4,"column":88,"offset":144},"indent":[]}},{"type":"text","value":" field:","position":{"start":{"line":4,"column":88,"offset":144},"end":{"line":4,"column":95,"offset":151},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":57},"end":{"line":4,"column":95,"offset":151},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"operation","position":{"start":{"line":6,"column":5,"offset":157},"end":{"line":6,"column":14,"offset":166},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":155},"end":{"line":6,"column":16,"offset":168},"indent":[]}},{"type":"text","value":": ","position":{"start":{"line":6,"column":16,"offset":168},"end":{"line":6,"column":18,"offset":170},"indent":[]}},{"type":"inlineCode","value":"set","position":{"start":{"line":6,"column":18,"offset":170},"end":{"line":6,"column":23,"offset":175},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":155},"end":{"line":6,"column":23,"offset":175},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":153},"end":{"line":6,"column":23,"offset":175},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Include one of the following parameters to define a static or dynamic value:","position":{"start":{"line":7,"column":3,"offset":178},"end":{"line":7,"column":79,"offset":254},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":178},"end":{"line":7,"column":79,"offset":254},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"value","position":{"start":{"line":9,"column":9,"offset":264},"end":{"line":9,"column":14,"offset":269},"indent":[]}}],"position":{"start":{"line":9,"column":7,"offset":262},"end":{"line":9,"column":16,"offset":271},"indent":[]}},{"type":"text","value":": Specifies a static value for the HTTP response header.","position":{"start":{"line":9,"column":16,"offset":271},"end":{"line":9,"column":72,"offset":327},"indent":[]}}],"position":{"start":{"line":9,"column":7,"offset":262},"end":{"line":9,"column":72,"offset":327},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":258},"end":{"line":9,"column":72,"offset":327},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"expression","position":{"start":{"line":10,"column":9,"offset":336},"end":{"line":10,"column":19,"offset":346},"indent":[]}}],"position":{"start":{"line":10,"column":7,"offset":334},"end":{"line":10,"column":21,"offset":348},"indent":[]}},{"type":"text","value":": Specifies the expression that defines a value for the HTTP response header.","position":{"start":{"line":10,"column":21,"offset":348},"end":{"line":10,"column":98,"offset":425},"indent":[]}}],"position":{"start":{"line":10,"column":7,"offset":334},"end":{"line":10,"column":98,"offset":425},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":330},"end":{"line":10,"column":98,"offset":425},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":258},"end":{"line":10,"column":98,"offset":425},"indent":[3]}}],"position":{"start":{"line":7,"column":1,"offset":176},"end":{"line":10,"column":98,"offset":425},"indent":[1,1,1]}}],"position":{"start":{"line":6,"column":1,"offset":153},"end":{"line":10,"column":98,"offset":425},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To remove an HTTP response header, set the following parameter in the ","position":{"start":{"line":12,"column":1,"offset":427},"end":{"line":12,"column":71,"offset":497},"indent":[]}},{"type":"inlineCode","value":"action_parameters","position":{"start":{"line":12,"column":71,"offset":497},"end":{"line":12,"column":90,"offset":516},"indent":[]}},{"type":"text","value":" field:","position":{"start":{"line":12,"column":90,"offset":516},"end":{"line":12,"column":97,"offset":523},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":427},"end":{"line":12,"column":97,"offset":523},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"operation","position":{"start":{"line":14,"column":5,"offset":529},"end":{"line":14,"column":14,"offset":538},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":527},"end":{"line":14,"column":16,"offset":540},"indent":[]}},{"type":"text","value":": ","position":{"start":{"line":14,"column":16,"offset":540},"end":{"line":14,"column":18,"offset":542},"indent":[]}},{"type":"inlineCode","value":"remove","position":{"start":{"line":14,"column":18,"offset":542},"end":{"line":14,"column":26,"offset":550},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":527},"end":{"line":14,"column":26,"offset":550},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":525},"end":{"line":14,"column":26,"offset":550},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":525},"end":{"line":14,"column":26,"offset":550},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Static header value parameters","position":{"start":{"line":16,"column":4,"offset":555},"end":{"line":16,"column":34,"offset":585},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":552},"end":{"line":16,"column":34,"offset":585},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The full syntax of the ","position":{"start":{"line":18,"column":1,"offset":587},"end":{"line":18,"column":24,"offset":610},"indent":[]}},{"type":"inlineCode","value":"action_parameters","position":{"start":{"line":18,"column":24,"offset":610},"end":{"line":18,"column":43,"offset":629},"indent":[]}},{"type":"text","value":" field to define a static HTTP response header value is the following:","position":{"start":{"line":18,"column":43,"offset":629},"end":{"line":18,"column":113,"offset":699},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":587},"end":{"line":18,"column":113,"offset":699},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"\"action_parameters\": {\n  \"headers\": {\n    \"<HEADER_NAME>\": {\n      \"operation\": \"set\",\n      \"value\": \"<URI_PATH_VALUE>\"\n    }\n  }\n}","position":{"start":{"line":20,"column":1,"offset":701},"end":{"line":29,"column":4,"offset":845},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Dynamic header value parameters","position":{"start":{"line":31,"column":4,"offset":850},"end":{"line":31,"column":35,"offset":881},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":847},"end":{"line":31,"column":35,"offset":881},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The full syntax of the ","position":{"start":{"line":33,"column":1,"offset":883},"end":{"line":33,"column":24,"offset":906},"indent":[]}},{"type":"inlineCode","value":"action_parameters","position":{"start":{"line":33,"column":24,"offset":906},"end":{"line":33,"column":43,"offset":925},"indent":[]}},{"type":"text","value":" field to define a dynamic HTTP response header value using an expression is the following:","position":{"start":{"line":33,"column":43,"offset":925},"end":{"line":33,"column":134,"offset":1016},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":883},"end":{"line":33,"column":134,"offset":1016},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"\"action_parameters\": {\n  \"headers\": {\n    \"<HEADER_NAME>\": { \n      \"operation\": \"set\",\n      \"expression\": \"<EXPRESSION>\"\n    }\n  }\n}","position":{"start":{"line":35,"column":1,"offset":1018},"end":{"line":44,"column":4,"offset":1164},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Aside type='note'>","position":{"start":{"line":46,"column":1,"offset":1166},"end":{"line":46,"column":20,"offset":1185},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Check the ","position":{"start":{"line":48,"column":1,"offset":1187},"end":{"line":48,"column":11,"offset":1197},"indent":[]}},{"type":"link","title":null,"url":"/transform/request-header-modification/reference/fields-functions","children":[{"type":"text","value":"available fields and functions","position":{"start":{"line":48,"column":12,"offset":1198},"end":{"line":48,"column":42,"offset":1228},"indent":[]}}],"position":{"start":{"line":48,"column":11,"offset":1197},"end":{"line":48,"column":110,"offset":1296},"indent":[]}},{"type":"text","value":" you can use in an expression.","position":{"start":{"line":48,"column":110,"offset":1296},"end":{"line":48,"column":140,"offset":1326},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1187},"end":{"line":48,"column":140,"offset":1326},"indent":[]}},{"type":"jsx","value":"</Aside>","position":{"start":{"line":50,"column":1,"offset":1328},"end":{"line":50,"column":9,"offset":1336},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Header removal parameters","position":{"start":{"line":52,"column":4,"offset":1341},"end":{"line":52,"column":29,"offset":1366},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1338},"end":{"line":52,"column":29,"offset":1366},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The full syntax of the ","position":{"start":{"line":54,"column":1,"offset":1368},"end":{"line":54,"column":24,"offset":1391},"indent":[]}},{"type":"inlineCode","value":"action_parameters","position":{"start":{"line":54,"column":24,"offset":1391},"end":{"line":54,"column":43,"offset":1410},"indent":[]}},{"type":"text","value":" field to remove an HTTP response header is the following:","position":{"start":{"line":54,"column":43,"offset":1410},"end":{"line":54,"column":101,"offset":1468},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1368},"end":{"line":54,"column":101,"offset":1468},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"\"action_parameters\": {\n  \"headers\": {\n    \"<HEADER_NAME>\": { \n      \"operation\": \"remove\"\n    }\n  }\n}","position":{"start":{"line":56,"column":1,"offset":1470},"end":{"line":64,"column":4,"offset":1583},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Different header modifications in the same rule","position":{"start":{"line":66,"column":4,"offset":1588},"end":{"line":66,"column":51,"offset":1635},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1585},"end":{"line":66,"column":51,"offset":1635},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The same rule can modify different HTTP response headers using different operations (set or remove a header). For example, a single rule can set the value of a header and remove a different header. The syntax of such a rule could be the following:","position":{"start":{"line":68,"column":1,"offset":1637},"end":{"line":68,"column":248,"offset":1884},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1637},"end":{"line":68,"column":248,"offset":1884},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"\"action_parameters\": {\n  \"headers\": {\n    \"<HEADER_NAME_1>\": { \n      \"operation\": \"set\",\n      \"value\": \"<HEADER_VALUE_1>\"\n    }, \n    \"<HEADER_NAME_2>\": {\n      \"operation\": \"remove\"\n    }\n  }\n}","position":{"start":{"line":70,"column":1,"offset":1886},"end":{"line":82,"column":4,"offset":2094},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"API parameter reference\",\"pcx-content-type\":\"reference\",\"order\":3}","position":{"start":{"line":85,"column":1,"offset":2097},"end":{"line":85,"column":105,"offset":2201},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":85,"column":105,"offset":2201}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"API parameter reference\",\n  \"pcx-content-type\": \"reference\",\n  \"order\": 3\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Aside = makeShortcode(\"Aside\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"response-header-modification-api-parameter-reference\"\n  }, \"Response header modification API parameter reference\"), mdx(\"p\", null, \"To set an HTTP response header, set the following parameters in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"action_parameters\"), \" field:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"operation\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"set\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Include one of the following parameters to define a static or dynamic value:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"value\"), \": Specifies a static value for the HTTP response header.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"expression\"), \": Specifies the expression that defines a value for the HTTP response header.\")))), mdx(\"p\", null, \"To remove an HTTP response header, set the following parameter in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"action_parameters\"), \" field:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"operation\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"remove\"))), mdx(\"h2\", {\n    \"id\": \"static-header-value-parameters\"\n  }, \"Static header value parameters\"), mdx(\"p\", null, \"The full syntax of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"action_parameters\"), \" field to define a static HTTP response header value is the following:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"action_parameters\\\": {\\n  \\\"headers\\\": {\\n    \\\"<HEADER_NAME>\\\": {\\n      \\\"operation\\\": \\\"set\\\",\\n      \\\"value\\\": \\\"<URI_PATH_VALUE>\\\"\\n    }\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"dynamic-header-value-parameters\"\n  }, \"Dynamic header value parameters\"), mdx(\"p\", null, \"The full syntax of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"action_parameters\"), \" field to define a dynamic HTTP response header value using an expression is the following:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"action_parameters\\\": {\\n  \\\"headers\\\": {\\n    \\\"<HEADER_NAME>\\\": { \\n      \\\"operation\\\": \\\"set\\\",\\n      \\\"expression\\\": \\\"<EXPRESSION>\\\"\\n    }\\n  }\\n}\\n\")), mdx(Aside, {\n    type: \"note\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, \"Check the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transform/request-header-modification/reference/fields-functions\"\n  }, \"available fields and functions\"), \" you can use in an expression.\")), mdx(\"h2\", {\n    \"id\": \"header-removal-parameters\"\n  }, \"Header removal parameters\"), mdx(\"p\", null, \"The full syntax of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"action_parameters\"), \" field to remove an HTTP response header is the following:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"action_parameters\\\": {\\n  \\\"headers\\\": {\\n    \\\"<HEADER_NAME>\\\": { \\n      \\\"operation\\\": \\\"remove\\\"\\n    }\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"different-header-modifications-in-the-same-rule\"\n  }, \"Different header modifications in the same rule\"), mdx(\"p\", null, \"The same rule can modify different HTTP response headers using different operations (set or remove a header). For example, a single rule can set the value of a header and remove a different header. The syntax of such a rule could be the following:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"action_parameters\\\": {\\n  \\\"headers\\\": {\\n    \\\"<HEADER_NAME_1>\\\": { \\n      \\\"operation\\\": \\\"set\\\",\\n      \\\"value\\\": \\\"<HEADER_VALUE_1>\\\"\\n    }, \\n    \\\"<HEADER_NAME_2>\\\": {\\n      \\\"operation\\\": \\\"remove\\\"\\n    }\\n  }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"API parameter reference\",\n  \"pcx-content-type\": \"reference\",\n  \"order\": 3\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Aside = makeShortcode(\"Aside\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"response-header-modification-api-parameter-reference\"\n    }}>{`Response header modification API parameter reference`}</h1>\n    <p>{`To set an HTTP response header, set the following parameters in the `}<inlineCode parentName=\"p\">{`action_parameters`}</inlineCode>{` field:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`operation`}</strong>{`: `}<inlineCode parentName=\"p\">{`set`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Include one of the following parameters to define a static or dynamic value:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`value`}</strong>{`: Specifies a static value for the HTTP response header.`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`expression`}</strong>{`: Specifies the expression that defines a value for the HTTP response header.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`To remove an HTTP response header, set the following parameter in the `}<inlineCode parentName=\"p\">{`action_parameters`}</inlineCode>{` field:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`operation`}</strong>{`: `}<inlineCode parentName=\"li\">{`remove`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"static-header-value-parameters\"\n    }}>{`Static header value parameters`}</h2>\n    <p>{`The full syntax of the `}<inlineCode parentName=\"p\">{`action_parameters`}</inlineCode>{` field to define a static HTTP response header value is the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"action_parameters\": {\n  \"headers\": {\n    \"<HEADER_NAME>\": {\n      \"operation\": \"set\",\n      \"value\": \"<URI_PATH_VALUE>\"\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"dynamic-header-value-parameters\"\n    }}>{`Dynamic header value parameters`}</h2>\n    <p>{`The full syntax of the `}<inlineCode parentName=\"p\">{`action_parameters`}</inlineCode>{` field to define a dynamic HTTP response header value using an expression is the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"action_parameters\": {\n  \"headers\": {\n    \"<HEADER_NAME>\": { \n      \"operation\": \"set\",\n      \"expression\": \"<EXPRESSION>\"\n    }\n  }\n}\n`}</code></pre>\n    <Aside type='note' mdxType=\"Aside\">\n      <p>{`Check the `}<a parentName=\"p\" {...{\n          \"href\": \"/transform/request-header-modification/reference/fields-functions\"\n        }}>{`available fields and functions`}</a>{` you can use in an expression.`}</p>\n    </Aside>\n    <h2 {...{\n      \"id\": \"header-removal-parameters\"\n    }}>{`Header removal parameters`}</h2>\n    <p>{`The full syntax of the `}<inlineCode parentName=\"p\">{`action_parameters`}</inlineCode>{` field to remove an HTTP response header is the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"action_parameters\": {\n  \"headers\": {\n    \"<HEADER_NAME>\": { \n      \"operation\": \"remove\"\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"different-header-modifications-in-the-same-rule\"\n    }}>{`Different header modifications in the same rule`}</h2>\n    <p>{`The same rule can modify different HTTP response headers using different operations (set or remove a header). For example, a single rule can set the value of a header and remove a different header. The syntax of such a rule could be the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"action_parameters\": {\n  \"headers\": {\n    \"<HEADER_NAME_1>\": { \n      \"operation\": \"set\",\n      \"value\": \"<HEADER_VALUE_1>\"\n    }, \n    \"<HEADER_NAME_2>\": {\n      \"operation\": \"remove\"\n    }\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}