{"componentChunkName":"component---src-components-mdx-custom-renderer-js","path":"/transform/url-rewrite/create-api","result":{"data":{"mdx":{"id":"bf5e4fa7-8f83-5f59-8024-480a85f86441","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Create a rule via API\",\n  \"pcx-content-type\": \"how-to\",\n  \"type\": \"overview\",\n  \"order\": 2\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"create-a-url-rewrite-rule-via-api\"\n  }, \"Create a URL Rewrite Rule via API\"), mdx(\"p\", null, \"Use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/ruleset-engine/rulesets-api\"\n  }, \"Rulesets API\"), \" to create URL Rewrite Rules via API. Define the rewrite configuration in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"action_parameters\"), \" field. Refer to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transform/url-rewrite/examples\"\n  }, \"URL rewrite examples\"), \" for examples of rule definitions.\"), mdx(\"p\", null, \"When creating a URL Rewrite Rule via API, make sure you:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set the rule action to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rewrite\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Define the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/transform/url-rewrite/reference/parameters\"\n  }, \"URL rewrite parameters\"), \" in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"action_parameters\"), \" field according to the type of URL rewrite (static or dynamic)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deploy the rule to the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http_request_transform\"), \" phase at the zone level\")), mdx(\"hr\", null), mdx(\"p\", null, \"Follow this workflow to create a URL Rewrite Rule for a given zone via API:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/ruleset-engine/rulesets-api/view#list-existing-rulesets\"\n  }, \"List existing rulesets\"), \" method to check if there is already a ruleset for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http_request_transform\"), \" phase at the zone level.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"If the phase ruleset does not exist, create it using the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/ruleset-engine/rulesets-api/create\"\n  }, \"Create ruleset\"), \" method with the zone-level endpoint. In the new ruleset properties, set the following values:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"kind\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"zone\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"phase\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http_request_transform\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/ruleset-engine/rulesets-api/update\"\n  }, \"Update ruleset\"), \" method to add a URL Rewrite Rule to the list of ruleset rules (check the examples below). Alternatively, include the rule in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/ruleset-engine/rulesets-api/create\"\n  }, \"Create ruleset\"), \" request mentioned in the previous step.\"))), mdx(\"h3\", {\n    \"id\": \"examples\"\n  }, \"Examples\"), mdx(\"details\", null, mdx(\"summary\", null, \"Example: Add a rule that performs a static URL rewrite\"), mdx(\"div\", null, mdx(\"p\", null, \"The following example sets the rules of an existing phase ruleset (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{ruleset-id}\"), \") to a single URL Rewrite Rule \\u2014 performing a static rewrite of the URI path \\u2014 using the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/ruleset-engine/rulesets-api/update\"\n  }, \"Update ruleset\"), \" method:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Request\\n---\\ncurl -X PUT \\\\\\n-H \\\"X-Auth-Email: user@cloudflare.com\\\" \\\\\\n-H \\\"X-Auth-Key: REDACTED\\\" \\\\\\n\\\"https://api.cloudflare.com/client/v4/zones/{zone-id}/rulesets/{ruleset-id}\\\" \\\\\\n-d '{\\n  \\\"rules\\\": [\\n    {\\n      \\\"expression\\\": \\\"(http.request.uri.query contains \\\\\\\"eu\\\\\\\")\\\",\\n      \\\"description\\\": \\\"My first static URL Rewrite Rule\\\",\\n      \\\"action\\\": \\\"rewrite\\\",\\n      \\\"action_parameters\\\": {\\n        \\\"uri\\\": {\\n          \\\"path\\\": {\\n            \\\"value\\\": \\\"/emea.html\\\"\\n          }\\n        }\\n      }\\n    }\\n  ]\\n}'\\n\")), mdx(\"p\", null, \"The response contains the complete definition of the ruleset you updated.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Response\\n---\\n{\\n  \\\"result\\\": {\\n    \\\"id\\\": \\\"{ruleset-id}\\\",\\n    \\\"name\\\": \\\"Zone-level Transform Ruleset\\\",\\n    \\\"description\\\": \\\"Zone-level ruleset that will execute Transform Rules.\\\",\\n    \\\"kind\\\": \\\"zone\\\",\\n    \\\"version\\\": \\\"2\\\",\\n    \\\"rules\\\": [\\n      {\\n        \\\"id\\\": \\\"{rule-id}\\\",\\n        \\\"version\\\": \\\"1\\\",\\n        \\\"action\\\": \\\"rewrite\\\",\\n        \\\"action_parameters\\\": {\\n          \\\"uri\\\": {\\n            \\\"path\\\": {\\n              \\\"value\\\": \\\"/emea.html\\\"\\n            }\\n          }\\n        },\\n        \\\"expression\\\": \\\"(http.request.uri.query contains \\\\\\\"eu\\\\\\\")\\\",\\n        \\\"description\\\": \\\"My first static URL Rewrite Rule\\\",\\n        \\\"last_updated\\\": \\\"2021-04-14T14:42:04.219025Z\\\",\\n        \\\"ref\\\": \\\"{rule-ref}\\\"\\n      }\\n    ],\\n    \\\"last_updated\\\": \\\"2021-04-14T14:42:04.219025Z\\\",\\n    \\\"phase\\\": \\\"http_request_transform\\\"\\n  },\\n  \\\"success\\\": true,\\n  \\\"errors\\\": [],\\n  \\\"messages\\\": []\\n}\\n\")))), mdx(\"details\", null, mdx(\"summary\", null, \"Example: Add a rule that performs a dynamic URL rewrite\"), mdx(\"div\", null, mdx(\"p\", null, \"The following example sets the rules of an existing phase ruleset (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{ruleset-id}\"), \") to a single URL Rewrite Rule \\u2014 performing a dynamic rewrite of the URI path \\u2014 using the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/ruleset-engine/rulesets-api/update\"\n  }, \"Update ruleset\"), \" method:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Request\\n---\\ncurl -X PUT \\\\\\n-H \\\"X-Auth-Email: user@cloudflare.com\\\" \\\\\\n-H \\\"X-Auth-Key: REDACTED\\\" \\\\\\n\\\"https://api.cloudflare.com/client/v4/zones/{zone-id}/rulesets/{ruleset-id}\\\" \\\\\\n-d '{\\n  \\\"rules\\\": [\\n    {\\n      \\\"expression\\\": \\\"starts_with(http.request.uri.path, \\\\\\\"/news/2012/\\\\\\\")\\\",\\n      \\\"description\\\": \\\"My first dynamic URL Rewrite Rule\\\",\\n      \\\"action\\\": \\\"rewrite\\\",\\n      \\\"action_parameters\\\": {\\n        \\\"uri\\\": {\\n          \\\"path\\\": {\\n            \\\"expression\\\": \\\"concat(\\\\\\\"/archive\\\\\\\", http.request.uri.path)\\\"\\n          }\\n        }\\n      }\\n    }\\n  ]\\n}'\\n\")), mdx(\"p\", null, \"The response contains the complete definition of the ruleset you updated.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"---\\nheader: Response\\n---\\n{\\n  \\\"result\\\": {\\n    \\\"id\\\": \\\"{ruleset-id}\\\",\\n    \\\"name\\\": \\\"Zone-level Transform Ruleset\\\",\\n    \\\"description\\\": \\\"Zone-level ruleset that will execute Transform Rules.\\\",\\n    \\\"kind\\\": \\\"zone\\\",\\n    \\\"version\\\": \\\"2\\\",\\n    \\\"rules\\\": [\\n      {\\n        \\\"id\\\": \\\"{rule-id}\\\",\\n        \\\"version\\\": \\\"1\\\",\\n        \\\"action\\\": \\\"rewrite\\\",\\n        \\\"action_parameters\\\": {\\n          \\\"uri\\\": {\\n            \\\"path\\\": {\\n              \\\"expression\\\": \\\"concat(\\\\\\\"/archive\\\\\\\", http.request.uri.path)\\\"\\n            }\\n          }\\n        },\\n        \\\"expression\\\": \\\"starts_with(http.request.uri.path, \\\\\\\"/news/2012/\\\\\\\")\\\",\\n        \\\"description\\\": \\\"My first dynamic URL Rewrite Rule\\\",\\n        \\\"last_updated\\\": \\\"2021-04-14T14:42:04.219025Z\\\",\\n        \\\"ref\\\": \\\"{rule-ref}\\\"\\n      }\\n    ],\\n    \\\"last_updated\\\": \\\"2021-04-14T14:42:04.219025Z\\\",\\n    \\\"phase\\\": \\\"http_request_transform\\\"\\n  },\\n  \\\"success\\\": true,\\n  \\\"errors\\\": [],\\n  \\\"messages\\\": []\\n}\\n\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"Create a rule via API","type":"overview","updated":null}}},"pageContext":{"id":"bf5e4fa7-8f83-5f59-8024-480a85f86441","fields":{"slug":"/transform/url-rewrite/create-api"},"frontmatter":{"pcx_content_type":"how-to","title":"Create a rule via API","type":"overview","order":2,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"Create a URL Rewrite Rule via API","depth":1}],"tableOfContents":{"items":[{"url":"#create-a-url-rewrite-rule-via-api","title":"Create a URL Rewrite Rule via API","items":[{"items":[{"url":"#examples","title":"Examples"}]}]}]},"parent":{"modifiedTime":"2022-01-26","relativePath":"transform/url-rewrite/create-api.md"}}},"staticQueryHashes":["2814688963","32046230","338033027","598566803","811020565"]}