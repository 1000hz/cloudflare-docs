{"componentChunkName":"component---src-components-mdx-custom-renderer-js","path":"/transform/url-rewrite/reference/parameters","result":{"data":{"mdx":{"id":"8ddb9bb7-6d63-53a2-8fb9-5bfc0e4fb878","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"API parameter reference\",\n  \"pcx-content-type\": \"reference\",\n  \"order\": 1\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"url-rewrite-api-parameter-reference\"\n  }, \"URL rewrite API parameter reference\"), mdx(\"p\", null, \"Create a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transform/url-rewrite\"\n  }, \"static or dynamic URL rewrite\"), \" based on the parameter name provided in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"action_parameters\"), \" field:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Define the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"value\"), \" parameter to specify a static URL rewrite.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Define the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"expression\"), \" parameter to specify the expression that defines the dynamic URL rewrite to perform.\")), mdx(\"h2\", {\n    \"id\": \"static-url-rewrite-parameters\"\n  }, \"Static URL rewrite parameters\"), mdx(\"p\", null, \"The full syntax of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"action_parameters\"), \" field for a static URL Rewrite Rule that rewrites both the URI path and the query string is the following:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"action_parameters\\\": {\\n  \\\"uri\\\": {\\n    \\\"path\\\": { \\n      \\\"value\\\": \\\"<URI_PATH_VALUE>\\\"\\n    }, \\n    \\\"query\\\": {\\n      \\\"value\\\": \\\"<QUERY_STRING_VALUE>\\\"\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"If you are only rewriting the URI path or the query string, omit the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"query\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"path\"), \" parameter, respectively.\"), mdx(\"h2\", {\n    \"id\": \"dynamic-url-rewrite-parameters\"\n  }, \"Dynamic URL rewrite parameters\"), mdx(\"p\", null, \"The full syntax of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"action_parameters\"), \" field for a dynamic URL Rewrite Rule that rewrites both the URI path and the query string is the following:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"action_parameters\\\": {\\n  \\\"uri\\\": {\\n    \\\"path\\\": { \\n      \\\"expression\\\": \\\"<URI_PATH_EXPRESSION>\\\"\\n    }, \\n    \\\"query\\\": {\\n      \\\"expression\\\": \\\"<QUERY_STRING_EXPRESSION>\\\"\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"If you are only rewriting the URI path or the query string, omit the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"query\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"path\"), \" parameter, respectively.\"), mdx(\"h2\", {\n    \"id\": \"different-url-rewrite-types-in-the-same-rule\"\n  }, \"Different URL rewrite types in the same rule\"), mdx(\"p\", null, \"The same rule can have different types of URL rewrites for the URI path and the query string. For example, a single rule can perform a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dynamic\"), \" URL rewrite of the URI path and a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"static\"), \" URL rewrite of the query string. The syntax of such a rule would be the following:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"action_parameters\\\": {\\n  \\\"uri\\\": {\\n    \\\"path\\\": { \\n      \\\"expression\\\": \\\"<URI_PATH_EXPRESSION>\\\"\\n    }, \\n    \\\"query\\\": {\\n      \\\"value\\\": \\\"<QUERY_STRING_VALUE>\\\"\\n    }\\n  }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"API parameter reference","type":null,"updated":null}}},"pageContext":{"id":"8ddb9bb7-6d63-53a2-8fb9-5bfc0e4fb878","fields":{"slug":"/transform/url-rewrite/reference/parameters"},"frontmatter":{"pcx_content_type":"reference","title":"API parameter reference","type":null,"order":1,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"URL rewrite API parameter reference","depth":1}],"tableOfContents":{"items":[{"url":"#url-rewrite-api-parameter-reference","title":"URL rewrite API parameter reference","items":[{"url":"#static-url-rewrite-parameters","title":"Static URL rewrite parameters"},{"url":"#dynamic-url-rewrite-parameters","title":"Dynamic URL rewrite parameters"},{"url":"#different-url-rewrite-types-in-the-same-rule","title":"Different URL rewrite types in the same rule"}]}]},"parent":{"modifiedTime":"2022-01-26","relativePath":"transform/url-rewrite/reference/parameters.md"}}},"staticQueryHashes":["2814688963","32046230","338033027","598566803","811020565"]}