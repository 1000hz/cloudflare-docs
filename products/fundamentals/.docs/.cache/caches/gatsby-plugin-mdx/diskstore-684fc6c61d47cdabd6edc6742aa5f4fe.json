{"expireTime":9007200897367338000,"key":"gatsby-plugin-mdx-entire-payload-be8ade3ba4387025078fbd76d817c9cb-","val":{"mdast":{"type":"root","children":[{"type":"jsx","value":"<Aside type='note'>","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you have multiple servers and want to proactively prevent origin problems, ","position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":79,"offset":99},"indent":[]}},{"type":"jsx","value":"<a href=\"https://developers.cloudflare.com/load-balancing/about\">","position":{"start":{"line":3,"column":79,"offset":99},"end":{"line":3,"column":144,"offset":164},"indent":[]}},{"type":"text","value":"set up load balancing","position":{"start":{"line":3,"column":144,"offset":164},"end":{"line":3,"column":165,"offset":185},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":3,"column":165,"offset":185},"end":{"line":3,"column":169,"offset":189},"indent":[]}},{"type":"text","value":" as an add-on service.","position":{"start":{"line":3,"column":169,"offset":189},"end":{"line":3,"column":191,"offset":211},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":21},"end":{"line":3,"column":191,"offset":211},"indent":[]}},{"type":"jsx","value":"</Aside>","position":{"start":{"line":5,"column":1,"offset":213},"end":{"line":5,"column":9,"offset":221},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":9,"column":1,"offset":225},"end":{"line":9,"column":31,"offset":255},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":9,"column":31,"offset":255}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Aside = makeShortcode(\"Aside\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Aside, {\n    type: \"note\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, \"If you have multiple servers and want to proactively prevent origin problems, \", mdx(\"a\", {\n    href: \"https://developers.cloudflare.com/load-balancing/about\"\n  }, \"set up load balancing\"), \" as an add-on service.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Aside = makeShortcode(\"Aside\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Aside type='note' mdxType=\"Aside\">\n      <p>{`If you have multiple servers and want to proactively prevent origin problems, `}<a href=\"https://developers.cloudflare.com/load-balancing/about\">{`set up load balancing`}</a>{` as an add-on service.`}</p>\n    </Aside>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}