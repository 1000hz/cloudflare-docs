{"expireTime":9007200897367338000,"key":"gatsby-plugin-mdx-entire-payload-97f0be3958f4afdcda066d50d46bf30a-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"If you have another ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":21,"offset":20},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"A","position":{"start":{"line":1,"column":22,"offset":21},"end":{"line":1,"column":23,"offset":22},"indent":[]}}],"position":{"start":{"line":1,"column":21,"offset":20},"end":{"line":1,"column":24,"offset":23},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":1,"column":24,"offset":23},"end":{"line":1,"column":28,"offset":27},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"AAAA","position":{"start":{"line":1,"column":29,"offset":28},"end":{"line":1,"column":33,"offset":32},"indent":[]}}],"position":{"start":{"line":1,"column":28,"offset":27},"end":{"line":1,"column":34,"offset":33},"indent":[]}},{"type":"text","value":" record in your Cloudflare ","position":{"start":{"line":1,"column":34,"offset":33},"end":{"line":1,"column":61,"offset":60},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"DNS","position":{"start":{"line":1,"column":63,"offset":62},"end":{"line":1,"column":66,"offset":65},"indent":[]}}],"position":{"start":{"line":1,"column":61,"offset":60},"end":{"line":1,"column":68,"offset":67},"indent":[]}},{"type":"text","value":" or your Cloudflare ","position":{"start":{"line":1,"column":68,"offset":67},"end":{"line":1,"column":88,"offset":87},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Load Balancer","position":{"start":{"line":1,"column":90,"offset":89},"end":{"line":1,"column":103,"offset":102},"indent":[]}}],"position":{"start":{"line":1,"column":88,"offset":87},"end":{"line":1,"column":105,"offset":104},"indent":[]}},{"type":"text","value":" provides another origin in the same pool, ","position":{"start":{"line":1,"column":105,"offset":104},"end":{"line":1,"column":148,"offset":147},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Zero-Downtime Failover","position":{"start":{"line":1,"column":150,"offset":149},"end":{"line":1,"column":172,"offset":171},"indent":[]}}],"position":{"start":{"line":1,"column":148,"offset":147},"end":{"line":1,"column":174,"offset":173},"indent":[]}},{"type":"text","value":" automatically retries requests to your origin even before a Load Balancing decision is made. ","position":{"start":{"line":1,"column":174,"offset":173},"end":{"line":1,"column":268,"offset":267},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":268,"offset":267},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Cloudflare currently retries only once for HTTP ","position":{"start":{"line":3,"column":1,"offset":269},"end":{"line":3,"column":49,"offset":317},"indent":[]}},{"type":"link","title":null,"url":"https://support.cloudflare.com/hc/articles/115003011431#521error","children":[{"type":"text","value":"521","position":{"start":{"line":3,"column":50,"offset":318},"end":{"line":3,"column":53,"offset":321},"indent":[]}}],"position":{"start":{"line":3,"column":49,"offset":317},"end":{"line":3,"column":120,"offset":388},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":3,"column":120,"offset":388},"end":{"line":3,"column":122,"offset":390},"indent":[]}},{"type":"link","title":null,"url":"https://support.cloudflare.com/hc/articles/115003011431#522error","children":[{"type":"text","value":"522","position":{"start":{"line":3,"column":123,"offset":391},"end":{"line":3,"column":126,"offset":394},"indent":[]}}],"position":{"start":{"line":3,"column":122,"offset":390},"end":{"line":3,"column":193,"offset":461},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":3,"column":193,"offset":461},"end":{"line":3,"column":199,"offset":467},"indent":[]}},{"type":"link","title":null,"url":"https://support.cloudflare.com/hc/articles/115003011431#523error","children":[{"type":"text","value":"523","position":{"start":{"line":3,"column":200,"offset":468},"end":{"line":3,"column":203,"offset":471},"indent":[]}}],"position":{"start":{"line":3,"column":199,"offset":467},"end":{"line":3,"column":270,"offset":538},"indent":[]}},{"type":"text","value":" response codes.","position":{"start":{"line":3,"column":270,"offset":538},"end":{"line":3,"column":286,"offset":554},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":269},"end":{"line":3,"column":286,"offset":554},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":6,"column":1,"offset":557},"end":{"line":6,"column":31,"offset":587},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":6,"column":31,"offset":587}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If you have another \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"A\"), \" or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"AAAA\"), \" record in your Cloudflare \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DNS\"), \" or your Cloudflare \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Load Balancer\"), \" provides another origin in the same pool, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Zero-Downtime Failover\"), \" automatically retries requests to your origin even before a Load Balancing decision is made. \"), mdx(\"p\", null, \"Cloudflare currently retries only once for HTTP \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://support.cloudflare.com/hc/articles/115003011431#521error\"\n  }, \"521\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://support.cloudflare.com/hc/articles/115003011431#522error\"\n  }, \"522\"), \", and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://support.cloudflare.com/hc/articles/115003011431#523error\"\n  }, \"523\"), \" response codes.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`If you have another `}<em parentName=\"p\">{`A`}</em>{` or `}<em parentName=\"p\">{`AAAA`}</em>{` record in your Cloudflare `}<strong parentName=\"p\">{`DNS`}</strong>{` or your Cloudflare `}<strong parentName=\"p\">{`Load Balancer`}</strong>{` provides another origin in the same pool, `}<strong parentName=\"p\">{`Zero-Downtime Failover`}</strong>{` automatically retries requests to your origin even before a Load Balancing decision is made. `}</p>\n    <p>{`Cloudflare currently retries only once for HTTP `}<a parentName=\"p\" {...{\n        \"href\": \"https://support.cloudflare.com/hc/articles/115003011431#521error\"\n      }}>{`521`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://support.cloudflare.com/hc/articles/115003011431#522error\"\n      }}>{`522`}</a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"https://support.cloudflare.com/hc/articles/115003011431#523error\"\n      }}>{`523`}</a>{` response codes.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}