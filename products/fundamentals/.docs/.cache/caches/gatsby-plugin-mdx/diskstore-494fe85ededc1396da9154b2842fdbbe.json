{"expireTime":9007200897367337000,"key":"gatsby-plugin-mdx-entire-payload-d9beddb08a75bfe8999b568230c043c8-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Analytics Integrations","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":25,"offset":25},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":25,"offset":25},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Cloudflare Enterprise customers can use Cloudflare integrations with their preferred analytics provider and configure ready-to-use Cloudflare Dashboards. Most analytics integrations are built on Cloudflare Logs by using Logpush with either AWS S3 bucket or GCP Storage bucket.","position":{"start":{"line":4,"column":1,"offset":27},"end":{"line":4,"column":277,"offset":303},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":27},"end":{"line":4,"column":277,"offset":303},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Analyze ","position":{"start":{"line":6,"column":1,"offset":305},"end":{"line":6,"column":9,"offset":313},"indent":[]}},{"type":"link","title":null,"url":"https://developers.cloudflare.com/logs/","children":[{"type":"text","value":"Cloudflare Logs","position":{"start":{"line":6,"column":10,"offset":314},"end":{"line":6,"column":25,"offset":329},"indent":[]}}],"position":{"start":{"line":6,"column":9,"offset":313},"end":{"line":6,"column":67,"offset":371},"indent":[]}},{"type":"text","value":" data with the following analytics platforms:","position":{"start":{"line":6,"column":67,"offset":371},"end":{"line":6,"column":112,"offset":416},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":305},"end":{"line":6,"column":112,"offset":416},"indent":[]}},{"type":"jsx","value":"<DirectoryListing path=\"/data-products/analytics-integrations\"/>","position":{"start":{"line":8,"column":1,"offset":418},"end":{"line":8,"column":65,"offset":482},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"order\":100,\"pcx-content-type\":\"navigation\"}","position":{"start":{"line":11,"column":1,"offset":485},"end":{"line":11,"column":74,"offset":558},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":11,"column":74,"offset":558}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"order\": 100,\n  \"pcx-content-type\": \"navigation\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar DirectoryListing = makeShortcode(\"DirectoryListing\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"analytics-integrations\"\n  }, \"Analytics Integrations\"), mdx(\"p\", null, \"Cloudflare Enterprise customers can use Cloudflare integrations with their preferred analytics provider and configure ready-to-use Cloudflare Dashboards. Most analytics integrations are built on Cloudflare Logs by using Logpush with either AWS S3 bucket or GCP Storage bucket.\"), mdx(\"p\", null, \"Analyze \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developers.cloudflare.com/logs/\"\n  }, \"Cloudflare Logs\"), \" data with the following analytics platforms:\"), mdx(DirectoryListing, {\n    path: \"/data-products/analytics-integrations\",\n    mdxType: \"DirectoryListing\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"order\": 100,\n  \"pcx-content-type\": \"navigation\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst DirectoryListing = makeShortcode(\"DirectoryListing\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"analytics-integrations\"\n    }}>{`Analytics Integrations`}</h1>\n    <p>{`Cloudflare Enterprise customers can use Cloudflare integrations with their preferred analytics provider and configure ready-to-use Cloudflare Dashboards. Most analytics integrations are built on Cloudflare Logs by using Logpush with either AWS S3 bucket or GCP Storage bucket.`}</p>\n    <p>{`Analyze `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.cloudflare.com/logs/\"\n      }}>{`Cloudflare Logs`}</a>{` data with the following analytics platforms:`}</p>\n    <DirectoryListing path=\"/data-products/analytics-integrations\" mdxType=\"DirectoryListing\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}