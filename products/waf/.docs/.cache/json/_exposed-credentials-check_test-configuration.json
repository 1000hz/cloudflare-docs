{"data":{"mdx":{"id":"c26db183-fb81-5940-953c-967f8546410c","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"pcx-content-type\": \"reference\",\n  \"order\": 4\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"test-your-exposed-credentials-checks-configuration\"\n  }, \"Test your exposed credentials checks configuration\"), mdx(\"p\", null, \"After enabling and configuring exposed credentials checks, you may want to test if the checks are working properly.\"), mdx(\"p\", null, \"Cloudflare provides a special set of credentials for this purpose:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Login: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"CF_EXPOSED_USERNAME\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"CF_EXPOSED_USERNAME@example.com\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Password: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"CF_EXPOSED_PASSWORD\"))), mdx(\"p\", null, \"The WAF always considers these specific credentials as having been previously exposed. Use them to force an \\\"exposed credentials\\\" event, which allows you to check the behavior of your current configuration.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"","type":null,"updated":null}}},"pageContext":{"id":"c26db183-fb81-5940-953c-967f8546410c","fields":{"slug":"/exposed-credentials-check/test-configuration"},"frontmatter":{"pcx_content_type":"reference","title":"","type":null,"order":4,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"Test your exposed credentials checks configuration","depth":1}],"tableOfContents":{"items":[{"url":"#test-your-exposed-credentials-checks-configuration","title":"Test your exposed credentials checks configuration"}]},"parent":{"modifiedTime":"2022-01-25","relativePath":"exposed-credentials-check/test-configuration.md"}}}