{"expireTime":9007200897882665000,"key":"gatsby-plugin-mdx-entire-payload-5669b6ca51e5bec97359969b30b9f3c3-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"2021-08-31","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":13,"offset":13},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":13,"offset":13},"indent":[]}},{"type":"jsx","value":"<TableWrap><table style=\"width: 100%\">\n    <thead>\n        <tr>\n            <th>\n                Ruleset\n            </th>\n            <th>\n                Rule ID\n            </th>\n            <th>\n                Legacy Rule ID\n            </th>\n            <th>\n                Description\n            </th>\n            <th>\n                Previous Action\n            </th>\n            <th>\n                New Action\n            </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>\n                Specials\n            </td>\n            <td>\n                ...6aa0bef8\n            </td>\n            <td>\n                100201\n            </td>\n            <td>\n                Anomaly:Header:User-Agent - Fake Google Bot\n            </td>\n            <td>\n                Block\n            </td>\n            <td>\n                Block\n            </td>\n        </tr>\n        <tr>\n            <td>\n                Specials\n            </td>\n            <td>\n                ...c12cf9c8\n            </td>\n            <td>\n                100202\n            </td>\n            <td>\n                Anomaly:Header:User-Agent - Fake Bing or MSN Bot\n            </td>\n            <td>\n                Block\n            </td>\n            <td>\n                Block\n            </td>\n        </tr>\n        <tr>\n            <td>\n                Specials\n            </td>\n            <td>\n                ...f6cbb163\n            </td>\n            <td>\n                100203\n            </td>\n            <td>\n                Anomaly:Header:User-Agent - Fake Yandex Bot\n            </td>\n            <td>\n                Block\n            </td>\n            <td>\n                Block\n            </td>\n        </tr>\n        <tr>\n            <td>\n                Specials\n            </td>\n            <td>\n                ...047f06b4\n            </td>\n            <td>\n                100204\n            </td>\n            <td>\n                Anomaly:Header:User-Agent - Fake Baidu Bot\n            </td>\n            <td>\n                Block\n            </td>\n            <td>\n                Block\n            </td>\n        </tr>\n    </tbody>\n</table></TableWrap>","position":{"start":{"line":4,"column":1,"offset":15},"end":{"line":109,"column":21,"offset":2199},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"type\":\"table\",\"order\":931}","position":{"start":{"line":112,"column":1,"offset":2202},"end":{"line":112,"column":57,"offset":2258},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":112,"column":57,"offset":2258}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"table\",\n  \"order\": 931\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar TableWrap = makeShortcode(\"TableWrap\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"2021-08-31\"\n  }, \"2021-08-31\"), mdx(TableWrap, {\n    mdxType: \"TableWrap\"\n  }, mdx(\"table\", {\n    style: {\n      \"width\": \"100%\"\n    }\n  }, mdx(\"thead\", null, mdx(\"tr\", null, mdx(\"th\", null, \"Ruleset\"), mdx(\"th\", null, \"Rule ID\"), mdx(\"th\", null, \"Legacy Rule ID\"), mdx(\"th\", null, \"Description\"), mdx(\"th\", null, \"Previous Action\"), mdx(\"th\", null, \"New Action\"))), mdx(\"tbody\", null, mdx(\"tr\", null, mdx(\"td\", null, \"Specials\"), mdx(\"td\", null, \"...6aa0bef8\"), mdx(\"td\", null, \"100201\"), mdx(\"td\", null, \"Anomaly:Header:User-Agent - Fake Google Bot\"), mdx(\"td\", null, \"Block\"), mdx(\"td\", null, \"Block\")), mdx(\"tr\", null, mdx(\"td\", null, \"Specials\"), mdx(\"td\", null, \"...c12cf9c8\"), mdx(\"td\", null, \"100202\"), mdx(\"td\", null, \"Anomaly:Header:User-Agent - Fake Bing or MSN Bot\"), mdx(\"td\", null, \"Block\"), mdx(\"td\", null, \"Block\")), mdx(\"tr\", null, mdx(\"td\", null, \"Specials\"), mdx(\"td\", null, \"...f6cbb163\"), mdx(\"td\", null, \"100203\"), mdx(\"td\", null, \"Anomaly:Header:User-Agent - Fake Yandex Bot\"), mdx(\"td\", null, \"Block\"), mdx(\"td\", null, \"Block\")), mdx(\"tr\", null, mdx(\"td\", null, \"Specials\"), mdx(\"td\", null, \"...047f06b4\"), mdx(\"td\", null, \"100204\"), mdx(\"td\", null, \"Anomaly:Header:User-Agent - Fake Baidu Bot\"), mdx(\"td\", null, \"Block\"), mdx(\"td\", null, \"Block\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"type\": \"table\",\n  \"order\": 931\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst TableWrap = makeShortcode(\"TableWrap\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"2021-08-31\"\n    }}>{`2021-08-31`}</h1>\n    <TableWrap mdxType=\"TableWrap\"><table style=\"width: 100%\">\n    <thead>\n        <tr>\n            <th>\n                Ruleset\n            </th>\n            <th>\n                Rule ID\n            </th>\n            <th>\n                Legacy Rule ID\n            </th>\n            <th>\n                Description\n            </th>\n            <th>\n                Previous Action\n            </th>\n            <th>\n                New Action\n            </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>\n                Specials\n            </td>\n            <td>\n                ...6aa0bef8\n            </td>\n            <td>\n                100201\n            </td>\n            <td>\n                Anomaly:Header:User-Agent - Fake Google Bot\n            </td>\n            <td>\n                Block\n            </td>\n            <td>\n                Block\n            </td>\n        </tr>\n        <tr>\n            <td>\n                Specials\n            </td>\n            <td>\n                ...c12cf9c8\n            </td>\n            <td>\n                100202\n            </td>\n            <td>\n                Anomaly:Header:User-Agent - Fake Bing or MSN Bot\n            </td>\n            <td>\n                Block\n            </td>\n            <td>\n                Block\n            </td>\n        </tr>\n        <tr>\n            <td>\n                Specials\n            </td>\n            <td>\n                ...f6cbb163\n            </td>\n            <td>\n                100203\n            </td>\n            <td>\n                Anomaly:Header:User-Agent - Fake Yandex Bot\n            </td>\n            <td>\n                Block\n            </td>\n            <td>\n                Block\n            </td>\n        </tr>\n        <tr>\n            <td>\n                Specials\n            </td>\n            <td>\n                ...047f06b4\n            </td>\n            <td>\n                100204\n            </td>\n            <td>\n                Anomaly:Header:User-Agent - Fake Baidu Bot\n            </td>\n            <td>\n                Block\n            </td>\n            <td>\n                Block\n            </td>\n        </tr>\n    </tbody>\n      </table></TableWrap>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}