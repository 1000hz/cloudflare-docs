{"expireTime":9007200897882661000,"key":"gatsby-plugin-mdx-entire-payload-1e1a88aa4df2ee75682f43be6af7e32b-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Log the payload of matched rules","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":35,"offset":35},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":35,"offset":35},"indent":[]}},{"type":"jsx","value":"<Aside type='note'>","position":{"start":{"line":4,"column":1,"offset":37},"end":{"line":4,"column":20,"offset":56},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This feature is only available for customers on an Enterprise plan.","position":{"start":{"line":6,"column":1,"offset":58},"end":{"line":6,"column":68,"offset":125},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":58},"end":{"line":6,"column":68,"offset":125},"indent":[]}},{"type":"jsx","value":"</Aside>","position":{"start":{"line":8,"column":1,"offset":127},"end":{"line":8,"column":9,"offset":135},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The WAF allows you to log the request information that triggered a specific rule of a Managed Ruleset. This information is known as the payload. Payload logging is especially useful when diagnosing the behavior of WAF rules. Since the values that triggered a rule may contain sensitive data, they are encrypted with a customer-provided public key so that only you can examine them later.","position":{"start":{"line":10,"column":1,"offset":137},"end":{"line":10,"column":388,"offset":524},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":137},"end":{"line":10,"column":388,"offset":524},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Each Managed Ruleset has its own payload logging configuration. To enable the feature, configure a public key to encrypt the logged payload by doing one of the following:","position":{"start":{"line":12,"column":1,"offset":526},"end":{"line":12,"column":171,"offset":696},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":526},"end":{"line":12,"column":171,"offset":696},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Generate a key pair directly in the dashboard (Cloudflare will ","position":{"start":{"line":14,"column":3,"offset":700},"end":{"line":14,"column":66,"offset":763},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"only","position":{"start":{"line":14,"column":68,"offset":765},"end":{"line":14,"column":72,"offset":769},"indent":[]}}],"position":{"start":{"line":14,"column":66,"offset":763},"end":{"line":14,"column":74,"offset":771},"indent":[]}},{"type":"text","value":" save the generated public key)","position":{"start":{"line":14,"column":74,"offset":771},"end":{"line":14,"column":105,"offset":802},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":700},"end":{"line":14,"column":105,"offset":802},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":698},"end":{"line":14,"column":105,"offset":802},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Enter your own public key","position":{"start":{"line":15,"column":3,"offset":805},"end":{"line":15,"column":28,"offset":830},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":805},"end":{"line":15,"column":28,"offset":830},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":803},"end":{"line":15,"column":28,"offset":830},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":698},"end":{"line":15,"column":28,"offset":830},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Once enabled, the WAF saves the payload of any rule matches for the Managed Ruleset configured with payload logging, encrypting the payload with your public key.","position":{"start":{"line":17,"column":1,"offset":832},"end":{"line":17,"column":162,"offset":993},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":832},"end":{"line":17,"column":162,"offset":993},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To view the content of the payload in clear text, do one of the following:","position":{"start":{"line":19,"column":1,"offset":995},"end":{"line":19,"column":75,"offset":1069},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":995},"end":{"line":19,"column":75,"offset":1069},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"In the Firewall Analytics page (","position":{"start":{"line":21,"column":3,"offset":1073},"end":{"line":21,"column":35,"offset":1105},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Firewall","position":{"start":{"line":21,"column":37,"offset":1107},"end":{"line":21,"column":45,"offset":1115},"indent":[]}}],"position":{"start":{"line":21,"column":35,"offset":1105},"end":{"line":21,"column":47,"offset":1117},"indent":[]}},{"type":"text","value":" > ","position":{"start":{"line":21,"column":47,"offset":1117},"end":{"line":21,"column":50,"offset":1120},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Overview","position":{"start":{"line":21,"column":52,"offset":1122},"end":{"line":21,"column":60,"offset":1130},"indent":[]}}],"position":{"start":{"line":21,"column":50,"offset":1120},"end":{"line":21,"column":62,"offset":1132},"indent":[]}},{"type":"text","value":"), enter your private key to decrypt the payload of a log entry directly in the browser. See ","position":{"start":{"line":21,"column":62,"offset":1132},"end":{"line":21,"column":155,"offset":1225},"indent":[]}},{"type":"link","title":null,"url":"/managed-rulesets/payload-logging/view","children":[{"type":"text","value":"View the payload content in the dashboard","position":{"start":{"line":21,"column":156,"offset":1226},"end":{"line":21,"column":197,"offset":1267},"indent":[]}}],"position":{"start":{"line":21,"column":155,"offset":1225},"end":{"line":21,"column":238,"offset":1308},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":21,"column":238,"offset":1308},"end":{"line":21,"column":239,"offset":1309},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":1073},"end":{"line":21,"column":239,"offset":1309},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1071},"end":{"line":22,"column":1,"offset":1310},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Decrypt the payload in the command line using the ","position":{"start":{"line":23,"column":3,"offset":1313},"end":{"line":23,"column":53,"offset":1363},"indent":[]}},{"type":"inlineCode","value":"matched-data-cli","position":{"start":{"line":23,"column":53,"offset":1363},"end":{"line":23,"column":71,"offset":1381},"indent":[]}},{"type":"text","value":" tool. See ","position":{"start":{"line":23,"column":71,"offset":1381},"end":{"line":23,"column":82,"offset":1392},"indent":[]}},{"type":"link","title":null,"url":"/managed-rulesets/payload-logging/command-line/decrypt-payload","children":[{"type":"text","value":"Decrypt the payload content in the command line","position":{"start":{"line":23,"column":83,"offset":1393},"end":{"line":23,"column":130,"offset":1440},"indent":[]}}],"position":{"start":{"line":23,"column":82,"offset":1392},"end":{"line":23,"column":195,"offset":1505},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":23,"column":195,"offset":1505},"end":{"line":23,"column":196,"offset":1506},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":1313},"end":{"line":23,"column":196,"offset":1506},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1311},"end":{"line":23,"column":196,"offset":1506},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1071},"end":{"line":23,"column":196,"offset":1506},"indent":[1,1]}},{"type":"jsx","value":"<Aside type='warning' header='Important'>","position":{"start":{"line":25,"column":1,"offset":1508},"end":{"line":25,"column":42,"offset":1549},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"All Cloudflare logs are encrypted at rest. Encrypting the payload content adds a second layer of encryption for the matched values that triggered a WAF rule.","position":{"start":{"line":27,"column":1,"offset":1551},"end":{"line":27,"column":158,"offset":1708},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1551},"end":{"line":27,"column":158,"offset":1708},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Make sure you store your private key safely. If you lose the private key, configure payload logging with a new public key. The payload of new requests will be encrypted with the new public key.","position":{"start":{"line":29,"column":1,"offset":1710},"end":{"line":29,"column":194,"offset":1903},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1710},"end":{"line":29,"column":194,"offset":1903},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Cloudflare cannot decrypt encrypted payloads, since this operation requires your private key. Cloudflare staff will never ask for the private key.","position":{"start":{"line":31,"column":1,"offset":1905},"end":{"line":31,"column":147,"offset":2051},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1905},"end":{"line":31,"column":147,"offset":2051},"indent":[]}},{"type":"jsx","value":"</Aside>","position":{"start":{"line":33,"column":1,"offset":2053},"end":{"line":33,"column":9,"offset":2061},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"pcx-content-type\":\"concept\",\"order\":25}","position":{"start":{"line":36,"column":1,"offset":2064},"end":{"line":36,"column":70,"offset":2133},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":36,"column":70,"offset":2133}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"pcx-content-type\": \"concept\",\n  \"order\": 25\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Aside = makeShortcode(\"Aside\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"log-the-payload-of-matched-rules\"\n  }, \"Log the payload of matched rules\"), mdx(Aside, {\n    type: \"note\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, \"This feature is only available for customers on an Enterprise plan.\")), mdx(\"p\", null, \"The WAF allows you to log the request information that triggered a specific rule of a Managed Ruleset. This information is known as the payload. Payload logging is especially useful when diagnosing the behavior of WAF rules. Since the values that triggered a rule may contain sensitive data, they are encrypted with a customer-provided public key so that only you can examine them later.\"), mdx(\"p\", null, \"Each Managed Ruleset has its own payload logging configuration. To enable the feature, configure a public key to encrypt the logged payload by doing one of the following:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Generate a key pair directly in the dashboard (Cloudflare will \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"only\"), \" save the generated public key)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Enter your own public key\")), mdx(\"p\", null, \"Once enabled, the WAF saves the payload of any rule matches for the Managed Ruleset configured with payload logging, encrypting the payload with your public key.\"), mdx(\"p\", null, \"To view the content of the payload in clear text, do one of the following:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In the Firewall Analytics page (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Firewall\"), \" > \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Overview\"), \"), enter your private key to decrypt the payload of a log entry directly in the browser. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/managed-rulesets/payload-logging/view\"\n  }, \"View the payload content in the dashboard\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Decrypt the payload in the command line using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"matched-data-cli\"), \" tool. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/managed-rulesets/payload-logging/command-line/decrypt-payload\"\n  }, \"Decrypt the payload content in the command line\"), \".\"))), mdx(Aside, {\n    type: \"warning\",\n    header: \"Important\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, \"All Cloudflare logs are encrypted at rest. Encrypting the payload content adds a second layer of encryption for the matched values that triggered a WAF rule.\"), mdx(\"p\", null, \"Make sure you store your private key safely. If you lose the private key, configure payload logging with a new public key. The payload of new requests will be encrypted with the new public key.\"), mdx(\"p\", null, \"Cloudflare cannot decrypt encrypted payloads, since this operation requires your private key. Cloudflare staff will never ask for the private key.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"pcx-content-type\": \"concept\",\n  \"order\": 25\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Aside = makeShortcode(\"Aside\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"log-the-payload-of-matched-rules\"\n    }}>{`Log the payload of matched rules`}</h1>\n    <Aside type='note' mdxType=\"Aside\">\n      <p>{`This feature is only available for customers on an Enterprise plan.`}</p>\n    </Aside>\n    <p>{`The WAF allows you to log the request information that triggered a specific rule of a Managed Ruleset. This information is known as the payload. Payload logging is especially useful when diagnosing the behavior of WAF rules. Since the values that triggered a rule may contain sensitive data, they are encrypted with a customer-provided public key so that only you can examine them later.`}</p>\n    <p>{`Each Managed Ruleset has its own payload logging configuration. To enable the feature, configure a public key to encrypt the logged payload by doing one of the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Generate a key pair directly in the dashboard (Cloudflare will `}<strong parentName=\"li\">{`only`}</strong>{` save the generated public key)`}</li>\n      <li parentName=\"ul\">{`Enter your own public key`}</li>\n    </ul>\n    <p>{`Once enabled, the WAF saves the payload of any rule matches for the Managed Ruleset configured with payload logging, encrypting the payload with your public key.`}</p>\n    <p>{`To view the content of the payload in clear text, do one of the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`In the Firewall Analytics page (`}<strong parentName=\"p\">{`Firewall`}</strong>{` > `}<strong parentName=\"p\">{`Overview`}</strong>{`), enter your private key to decrypt the payload of a log entry directly in the browser. See `}<a parentName=\"p\" {...{\n            \"href\": \"/managed-rulesets/payload-logging/view\"\n          }}>{`View the payload content in the dashboard`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Decrypt the payload in the command line using the `}<inlineCode parentName=\"p\">{`matched-data-cli`}</inlineCode>{` tool. See `}<a parentName=\"p\" {...{\n            \"href\": \"/managed-rulesets/payload-logging/command-line/decrypt-payload\"\n          }}>{`Decrypt the payload content in the command line`}</a>{`.`}</p>\n      </li>\n    </ul>\n    <Aside type='warning' header='Important' mdxType=\"Aside\">\n      <p>{`All Cloudflare logs are encrypted at rest. Encrypting the payload content adds a second layer of encryption for the matched values that triggered a WAF rule.`}</p>\n      <p>{`Make sure you store your private key safely. If you lose the private key, configure payload logging with a new public key. The payload of new requests will be encrypted with the new public key.`}</p>\n      <p>{`Cloudflare cannot decrypt encrypted payloads, since this operation requires your private key. Cloudflare staff will never ask for the private key.`}</p>\n    </Aside>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}