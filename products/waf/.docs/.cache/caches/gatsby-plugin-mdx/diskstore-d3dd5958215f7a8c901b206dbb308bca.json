{"expireTime":9007200897882661000,"key":"gatsby-plugin-mdx-entire-payload-4c180aca36da35561a0fa2acbbe49384-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Decrypt the payload content in the command line","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":50,"offset":50},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":50,"offset":50},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use the ","position":{"start":{"line":4,"column":1,"offset":52},"end":{"line":4,"column":9,"offset":60},"indent":[]}},{"type":"inlineCode","value":"matched-data-cli","position":{"start":{"line":4,"column":9,"offset":60},"end":{"line":4,"column":27,"offset":78},"indent":[]}},{"type":"text","value":" tool to decrypt a payload in the command line.","position":{"start":{"line":4,"column":27,"offset":78},"end":{"line":4,"column":74,"offset":125},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":52},"end":{"line":4,"column":74,"offset":125},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/cloudflare/matched-data-cli/releases","children":[{"type":"text","value":"Download","position":{"start":{"line":6,"column":5,"offset":131},"end":{"line":6,"column":13,"offset":139},"indent":[]}}],"position":{"start":{"line":6,"column":4,"offset":130},"end":{"line":6,"column":71,"offset":197},"indent":[]}},{"type":"text","value":" the ","position":{"start":{"line":6,"column":71,"offset":197},"end":{"line":6,"column":76,"offset":202},"indent":[]}},{"type":"inlineCode","value":"matched-data-cli","position":{"start":{"line":6,"column":76,"offset":202},"end":{"line":6,"column":94,"offset":220},"indent":[]}},{"type":"text","value":" tool for your platform from the ","position":{"start":{"line":6,"column":94,"offset":220},"end":{"line":6,"column":127,"offset":253},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Releases","position":{"start":{"line":6,"column":129,"offset":255},"end":{"line":6,"column":137,"offset":263},"indent":[]}}],"position":{"start":{"line":6,"column":127,"offset":253},"end":{"line":6,"column":139,"offset":265},"indent":[]}},{"type":"text","value":" page on GitHub, under ","position":{"start":{"line":6,"column":139,"offset":265},"end":{"line":6,"column":162,"offset":288},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Assets","position":{"start":{"line":6,"column":164,"offset":290},"end":{"line":6,"column":170,"offset":296},"indent":[]}}],"position":{"start":{"line":6,"column":162,"offset":288},"end":{"line":6,"column":172,"offset":298},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":6,"column":172,"offset":298},"end":{"line":6,"column":173,"offset":299},"indent":[]}}],"position":{"start":{"line":6,"column":4,"offset":130},"end":{"line":6,"column":173,"offset":299},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":127},"end":{"line":7,"column":1,"offset":300},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Extract the content of the downloaded ","position":{"start":{"line":8,"column":4,"offset":304},"end":{"line":8,"column":42,"offset":342},"indent":[]}},{"type":"inlineCode","value":".tar.gz","position":{"start":{"line":8,"column":42,"offset":342},"end":{"line":8,"column":51,"offset":351},"indent":[]}},{"type":"text","value":" file to a local folder.","position":{"start":{"line":8,"column":51,"offset":351},"end":{"line":8,"column":75,"offset":375},"indent":[]}}],"position":{"start":{"line":8,"column":4,"offset":304},"end":{"line":8,"column":75,"offset":375},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":301},"end":{"line":9,"column":1,"offset":376},"indent":[1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Open a command line window and change to the local folder containing the ","position":{"start":{"line":10,"column":4,"offset":380},"end":{"line":10,"column":77,"offset":453},"indent":[]}},{"type":"inlineCode","value":"matched-data-cli","position":{"start":{"line":10,"column":77,"offset":453},"end":{"line":10,"column":95,"offset":471},"indent":[]}},{"type":"text","value":" binary.","position":{"start":{"line":10,"column":95,"offset":471},"end":{"line":10,"column":103,"offset":479},"indent":[]}}],"position":{"start":{"line":10,"column":4,"offset":380},"end":{"line":10,"column":103,"offset":479},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"~ $ cd matched-data-cli","position":{"start":{"line":12,"column":5,"offset":485},"end":{"line":14,"column":8,"offset":526},"indent":[5,5]}}],"position":{"start":{"line":10,"column":1,"offset":377},"end":{"line":15,"column":1,"offset":527},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create two files: one with your private key and another one with the encrypted payload:","position":{"start":{"line":16,"column":4,"offset":531},"end":{"line":16,"column":91,"offset":618},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":531},"end":{"line":16,"column":91,"offset":618},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"~/matched-data-cli $ printf \"<PRIVATE_KEY>\" > private_key.txt && chmod 400 private_key.txt\n\n~/matched-data-cli $ printf \"<ENCRYPTED_PAYLOAD>\" > encrypted_payload.txt","position":{"start":{"line":18,"column":5,"offset":624},"end":{"line":22,"column":8,"offset":811},"indent":[5,1,5,5]}},{"type":"paragraph","children":[{"type":"text","value":"Replace ","position":{"start":{"line":24,"column":5,"offset":817},"end":{"line":24,"column":13,"offset":825},"indent":[]}},{"type":"inlineCode","value":"<PRIVATE_KEY>","position":{"start":{"line":24,"column":13,"offset":825},"end":{"line":24,"column":28,"offset":840},"indent":[]}},{"type":"text","value":" with your private key and ","position":{"start":{"line":24,"column":28,"offset":840},"end":{"line":24,"column":55,"offset":867},"indent":[]}},{"type":"inlineCode","value":"<ENCRYPTED_PAYLOAD>","position":{"start":{"line":24,"column":55,"offset":867},"end":{"line":24,"column":76,"offset":888},"indent":[]}},{"type":"text","value":" with the encrypted payload.","position":{"start":{"line":24,"column":76,"offset":888},"end":{"line":24,"column":104,"offset":916},"indent":[]}}],"position":{"start":{"line":24,"column":5,"offset":817},"end":{"line":24,"column":104,"offset":916},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note: The first ","position":{"start":{"line":26,"column":5,"offset":922},"end":{"line":26,"column":21,"offset":938},"indent":[]}},{"type":"inlineCode","value":"printf","position":{"start":{"line":26,"column":21,"offset":938},"end":{"line":26,"column":29,"offset":946},"indent":[]}},{"type":"text","value":" command will make your private key visible in your command history.","position":{"start":{"line":26,"column":29,"offset":946},"end":{"line":26,"column":97,"offset":1014},"indent":[]}}],"position":{"start":{"line":26,"column":5,"offset":922},"end":{"line":26,"column":97,"offset":1014},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":528},"end":{"line":27,"column":1,"offset":1015},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Run the following command to decrypt the payload:","position":{"start":{"line":28,"column":4,"offset":1019},"end":{"line":28,"column":53,"offset":1068},"indent":[]}}],"position":{"start":{"line":28,"column":4,"offset":1019},"end":{"line":28,"column":53,"offset":1068},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"~/matched-data-cli $ ./matched-data-cli decrypt -k private_key.txt encrypted_payload.txt","position":{"start":{"line":30,"column":5,"offset":1074},"end":{"line":32,"column":8,"offset":1180},"indent":[5,5]}}],"position":{"start":{"line":28,"column":1,"offset":1016},"end":{"line":32,"column":8,"offset":1180},"indent":[1,1,1,1]}}],"position":{"start":{"line":6,"column":1,"offset":127},"end":{"line":32,"column":8,"offset":1180},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Example","position":{"start":{"line":34,"column":4,"offset":1185},"end":{"line":34,"column":11,"offset":1192},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1182},"end":{"line":34,"column":11,"offset":1192},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following example creates two files — one with the private key and another one with the encrypted payload — and runs the ","position":{"start":{"line":36,"column":1,"offset":1194},"end":{"line":36,"column":126,"offset":1319},"indent":[]}},{"type":"inlineCode","value":"matched-data-cli","position":{"start":{"line":36,"column":126,"offset":1319},"end":{"line":36,"column":144,"offset":1337},"indent":[]}},{"type":"text","value":" tool to decrypt the payload in the ","position":{"start":{"line":36,"column":144,"offset":1337},"end":{"line":36,"column":180,"offset":1373},"indent":[]}},{"type":"inlineCode","value":"encrypted_payload.txt","position":{"start":{"line":36,"column":180,"offset":1373},"end":{"line":36,"column":203,"offset":1396},"indent":[]}},{"type":"text","value":" file:","position":{"start":{"line":36,"column":203,"offset":1396},"end":{"line":36,"column":209,"offset":1402},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1194},"end":{"line":36,"column":209,"offset":1402},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"~ $ cd matched-data-cli\n\n~/matched-data-cli $ printf \"uBS5eBttHrqkdY41kbZPdvYnNz8Vj0TvKIUpjB1y/GA=\" > private_key.txt && chmod 400 private_key.txt\n\n~/matched-data-cli $ printf \"AzTY6FHajXYXuDMUte82wrd+1n5CEHPoydYiyd3FMg5IEQAAAAAAAAA0lOhGXBclw8pWU5jbbYuepSIJN5JohTtZekLliJBlVWk=\" > encrypted_payload.txt\n\n~/matched-data-cli $ ./matched-data-cli decrypt -k private_key.txt encrypted_payload.txt\ntest matched data","position":{"start":{"line":38,"column":1,"offset":1404},"end":{"line":47,"column":4,"offset":1824},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Aside type='note' header='Encryption formats'>","position":{"start":{"line":49,"column":1,"offset":1826},"end":{"line":49,"column":48,"offset":1873},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The format of the encrypted payload can change over time. The ","position":{"start":{"line":51,"column":1,"offset":1875},"end":{"line":51,"column":63,"offset":1937},"indent":[]}},{"type":"inlineCode","value":"matched-data-cli","position":{"start":{"line":51,"column":63,"offset":1937},"end":{"line":51,"column":81,"offset":1955},"indent":[]}},{"type":"text","value":" tool returns an error if it cannot decrypt a new encryption format.","position":{"start":{"line":51,"column":81,"offset":1955},"end":{"line":51,"column":149,"offset":2023},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1875},"end":{"line":51,"column":149,"offset":2023},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To fix this error, ","position":{"start":{"line":53,"column":1,"offset":2025},"end":{"line":53,"column":20,"offset":2044},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/cloudflare/matched-data-cli/releases","children":[{"type":"text","value":"download","position":{"start":{"line":53,"column":21,"offset":2045},"end":{"line":53,"column":29,"offset":2053},"indent":[]}}],"position":{"start":{"line":53,"column":20,"offset":2044},"end":{"line":53,"column":87,"offset":2111},"indent":[]}},{"type":"text","value":" a newer version of the tool from GitHub and try again.","position":{"start":{"line":53,"column":87,"offset":2111},"end":{"line":53,"column":142,"offset":2166},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":2025},"end":{"line":53,"column":142,"offset":2166},"indent":[]}},{"type":"jsx","value":"</Aside>","position":{"start":{"line":55,"column":1,"offset":2168},"end":{"line":55,"column":9,"offset":2176},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Decrypt the payload content\",\"pcx-content-type\":\"how-to\",\"order\":2,\"type\":\"overview\"}","position":{"start":{"line":58,"column":1,"offset":2179},"end":{"line":58,"column":124,"offset":2302},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":58,"column":124,"offset":2302}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Decrypt the payload content\",\n  \"pcx-content-type\": \"how-to\",\n  \"order\": 2,\n  \"type\": \"overview\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Aside = makeShortcode(\"Aside\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"decrypt-the-payload-content-in-the-command-line\"\n  }, \"Decrypt the payload content in the command line\"), mdx(\"p\", null, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"matched-data-cli\"), \" tool to decrypt a payload in the command line.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/cloudflare/matched-data-cli/releases\"\n  }, \"Download\"), \" the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"matched-data-cli\"), \" tool for your platform from the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Releases\"), \" page on GitHub, under \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Assets\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Extract the content of the downloaded \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".tar.gz\"), \" file to a local folder.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Open a command line window and change to the local folder containing the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"matched-data-cli\"), \" binary.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"~ $ cd matched-data-cli\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create two files: one with your private key and another one with the encrypted payload:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"~/matched-data-cli $ printf \\\"<PRIVATE_KEY>\\\" > private_key.txt && chmod 400 private_key.txt\\n\\n~/matched-data-cli $ printf \\\"<ENCRYPTED_PAYLOAD>\\\" > encrypted_payload.txt\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Replace \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<PRIVATE_KEY>\"), \" with your private key and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ENCRYPTED_PAYLOAD>\"), \" with the encrypted payload.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Note: The first \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"printf\"), \" command will make your private key visible in your command history.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Run the following command to decrypt the payload:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"~/matched-data-cli $ ./matched-data-cli decrypt -k private_key.txt encrypted_payload.txt\\n\")))), mdx(\"h2\", {\n    \"id\": \"example\"\n  }, \"Example\"), mdx(\"p\", null, \"The following example creates two files \\u2014 one with the private key and another one with the encrypted payload \\u2014 and runs the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"matched-data-cli\"), \" tool to decrypt the payload in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"encrypted_payload.txt\"), \" file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"~ $ cd matched-data-cli\\n\\n~/matched-data-cli $ printf \\\"uBS5eBttHrqkdY41kbZPdvYnNz8Vj0TvKIUpjB1y/GA=\\\" > private_key.txt && chmod 400 private_key.txt\\n\\n~/matched-data-cli $ printf \\\"AzTY6FHajXYXuDMUte82wrd+1n5CEHPoydYiyd3FMg5IEQAAAAAAAAA0lOhGXBclw8pWU5jbbYuepSIJN5JohTtZekLliJBlVWk=\\\" > encrypted_payload.txt\\n\\n~/matched-data-cli $ ./matched-data-cli decrypt -k private_key.txt encrypted_payload.txt\\ntest matched data\\n\")), mdx(Aside, {\n    type: \"note\",\n    header: \"Encryption formats\",\n    mdxType: \"Aside\"\n  }, mdx(\"p\", null, \"The format of the encrypted payload can change over time. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"matched-data-cli\"), \" tool returns an error if it cannot decrypt a new encryption format.\"), mdx(\"p\", null, \"To fix this error, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/cloudflare/matched-data-cli/releases\"\n  }, \"download\"), \" a newer version of the tool from GitHub and try again.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Decrypt the payload content\",\n  \"pcx-content-type\": \"how-to\",\n  \"order\": 2,\n  \"type\": \"overview\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Aside = makeShortcode(\"Aside\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"decrypt-the-payload-content-in-the-command-line\"\n    }}>{`Decrypt the payload content in the command line`}</h1>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`matched-data-cli`}</inlineCode>{` tool to decrypt a payload in the command line.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/cloudflare/matched-data-cli/releases\"\n          }}>{`Download`}</a>{` the `}<inlineCode parentName=\"p\">{`matched-data-cli`}</inlineCode>{` tool for your platform from the `}<strong parentName=\"p\">{`Releases`}</strong>{` page on GitHub, under `}<strong parentName=\"p\">{`Assets`}</strong>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Extract the content of the downloaded `}<inlineCode parentName=\"p\">{`.tar.gz`}</inlineCode>{` file to a local folder.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Open a command line window and change to the local folder containing the `}<inlineCode parentName=\"p\">{`matched-data-cli`}</inlineCode>{` binary.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`~ $ cd matched-data-cli\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create two files: one with your private key and another one with the encrypted payload:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`~/matched-data-cli $ printf \"<PRIVATE_KEY>\" > private_key.txt && chmod 400 private_key.txt\n\n~/matched-data-cli $ printf \"<ENCRYPTED_PAYLOAD>\" > encrypted_payload.txt\n`}</code></pre>\n        <p parentName=\"li\">{`Replace `}<inlineCode parentName=\"p\">{`<PRIVATE_KEY>`}</inlineCode>{` with your private key and `}<inlineCode parentName=\"p\">{`<ENCRYPTED_PAYLOAD>`}</inlineCode>{` with the encrypted payload.`}</p>\n        <p parentName=\"li\">{`Note: The first `}<inlineCode parentName=\"p\">{`printf`}</inlineCode>{` command will make your private key visible in your command history.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the following command to decrypt the payload:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`~/matched-data-cli $ ./matched-data-cli decrypt -k private_key.txt encrypted_payload.txt\n`}</code></pre>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`The following example creates two files — one with the private key and another one with the encrypted payload — and runs the `}<inlineCode parentName=\"p\">{`matched-data-cli`}</inlineCode>{` tool to decrypt the payload in the `}<inlineCode parentName=\"p\">{`encrypted_payload.txt`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`~ $ cd matched-data-cli\n\n~/matched-data-cli $ printf \"uBS5eBttHrqkdY41kbZPdvYnNz8Vj0TvKIUpjB1y/GA=\" > private_key.txt && chmod 400 private_key.txt\n\n~/matched-data-cli $ printf \"AzTY6FHajXYXuDMUte82wrd+1n5CEHPoydYiyd3FMg5IEQAAAAAAAAA0lOhGXBclw8pWU5jbbYuepSIJN5JohTtZekLliJBlVWk=\" > encrypted_payload.txt\n\n~/matched-data-cli $ ./matched-data-cli decrypt -k private_key.txt encrypted_payload.txt\ntest matched data\n`}</code></pre>\n    <Aside type='note' header='Encryption formats' mdxType=\"Aside\">\n      <p>{`The format of the encrypted payload can change over time. The `}<inlineCode parentName=\"p\">{`matched-data-cli`}</inlineCode>{` tool returns an error if it cannot decrypt a new encryption format.`}</p>\n      <p>{`To fix this error, `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/cloudflare/matched-data-cli/releases\"\n        }}>{`download`}</a>{` a newer version of the tool from GitHub and try again.`}</p>\n    </Aside>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}