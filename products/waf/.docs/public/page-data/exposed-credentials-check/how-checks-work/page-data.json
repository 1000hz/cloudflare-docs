{"componentChunkName":"component---src-components-mdx-custom-renderer-js","path":"/exposed-credentials-check/how-checks-work","result":{"data":{"mdx":{"id":"c89d4092-2683-5e1f-aaea-2d046fb34974","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"pcx-content-type\": \"concept\",\n  \"order\": 1\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"how-exposed-credentials-checks-work\"\n  }, \"How exposed credentials checks work\"), mdx(\"p\", null, \"WAF rules can include a check for exposed credentials. When enabled in a given rule, exposed credentials checking happens when there is a match for the rule expression (that is, the rule expression evaluates to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \"). \"), mdx(\"p\", null, \"At this point, the WAF looks up the username/password pair in the request against a database of publicly available stolen credentials. When both the rule expression and the exposed credentials check are true, there is a rule match, and Cloudflare performs the action configured in the rule.\"), mdx(\"p\", null, \"For example, the following rule blocks \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"POST\"), \" requests to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/login.php\"), \" URI when Cloudflare identifies the submitted credentials as previously exposed:\"), mdx(Example, {\n    mdxType: \"Example\"\n  }, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Rule #1\")), mdx(\"p\", null, \"Rule expression:\", mdx(\"br\", null), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http.request.method == \\\"POST\\\" and http.request.uri == \\\"/login.php\\\"\")), mdx(\"p\", null, \"Exposed credentials check with the following configuration:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Username expression: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http.request.body.form[\\\"user_id\\\"]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Password expression: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http.request.body.form[\\\"password\\\"]\"))), mdx(\"p\", null, \"Action: \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Challenge (Captcha)\"))), mdx(\"p\", null, \"When there is a match for the rule above and Cloudflare detects exposed credentials, the WAF presents the user with a challenge.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"demo":null,"difficulty":null,"summary":null,"tags":null,"title":"","type":null,"updated":null}}},"pageContext":{"id":"c89d4092-2683-5e1f-aaea-2d046fb34974","fields":{"slug":"/exposed-credentials-check/how-checks-work"},"frontmatter":{"pcx_content_type":"concept","title":"","type":null,"order":1,"hidden":null,"hideChildren":null,"breadcrumbs":null},"headings":[{"value":"How exposed credentials checks work","depth":1}],"tableOfContents":{"items":[{"url":"#how-exposed-credentials-checks-work","title":"How exposed credentials checks work"}]},"parent":{"modifiedTime":"2022-01-25","relativePath":"exposed-credentials-check/how-checks-work.md"}}},"staticQueryHashes":["2814688963","32046230","338033027","598566803","811020565"]}