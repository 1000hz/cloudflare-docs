{"expireTime":9007200897437494000,"key":"gatsby-plugin-mdx-entire-payload-de7def478b34a21687c95fd6b96c1a28-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Advanced usage","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":17,"offset":17},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":17,"offset":17},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This section covers two advanced use cases with API Tokens:","position":{"start":{"line":4,"column":1,"offset":19},"end":{"line":4,"column":60,"offset":78},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":19},"end":{"line":4,"column":60,"offset":78},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/tokens/advanced/restrictions","children":[{"type":"text","value":"Restricting the use of Tokens","position":{"start":{"line":6,"column":5,"offset":84},"end":{"line":6,"column":34,"offset":113},"indent":[]}}],"position":{"start":{"line":6,"column":4,"offset":83},"end":{"line":6,"column":66,"offset":145},"indent":[]}}],"position":{"start":{"line":6,"column":4,"offset":83},"end":{"line":6,"column":66,"offset":145},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":80},"end":{"line":6,"column":66,"offset":145},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/tokens/advanced/api","children":[{"type":"text","value":"Creating Tokens via the API","position":{"start":{"line":7,"column":5,"offset":150},"end":{"line":7,"column":32,"offset":177},"indent":[]}}],"position":{"start":{"line":7,"column":4,"offset":149},"end":{"line":7,"column":55,"offset":200},"indent":[]}}],"position":{"start":{"line":7,"column":4,"offset":149},"end":{"line":7,"column":55,"offset":200},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":146},"end":{"line":7,"column":55,"offset":200},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":80},"end":{"line":7,"column":55,"offset":200},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {\"order\":6}","position":{"start":{"line":10,"column":1,"offset":203},"end":{"line":10,"column":40,"offset":242},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":10,"column":40,"offset":242}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"order\": 6\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"advanced-usage\"\n  }, \"Advanced usage\"), mdx(\"p\", null, \"This section covers two advanced use cases with API Tokens:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/tokens/advanced/restrictions\"\n  }, \"Restricting the use of Tokens\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/tokens/advanced/api\"\n  }, \"Creating Tokens via the API\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"order\": 6\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"advanced-usage\"\n    }}>{`Advanced usage`}</h1>\n    <p>{`This section covers two advanced use cases with API Tokens:`}</p>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"/tokens/advanced/restrictions\"\n        }}>{`Restricting the use of Tokens`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"/tokens/advanced/api\"\n        }}>{`Creating Tokens via the API`}</a></li>\n    </ol>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}