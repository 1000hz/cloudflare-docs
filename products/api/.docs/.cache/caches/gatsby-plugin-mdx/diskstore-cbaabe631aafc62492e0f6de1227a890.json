{"expireTime":9007200897437494000,"key":"gatsby-plugin-mdx-entire-payload-6f2c273ade61c683c7f3c2aa7445de37-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"API tokens and keys","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":22,"offset":22},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":22,"offset":22},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When you use the Cloudflare API, you need to authenticate your requests so we know who you are and what permissions you have.","position":{"start":{"line":4,"column":1,"offset":24},"end":{"line":4,"column":126,"offset":149},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":24},"end":{"line":4,"column":126,"offset":149},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Because of various ","position":{"start":{"line":6,"column":1,"offset":151},"end":{"line":6,"column":20,"offset":170},"indent":[]}},{"type":"link","title":null,"url":"/keys#limitations","children":[{"type":"text","value":"limitations","position":{"start":{"line":6,"column":21,"offset":171},"end":{"line":6,"column":32,"offset":182},"indent":[]}}],"position":{"start":{"line":6,"column":20,"offset":170},"end":{"line":6,"column":52,"offset":202},"indent":[]}},{"type":"text","value":" related to API keys, API Tokens are the recommended way to interact with Cloudflare’s API.","position":{"start":{"line":6,"column":52,"offset":202},"end":{"line":6,"column":143,"offset":293},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":151},"end":{"line":6,"column":143,"offset":293},"indent":[]}},{"type":"jsx","value":"<DirectoryListing path=\"/tokens\"/>","position":{"start":{"line":8,"column":1,"offset":295},"end":{"line":8,"column":35,"offset":329},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"API tokens\",\"order\":6}","position":{"start":{"line":11,"column":1,"offset":332},"end":{"line":11,"column":61,"offset":392},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":11,"column":61,"offset":392}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"API tokens\",\n  \"order\": 6\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar DirectoryListing = makeShortcode(\"DirectoryListing\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"api-tokens-and-keys\"\n  }, \"API tokens and keys\"), mdx(\"p\", null, \"When you use the Cloudflare API, you need to authenticate your requests so we know who you are and what permissions you have.\"), mdx(\"p\", null, \"Because of various \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/keys#limitations\"\n  }, \"limitations\"), \" related to API keys, API Tokens are the recommended way to interact with Cloudflare\\u2019s API.\"), mdx(DirectoryListing, {\n    path: \"/tokens\",\n    mdxType: \"DirectoryListing\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"API tokens\",\n  \"order\": 6\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst DirectoryListing = makeShortcode(\"DirectoryListing\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"api-tokens-and-keys\"\n    }}>{`API tokens and keys`}</h1>\n    <p>{`When you use the Cloudflare API, you need to authenticate your requests so we know who you are and what permissions you have.`}</p>\n    <p>{`Because of various `}<a parentName=\"p\" {...{\n        \"href\": \"/keys#limitations\"\n      }}>{`limitations`}</a>{` related to API keys, API Tokens are the recommended way to interact with Cloudflare’s API.`}</p>\n    <DirectoryListing path=\"/tokens\" mdxType=\"DirectoryListing\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}